%% coding: utf-8
{script,
    {"countdownplus_app","0.1.0"},
    [{preLoaded,
         [atomics,counters,erl_init,erl_prim_loader,erl_tracer,erlang,
          erts_code_purger,erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,persistent_term,prim_buffer,
          prim_eval,prim_file,prim_inet,prim_net,prim_socket,prim_zip,
          socket_registry,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-7.2.1/ebin","$ROOT/lib/stdlib-3.14/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-7.2.1/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_compile_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,erl_signal_handler,
          erpc,erts_debug,gen_sctp,gen_tcp,gen_tcp_socket,gen_udp,global,
          global_group,global_search,group,group_history,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel_config,kernel_refc,
          local_tcp,local_udp,logger_disk_log_h,logger_formatter,
          logger_h_common,logger_handler_watcher,logger_olp,logger_proxy,
          logger_std_h,logger_sup,net,net_adm,net_kernel,os,pg,pg2,ram_file,
          raw_file_io,raw_file_io_compressed,raw_file_io_deflate,
          raw_file_io_delayed,raw_file_io_inflate,raw_file_io_list,
          raw_file_io_raw,rpc,seq_trace,socket,standard_error,user,user_drv,
          user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-3.14/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_internal,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,eval_bits,
          file_sorter,filelib,gb_sets,gb_trees,gen_fsm,gen_statem,io,io_lib,
          io_lib_format,io_lib_fread,io_lib_pretty,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proplists,qlc,qlc_pt,
          queue,rand,random,re,sets,shell,shell_default,shell_docs,slave,sofs,
          string,supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/compiler-7.6.6/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_call_types,beam_clean,beam_dict,
          beam_digraph,beam_disasm,beam_flatten,beam_jump,beam_kernel_to_ssa,
          beam_listing,beam_opcodes,beam_peep,beam_ssa,beam_ssa_bool,
          beam_ssa_bsm,beam_ssa_codegen,beam_ssa_dead,beam_ssa_funs,
          beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,beam_ssa_pre_codegen,
          beam_ssa_recv,beam_ssa_share,beam_ssa_type,beam_trim,beam_types,
          beam_utils,beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
          cerl_sets,cerl_trees,compile,core_lib,core_lint,core_parse,core_pp,
          core_scan,erl_bifs,rec_env,sys_core_alias,sys_core_bsm,
          sys_core_fold,sys_core_fold_lists,sys_core_inline,sys_core_prepare,
          sys_pre_attributes,v3_core,v3_kernel,v3_kernel_pp]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/elixir-1.11.3/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.Calendar.TimeZoneDatabase',
          'Elixir.Calendar.UTCOnlyTimeZoneDatabase','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.Formatter','Elixir.Code.Identifier',
          'Elixir.Code.LoadError','Elixir.Code.Typespec','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.Collectable.MapSet',
          'Elixir.CompileError','Elixir.CondClauseError','Elixir.Config',
          'Elixir.Config.Provider','Elixir.Config.Reader','Elixir.Date',
          'Elixir.Date.Range','Elixir.DateTime','Elixir.Dict',
          'Elixir.DynamicSupervisor','Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.RenameError','Elixir.File.Stat','Elixir.File.Stream',
          'Elixir.Float','Elixir.Function','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
          'Elixir.Inspect.List','Elixir.Inspect.Macro.Env',
          'Elixir.Inspect.Map','Elixir.Inspect.MapSet',
          'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
          'Elixir.Inspect.PID','Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Time',
          'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
          'Elixir.Inspect.Version.Requirement','Elixir.Integer',
          'Elixir.Kernel','Elixir.Kernel.CLI','Elixir.Kernel.ErrorHandler',
          'Elixir.Kernel.LexicalTracker','Elixir.Kernel.ParallelCompiler',
          'Elixir.Kernel.ParallelRequire','Elixir.Kernel.SpecialForms',
          'Elixir.Kernel.Typespec','Elixir.Kernel.Utils','Elixir.KeyError',
          'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
          'Elixir.List.Chars.Atom','Elixir.List.Chars.BitString',
          'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
          'Elixir.List.Chars.List','Elixir.Macro','Elixir.Macro.Env',
          'Elixir.Map','Elixir.MapSet','Elixir.MatchError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.Module.ParallelChecker',
          'Elixir.Module.Types','Elixir.Module.Types.Error',
          'Elixir.Module.Types.Expr','Elixir.Module.Types.Helpers',
          'Elixir.Module.Types.Of','Elixir.Module.Types.Pattern',
          'Elixir.Module.Types.Unify','Elixir.NaiveDateTime','Elixir.Node',
          'Elixir.OptionParser','Elixir.OptionParser.ParseError',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Date','Elixir.String.Chars.DateTime',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.NaiveDateTime',
          'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Tokenizer',
          'Elixir.String.Unicode','Elixir.StringIO','Elixir.Supervisor',
          'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
          'Elixir.SyntaxError','Elixir.System','Elixir.SystemLimitError',
          'Elixir.Task','Elixir.Task.Supervised','Elixir.Task.Supervisor',
          'Elixir.Time','Elixir.TokenMissingError','Elixir.TryClauseError',
          'Elixir.Tuple','Elixir.URI','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils]},
     {path,["$ROOT/lib/sasl-4.0.1/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/eex-1.11.3/ebin"]},
     {primLoad,
         ['Elixir.EEx','Elixir.EEx.Compiler','Elixir.EEx.Engine',
          'Elixir.EEx.SmartEngine','Elixir.EEx.SyntaxError',
          'Elixir.EEx.Tokenizer']},
     {path,["$ROOT/lib/asn1-5.0.14/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/certifi-2.6.1/ebin"]},
     {primLoad,[certifi,certifi_pt]},
     {path,["$ROOT/lib/crypto-4.8.3/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/unicode_util_compat-0.7.0/ebin"]},
     {primLoad,[string_compat,unicode_util_compat]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/idna-6.1.1/ebin"]},
     {primLoad,
         [idna,idna_bidi,idna_context,idna_data,idna_mapping,idna_table,
          idna_ucs,punycode]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/metrics-1.0.1/ebin"]},
     {primLoad,[metrics,metrics_dummy,metrics_exometer,metrics_folsom]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/mimerl-1.2.0/ebin"]},
     {primLoad,[mimerl]},
     {path,["$ROOT/lib/syntax_tools-2.4/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,erl_tidy,igor,merl,merl_transform,prettypr]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/parse_trans-3.3.1/ebin"]},
     {primLoad,
         [ct_expand,exprecs,parse_trans,parse_trans_codegen,parse_trans_mod,
          parse_trans_pp]},
     {path,["$ROOT/lib/public_key-1.9.2/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_ocsp,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-10.2.4/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_gen_connection,
          dtls_handshake,dtls_listener_sup,dtls_packet_demux,dtls_record,
          dtls_server_session_cache_sup,dtls_server_sup,dtls_socket,dtls_sup,
          dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,
          ssl_app,ssl_certificate,ssl_cipher,ssl_cipher_format,ssl_config,
          ssl_connection_sup,ssl_crl,ssl_crl_cache,ssl_crl_cache_api,
          ssl_crl_hash_dir,ssl_dh_groups,ssl_dist_admin_sup,
          ssl_dist_connection_sup,ssl_dist_sup,ssl_gen_statem,ssl_handshake,
          ssl_listen_tracker_sup,ssl_logger,ssl_manager,ssl_pem_cache,
          ssl_pkix_db,ssl_record,ssl_server_session_cache,
          ssl_server_session_cache_db,ssl_server_session_cache_sup,
          ssl_session,ssl_session_cache,ssl_session_cache_api,ssl_srp_primes,
          ssl_sup,ssl_upgrade_server_session_cache_sup,tls_bloom_filter,
          tls_client_ticket_store,tls_connection,tls_connection_1_3,
          tls_connection_sup,tls_dist_server_sup,tls_dist_sup,
          tls_dtls_connection,tls_gen_connection,tls_handshake,
          tls_handshake_1_3,tls_record,tls_record_1_3,tls_sender,
          tls_server_session_ticket,tls_server_session_ticket_sup,
          tls_server_sup,tls_socket,tls_sup,tls_v1]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ssl_verify_fun-1.1.6/ebin"]},
     {primLoad,
         [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
          ssl_verify_fun_encodings,ssl_verify_hostname,ssl_verify_pk,
          ssl_verify_string,ssl_verify_util]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/hackney-1.17.4/ebin"]},
     {primLoad,
         [hackney,hackney_app,hackney_bstr,hackney_connect,hackney_connection,
          hackney_connections,hackney_cookie,hackney_date,hackney_headers,
          hackney_headers_new,hackney_http,hackney_http_connect,
          hackney_local_tcp,hackney_manager,hackney_metrics,hackney_multipart,
          hackney_pool,hackney_pool_handler,hackney_request,hackney_response,
          hackney_socks5,hackney_ssl,hackney_ssl_certificate,hackney_stream,
          hackney_sup,hackney_tcp,hackney_trace,hackney_url,hackney_util]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/logger-1.11.3/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.BackendSupervisor','Elixir.Logger.Backends.Console',
          'Elixir.Logger.Config','Elixir.Logger.Counter',
          'Elixir.Logger.Filter','Elixir.Logger.Formatter',
          'Elixir.Logger.Handler','Elixir.Logger.Translator',
          'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/mime-1.6.0/ebin"]},
     {primLoad,['Elixir.MIME','Elixir.MIME.Application']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/plug_crypto-1.2.2/ebin"]},
     {primLoad,
         ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
          'Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/telemetry-0.4.3/ebin"]},
     {primLoad,
         [telemetry,telemetry_app,telemetry_handler_table,telemetry_sup]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/plug-1.11.1/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Plug.Conn','Elixir.Inspect.Plug.Conn',
          'Elixir.Plug','Elixir.Plug.Adapters.Cowboy',
          'Elixir.Plug.Adapters.Cowboy2','Elixir.Plug.Adapters.Test.Conn',
          'Elixir.Plug.Application','Elixir.Plug.BadRequestError',
          'Elixir.Plug.BasicAuth','Elixir.Plug.Builder',
          'Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError',
          'Elixir.Plug.Conn.CookieOverflowError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderError',
          'Elixir.Plug.Conn.InvalidQueryError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
          'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
          'Elixir.Plug.HTML','Elixir.Plug.Head','Elixir.Plug.Logger',
          'Elixir.Plug.MIME','Elixir.Plug.MethodOverride',
          'Elixir.Plug.Parsers','Elixir.Plug.Parsers.BadEncodingError',
          'Elixir.Plug.Parsers.JSON','Elixir.Plug.Parsers.MULTIPART',
          'Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
          'Elixir.Plug.Router','Elixir.Plug.Router.InvalidSpecError',
          'Elixir.Plug.Router.MalformedURIError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Telemetry',
          'Elixir.Plug.Test','Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
          'Elixir.Plug.UploadError',plug_multipart]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/bamboo-2.2.0/ebin"]},
     {primLoad,
         ['Elixir.Bamboo','Elixir.Bamboo.Adapter',
          'Elixir.Bamboo.AdapterHelper','Elixir.Bamboo.ApiError',
          'Elixir.Bamboo.Attachment','Elixir.Bamboo.DeliverLaterStrategy',
          'Elixir.Bamboo.Email','Elixir.Bamboo.EmptyFromAddressError',
          'Elixir.Bamboo.Formatter','Elixir.Bamboo.Formatter.BitString',
          'Elixir.Bamboo.Formatter.List','Elixir.Bamboo.Formatter.Map',
          'Elixir.Bamboo.Formatter.Tuple',
          'Elixir.Bamboo.ImmediateDeliveryStrategy',
          'Elixir.Bamboo.Interceptor','Elixir.Bamboo.LocalAdapter',
          'Elixir.Bamboo.Mailer','Elixir.Bamboo.MailgunAdapter',
          'Elixir.Bamboo.MailgunHelper','Elixir.Bamboo.MandrillAdapter',
          'Elixir.Bamboo.MandrillHelper','Elixir.Bamboo.NilRecipientsError',
          'Elixir.Bamboo.SendGridAdapter','Elixir.Bamboo.SendGridHelper',
          'Elixir.Bamboo.SentEmail','Elixir.Bamboo.SentEmail.DeliveriesError',
          'Elixir.Bamboo.SentEmail.NoDeliveriesError',
          'Elixir.Bamboo.SentEmailApiPlug',
          'Elixir.Bamboo.SentEmailViewerPlug',
          'Elixir.Bamboo.SentEmailViewerPlug.Helper',
          'Elixir.Bamboo.TaskSupervisorStrategy','Elixir.Bamboo.Template',
          'Elixir.Bamboo.Test','Elixir.Bamboo.TestAdapter',
          'Elixir.Bamboo.View','Elixir.Bamboo.View.UndefinedTemplateError',
          'Elixir.Mix.Tasks.Bamboo.StartSentEmailViewer']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ex_aws-2.2.3/ebin"]},
     {primLoad,
         ['Elixir.ExAws','Elixir.ExAws.Auth','Elixir.ExAws.Auth.Credentials',
          'Elixir.ExAws.Auth.Signatures','Elixir.ExAws.Auth.Utils',
          'Elixir.ExAws.Behaviour','Elixir.ExAws.Config',
          'Elixir.ExAws.Config.AuthCache',
          'Elixir.ExAws.Config.AuthCache.AuthConfigAdapter',
          'Elixir.ExAws.Config.Defaults','Elixir.ExAws.CredentialsIni.File',
          'Elixir.ExAws.CredentialsIni.Provider','Elixir.ExAws.Error',
          'Elixir.ExAws.InstanceMeta','Elixir.ExAws.JSON.Codec',
          'Elixir.ExAws.JSON.JSX','Elixir.ExAws.Operation',
          'Elixir.ExAws.Operation.ExAws.Operation.JSON',
          'Elixir.ExAws.Operation.ExAws.Operation.Query',
          'Elixir.ExAws.Operation.ExAws.Operation.RestQuery',
          'Elixir.ExAws.Operation.ExAws.Operation.S3',
          'Elixir.ExAws.Operation.JSON','Elixir.ExAws.Operation.Query',
          'Elixir.ExAws.Operation.RestQuery','Elixir.ExAws.Operation.S3',
          'Elixir.ExAws.Request','Elixir.ExAws.Request.Hackney',
          'Elixir.ExAws.Request.HttpClient','Elixir.ExAws.Request.Url',
          'Elixir.ExAws.Utils','Elixir.Mix.Tasks.Aws.Kinesis.Tail']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ex_aws_ses-2.1.1/ebin"]},
     {primLoad,['Elixir.ExAws.SES','Elixir.ExAws.SES.Parsers']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/jason-1.2.2/ebin"]},
     {primLoad,
         ['Elixir.Jason','Elixir.Jason.Codegen','Elixir.Jason.DecodeError',
          'Elixir.Jason.Decoder','Elixir.Jason.Decoder.Unescape',
          'Elixir.Jason.Encode','Elixir.Jason.EncodeError',
          'Elixir.Jason.Encoder','Elixir.Jason.Encoder.Any',
          'Elixir.Jason.Encoder.Atom','Elixir.Jason.Encoder.BitString',
          'Elixir.Jason.Encoder.Date','Elixir.Jason.Encoder.DateTime',
          'Elixir.Jason.Encoder.Decimal','Elixir.Jason.Encoder.Float',
          'Elixir.Jason.Encoder.Integer',
          'Elixir.Jason.Encoder.Jason.Fragment','Elixir.Jason.Encoder.List',
          'Elixir.Jason.Encoder.Map','Elixir.Jason.Encoder.NaiveDateTime',
          'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
          'Elixir.Jason.Fragment','Elixir.Jason.Helpers']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/mail-0.2.3/ebin"]},
     {primLoad,
         ['Elixir.Mail','Elixir.Mail.Encoder','Elixir.Mail.Encoders.Base64',
          'Elixir.Mail.Encoders.Binary','Elixir.Mail.Encoders.EightBit',
          'Elixir.Mail.Encoders.QuotedPrintable',
          'Elixir.Mail.Encoders.SevenBit','Elixir.Mail.MIME',
          'Elixir.Mail.Message','Elixir.Mail.Parsers.RFC2822',
          'Elixir.Mail.Proplist','Elixir.Mail.Renderers.RFC2822',
          'Elixir.Mail.TestAssertions']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/bamboo_ses-0.2.0/ebin"]},
     {primLoad,
         ['Elixir.Bamboo.SesAdapter',
          'Elixir.Bamboo.SesAdapter.RFC2822Renderer']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/comeonin-5.3.2/ebin"]},
     {primLoad,
         ['Elixir.Comeonin','Elixir.Comeonin.Argon2','Elixir.Comeonin.Bcrypt',
          'Elixir.Comeonin.BehaviourTestHelper',
          'Elixir.Comeonin.PasswordHash','Elixir.Comeonin.Pbkdf2']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/bcrypt_elixir-2.3.0/ebin"]},
     {primLoad,['Elixir.Bcrypt','Elixir.Bcrypt.Base','Elixir.Bcrypt.Stats']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/bodyguard-2.4.1/ebin"]},
     {primLoad,
         ['Elixir.Bodyguard','Elixir.Bodyguard.Action',
          'Elixir.Bodyguard.NotAuthorizedError','Elixir.Bodyguard.Plug',
          'Elixir.Bodyguard.Plug.Authorize',
          'Elixir.Bodyguard.Plug.BuildAction','Elixir.Bodyguard.Policy',
          'Elixir.Bodyguard.Schema','Elixir.Bodyguard.Utilities',
          'Elixir.Plug.Exception.Bodyguard.NotAuthorizedError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/decimal-2.0.0/ebin"]},
     {primLoad,
         ['Elixir.Decimal','Elixir.Decimal.Context','Elixir.Decimal.Error',
          'Elixir.Decimal.Macros','Elixir.Inspect.Decimal',
          'Elixir.String.Chars.Decimal']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ecto-3.6.2/ebin"]},
     {primLoad,
         ['Elixir.Ecto','Elixir.Ecto.Adapter','Elixir.Ecto.Adapter.Queryable',
          'Elixir.Ecto.Adapter.Schema','Elixir.Ecto.Adapter.Storage',
          'Elixir.Ecto.Adapter.Transaction','Elixir.Ecto.Application',
          'Elixir.Ecto.Association','Elixir.Ecto.Association.BelongsTo',
          'Elixir.Ecto.Association.Has','Elixir.Ecto.Association.HasThrough',
          'Elixir.Ecto.Association.ManyToMany',
          'Elixir.Ecto.Association.NotLoaded','Elixir.Ecto.CastError',
          'Elixir.Ecto.ChangeError','Elixir.Ecto.Changeset',
          'Elixir.Ecto.Changeset.Relation','Elixir.Ecto.ConstraintError',
          'Elixir.Ecto.Embedded','Elixir.Ecto.Enum',
          'Elixir.Ecto.InvalidChangesetError','Elixir.Ecto.InvalidURLError',
          'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
          'Elixir.Ecto.MultiplePrimaryKeyError',
          'Elixir.Ecto.MultipleResultsError',
          'Elixir.Ecto.NoPrimaryKeyFieldError',
          'Elixir.Ecto.NoPrimaryKeyValueError','Elixir.Ecto.NoResultsError',
          'Elixir.Ecto.ParameterizedType','Elixir.Ecto.Query',
          'Elixir.Ecto.Query.API','Elixir.Ecto.Query.BooleanExpr',
          'Elixir.Ecto.Query.Builder','Elixir.Ecto.Query.Builder.CTE',
          'Elixir.Ecto.Query.Builder.Combination',
          'Elixir.Ecto.Query.Builder.Distinct',
          'Elixir.Ecto.Query.Builder.Dynamic',
          'Elixir.Ecto.Query.Builder.Filter','Elixir.Ecto.Query.Builder.From',
          'Elixir.Ecto.Query.Builder.GroupBy',
          'Elixir.Ecto.Query.Builder.Join',
          'Elixir.Ecto.Query.Builder.LimitOffset',
          'Elixir.Ecto.Query.Builder.Lock',
          'Elixir.Ecto.Query.Builder.OrderBy',
          'Elixir.Ecto.Query.Builder.Preload',
          'Elixir.Ecto.Query.Builder.Select',
          'Elixir.Ecto.Query.Builder.Update',
          'Elixir.Ecto.Query.Builder.Windows','Elixir.Ecto.Query.CastError',
          'Elixir.Ecto.Query.CompileError','Elixir.Ecto.Query.DynamicExpr',
          'Elixir.Ecto.Query.FromExpr','Elixir.Ecto.Query.JoinExpr',
          'Elixir.Ecto.Query.Planner','Elixir.Ecto.Query.QueryExpr',
          'Elixir.Ecto.Query.SelectExpr','Elixir.Ecto.Query.Tagged',
          'Elixir.Ecto.Query.WindowAPI','Elixir.Ecto.Query.WithExpr',
          'Elixir.Ecto.QueryError','Elixir.Ecto.Queryable',
          'Elixir.Ecto.Queryable.Atom','Elixir.Ecto.Queryable.BitString',
          'Elixir.Ecto.Queryable.Ecto.Query',
          'Elixir.Ecto.Queryable.Ecto.SubQuery','Elixir.Ecto.Queryable.Tuple',
          'Elixir.Ecto.Repo','Elixir.Ecto.Repo.Assoc',
          'Elixir.Ecto.Repo.Preloader','Elixir.Ecto.Repo.Queryable',
          'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
          'Elixir.Ecto.Repo.Supervisor','Elixir.Ecto.Repo.Transaction',
          'Elixir.Ecto.Schema','Elixir.Ecto.Schema.Loader',
          'Elixir.Ecto.Schema.Metadata','Elixir.Ecto.StaleEntryError',
          'Elixir.Ecto.SubQuery','Elixir.Ecto.SubQueryError',
          'Elixir.Ecto.Type','Elixir.Ecto.UUID',
          'Elixir.Inspect.Ecto.Association.NotLoaded',
          'Elixir.Inspect.Ecto.Changeset','Elixir.Inspect.Ecto.Query',
          'Elixir.Inspect.Ecto.Query.DynamicExpr',
          'Elixir.Inspect.Ecto.Schema.Metadata',
          'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
          'Elixir.Jason.Encoder.Ecto.Schema.Metadata','Elixir.Mix.Ecto',
          'Elixir.Mix.Tasks.Ecto','Elixir.Mix.Tasks.Ecto.Create',
          'Elixir.Mix.Tasks.Ecto.Drop','Elixir.Mix.Tasks.Ecto.Gen.Repo']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/slugger-0.3.0/ebin"]},
     {primLoad,['Elixir.Slugger','Elixir.Slugify','Elixir.Slugify.Any']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ecto_autoslug_field-2.0.1/ebin"]},
     {primLoad,
         ['Elixir.EctoAutoslugField','Elixir.EctoAutoslugField.Slug',
          'Elixir.EctoAutoslugField.SlugBase',
          'Elixir.EctoAutoslugField.SlugGenerator',
          'Elixir.EctoAutoslugField.Type']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/connection-1.1.0/ebin"]},
     {primLoad,['Elixir.Connection']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/db_connection-2.4.0/ebin"]},
     {primLoad,
         ['Elixir.DBConnection','Elixir.DBConnection.App',
          'Elixir.DBConnection.Backoff','Elixir.DBConnection.Connection',
          'Elixir.DBConnection.ConnectionError',
          'Elixir.DBConnection.ConnectionPool',
          'Elixir.DBConnection.ConnectionPool.Pool',
          'Elixir.DBConnection.EncodeError','Elixir.DBConnection.Holder',
          'Elixir.DBConnection.LogEntry','Elixir.DBConnection.Ownership',
          'Elixir.DBConnection.Ownership.Manager',
          'Elixir.DBConnection.Ownership.Proxy',
          'Elixir.DBConnection.OwnershipError',
          'Elixir.DBConnection.PrepareStream','Elixir.DBConnection.Query',
          'Elixir.DBConnection.Stream','Elixir.DBConnection.Task',
          'Elixir.DBConnection.TransactionError',
          'Elixir.DBConnection.Watcher',
          'Elixir.Enumerable.DBConnection.PrepareStream',
          'Elixir.Enumerable.DBConnection.Stream']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ecto_sql-3.6.2/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
          'Elixir.Ecto.Adapter.Migration','Elixir.Ecto.Adapter.Structure',
          'Elixir.Ecto.Adapters.MySQL','Elixir.Ecto.Adapters.MyXQL',
          'Elixir.Ecto.Adapters.Postgres',
          'Elixir.Ecto.Adapters.Postgres.Connection',
          'Elixir.Ecto.Adapters.SQL','Elixir.Ecto.Adapters.SQL.Application',
          'Elixir.Ecto.Adapters.SQL.Connection',
          'Elixir.Ecto.Adapters.SQL.Sandbox',
          'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
          'Elixir.Ecto.Adapters.SQL.Stream','Elixir.Ecto.Adapters.Tds',
          'Elixir.Ecto.Migration','Elixir.Ecto.Migration.Command',
          'Elixir.Ecto.Migration.Constraint','Elixir.Ecto.Migration.Index',
          'Elixir.Ecto.Migration.Reference','Elixir.Ecto.Migration.Runner',
          'Elixir.Ecto.Migration.SchemaMigration',
          'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
          'Elixir.Enumerable.Ecto.Adapters.SQL.Stream','Elixir.Mix.EctoSQL',
          'Elixir.Mix.Tasks.Ecto.Dump','Elixir.Mix.Tasks.Ecto.Gen.Migration',
          'Elixir.Mix.Tasks.Ecto.Load','Elixir.Mix.Tasks.Ecto.Migrate',
          'Elixir.Mix.Tasks.Ecto.Migrations',
          'Elixir.Mix.Tasks.Ecto.Rollback']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ecto_enum-1.4.0/ebin"]},
     {primLoad,
         ['Elixir.EctoEnum','Elixir.EctoEnum.Postgres',
          'Elixir.EctoEnum.Postgres.Use','Elixir.EctoEnum.Typespec',
          'Elixir.EctoEnum.Typespec.TestModule',
          'Elixir.EctoEnum.Typespec.TestModule.PGStatusEnum',
          'Elixir.EctoEnum.Typespec.TestModule.StatusEnum',
          'Elixir.EctoEnum.Use']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/postgrex-0.15.9/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Postgrex.Stream',
          'Elixir.DBConnection.Query.Postgrex.Copy',
          'Elixir.DBConnection.Query.Postgrex.Parameters',
          'Elixir.DBConnection.Query.Postgrex.Query',
          'Elixir.Enumerable.Postgrex.Stream','Elixir.Postgrex',
          'Elixir.Postgrex.App','Elixir.Postgrex.BinaryExtension',
          'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
          'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
          'Elixir.Postgrex.Cursor','Elixir.Postgrex.DefaultTypes',
          'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
          'Elixir.Postgrex.Extension','Elixir.Postgrex.Extensions.Array',
          'Elixir.Postgrex.Extensions.BitString',
          'Elixir.Postgrex.Extensions.Bool','Elixir.Postgrex.Extensions.Box',
          'Elixir.Postgrex.Extensions.Circle',
          'Elixir.Postgrex.Extensions.Date',
          'Elixir.Postgrex.Extensions.Float4',
          'Elixir.Postgrex.Extensions.Float8',
          'Elixir.Postgrex.Extensions.HStore',
          'Elixir.Postgrex.Extensions.INET','Elixir.Postgrex.Extensions.Int2',
          'Elixir.Postgrex.Extensions.Int4','Elixir.Postgrex.Extensions.Int8',
          'Elixir.Postgrex.Extensions.Interval',
          'Elixir.Postgrex.Extensions.JSON',
          'Elixir.Postgrex.Extensions.JSONB',
          'Elixir.Postgrex.Extensions.Line',
          'Elixir.Postgrex.Extensions.LineSegment',
          'Elixir.Postgrex.Extensions.MACADDR',
          'Elixir.Postgrex.Extensions.Name',
          'Elixir.Postgrex.Extensions.Numeric',
          'Elixir.Postgrex.Extensions.OID','Elixir.Postgrex.Extensions.Path',
          'Elixir.Postgrex.Extensions.Point',
          'Elixir.Postgrex.Extensions.Polygon',
          'Elixir.Postgrex.Extensions.Range','Elixir.Postgrex.Extensions.Raw',
          'Elixir.Postgrex.Extensions.Record',
          'Elixir.Postgrex.Extensions.TID',
          'Elixir.Postgrex.Extensions.TSVector',
          'Elixir.Postgrex.Extensions.Time',
          'Elixir.Postgrex.Extensions.TimeTZ',
          'Elixir.Postgrex.Extensions.Timestamp',
          'Elixir.Postgrex.Extensions.TimestampTZ',
          'Elixir.Postgrex.Extensions.UUID',
          'Elixir.Postgrex.Extensions.VoidBinary',
          'Elixir.Postgrex.Extensions.VoidText','Elixir.Postgrex.INET',
          'Elixir.Postgrex.Interval','Elixir.Postgrex.Lexeme',
          'Elixir.Postgrex.Line','Elixir.Postgrex.LineSegment',
          'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
          'Elixir.Postgrex.Notifications','Elixir.Postgrex.Parameters',
          'Elixir.Postgrex.Path','Elixir.Postgrex.Point',
          'Elixir.Postgrex.Polygon','Elixir.Postgrex.Protocol',
          'Elixir.Postgrex.Query','Elixir.Postgrex.QueryError',
          'Elixir.Postgrex.Range','Elixir.Postgrex.Result',
          'Elixir.Postgrex.SCRAM','Elixir.Postgrex.Stream',
          'Elixir.Postgrex.SuperExtension','Elixir.Postgrex.TypeInfo',
          'Elixir.Postgrex.TypeModule','Elixir.Postgrex.TypeServer',
          'Elixir.Postgrex.TypeSupervisor','Elixir.Postgrex.Types',
          'Elixir.Postgrex.Utils','Elixir.String.Chars.Postgrex.Copy',
          'Elixir.String.Chars.Postgrex.Query']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ecto_network-1.3.0/ebin"]},
     {primLoad,
         ['Elixir.EctoNetwork','Elixir.EctoNetwork.CIDR',
          'Elixir.EctoNetwork.INET','Elixir.EctoNetwork.MACADDR',
          'Elixir.Phoenix.HTML.Safe.Postgrex.INET',
          'Elixir.Phoenix.HTML.Safe.Postgrex.MACADDR',
          'Elixir.String.Chars.Postgrex.INET',
          'Elixir.String.Chars.Postgrex.MACADDR']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ecto_soft_delete-2.0.2/ebin"]},
     {primLoad,
         ['Elixir.Ecto.SoftDelete.Migration','Elixir.Ecto.SoftDelete.Query',
          'Elixir.Ecto.SoftDelete.Repo','Elixir.Ecto.SoftDelete.Schema']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/castore-0.1.10/ebin"]},
     {primLoad,['Elixir.CAStore']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/mint-0.4.0/ebin"]},
     {primLoad,
         ['Elixir.Mint.Core.Conn','Elixir.Mint.Core.Transport',
          'Elixir.Mint.Core.Transport.SSL','Elixir.Mint.Core.Transport.TCP',
          'Elixir.Mint.Core.Util','Elixir.Mint.HTTP','Elixir.Mint.HTTP1',
          'Elixir.Mint.HTTP1.Parse','Elixir.Mint.HTTP1.Request',
          'Elixir.Mint.HTTP1.Response','Elixir.Mint.HTTP2',
          'Elixir.Mint.HTTP2.Frame','Elixir.Mint.HTTP2.HPACK',
          'Elixir.Mint.HTTP2.HPACK.Huffman','Elixir.Mint.HTTP2.HPACK.Table',
          'Elixir.Mint.HTTP2.HPACK.Types','Elixir.Mint.HTTPError',
          'Elixir.Mint.Negotiate','Elixir.Mint.TransportError',
          'Elixir.Mint.TunnelProxy','Elixir.Mint.Types',
          'Elixir.Mint.UnsafeProxy',mint_shims]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/emojix-0.3.1/ebin"]},
     {primLoad,
         ['Elixir.Emojix','Elixir.Emojix.App','Elixir.Emojix.DataLoader',
          'Elixir.Emojix.Emoji','Elixir.Emojix.Repo']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ex_aws_s3-2.2.0/ebin"]},
     {primLoad,
         ['Elixir.ExAws.Operation.ExAws.Operation.S3DeleteAllObjects',
          'Elixir.ExAws.Operation.ExAws.S3.Download',
          'Elixir.ExAws.Operation.ExAws.S3.Upload',
          'Elixir.ExAws.Operation.S3DeleteAllObjects','Elixir.ExAws.S3',
          'Elixir.ExAws.S3.Download','Elixir.ExAws.S3.Lazy',
          'Elixir.ExAws.S3.Parsers','Elixir.ExAws.S3.Upload',
          'Elixir.ExAws.S3.Utils']},
     {path,["$ROOT/lib/inets-7.3.2/ebin"]},
     {primLoad,
         [http_chunk,http_request,http_response,http_transport,http_uri,
          http_util,httpc,httpc_cookie,httpc_handler,httpc_handler_sup,
          httpc_manager,httpc_profile_sup,httpc_request,httpc_response,
          httpc_sup,httpd,httpd_acceptor,httpd_acceptor_sup,httpd_cgi,
          httpd_conf,httpd_connection_sup,httpd_custom,httpd_custom_api,
          httpd_esi,httpd_example,httpd_file,httpd_instance_sup,httpd_log,
          httpd_logger,httpd_manager,httpd_misc_sup,httpd_request,
          httpd_request_handler,httpd_response,httpd_script_env,httpd_socket,
          httpd_sup,httpd_util,inets,inets_app,inets_ftp_wrapper,inets_lib,
          inets_service,inets_sup,inets_tftp_wrapper,inets_trace,mod_actions,
          mod_alias,mod_auth,mod_auth_dets,mod_auth_mnesia,mod_auth_plain,
          mod_auth_server,mod_cgi,mod_dir,mod_disk_log,mod_esi,mod_get,
          mod_head,mod_log,mod_range,mod_responsecontrol,mod_security,
          mod_security_server,mod_trace]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/cldr_utils-2.16.0/ebin"]},
     {primLoad,
         ['Elixir.Cldr.Calendar.Conversion','Elixir.Cldr.Code',
          'Elixir.Cldr.Decimal','Elixir.Cldr.Digits','Elixir.Cldr.Enum',
          'Elixir.Cldr.Helpers','Elixir.Cldr.Http','Elixir.Cldr.Macros',
          'Elixir.Cldr.Map','Elixir.Cldr.Math','Elixir.Cldr.String',
          'Elixir.CldrUtils']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ex_unit-1.11.3/ebin"]},
     {primLoad,
         ['Elixir.ExUnit','Elixir.ExUnit.AssertionError',
          'Elixir.ExUnit.Assertions','Elixir.ExUnit.CLIFormatter',
          'Elixir.ExUnit.Callbacks','Elixir.ExUnit.CaptureIO',
          'Elixir.ExUnit.CaptureLog','Elixir.ExUnit.CaptureServer',
          'Elixir.ExUnit.Case','Elixir.ExUnit.CaseTemplate',
          'Elixir.ExUnit.Diff','Elixir.ExUnit.DocTest',
          'Elixir.ExUnit.DocTest.Error',
          'Elixir.ExUnit.DuplicateDescribeError',
          'Elixir.ExUnit.DuplicateTestError','Elixir.ExUnit.EventManager',
          'Elixir.ExUnit.FailuresManifest','Elixir.ExUnit.Filters',
          'Elixir.ExUnit.Formatter','Elixir.ExUnit.MultiError',
          'Elixir.ExUnit.OnExitHandler','Elixir.ExUnit.Runner',
          'Elixir.ExUnit.RunnerStats','Elixir.ExUnit.Server',
          'Elixir.ExUnit.Test','Elixir.ExUnit.TestCase',
          'Elixir.ExUnit.TestModule','Elixir.ExUnit.TimeoutError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ex_cldr-2.23.0/ebin"]},
     {primLoad,
         ['Elixir.Cldr','Elixir.Cldr.AcceptLanguage',
          'Elixir.Cldr.AcceptLanguageError',
          'Elixir.Cldr.AmbiguousTimezoneError','Elixir.Cldr.Backend',
          'Elixir.Cldr.Backend.Compiler','Elixir.Cldr.Chars',
          'Elixir.Cldr.Chars.Any','Elixir.Cldr.Chars.BitString',
          'Elixir.Cldr.Chars.Cldr.LanguageTag','Elixir.Cldr.Config',
          'Elixir.Cldr.Config.Dependents','Elixir.Cldr.DisplayName',
          'Elixir.Cldr.FormatCompileError','Elixir.Cldr.FormatError',
          'Elixir.Cldr.Gettext.Plural','Elixir.Cldr.Install',
          'Elixir.Cldr.InvalidDateFormatType',
          'Elixir.Cldr.InvalidDateTimeFormatType',
          'Elixir.Cldr.InvalidLanguageError','Elixir.Cldr.InvalidLanguageTag',
          'Elixir.Cldr.InvalidScriptError',
          'Elixir.Cldr.InvalidTerritoryError',
          'Elixir.Cldr.InvalidTimeFormatType',
          'Elixir.Cldr.InvalidVariantError','Elixir.Cldr.LanguageTag',
          'Elixir.Cldr.LanguageTag.Chars',
          'Elixir.Cldr.LanguageTag.Chars.Atom',
          'Elixir.Cldr.LanguageTag.Chars.BitString',
          'Elixir.Cldr.LanguageTag.Chars.Cldr.LanguageTag.T',
          'Elixir.Cldr.LanguageTag.Chars.Cldr.LanguageTag.U',
          'Elixir.Cldr.LanguageTag.Chars.List',
          'Elixir.Cldr.LanguageTag.Chars.Map',
          'Elixir.Cldr.LanguageTag.Chars.Tuple',
          'Elixir.Cldr.LanguageTag.ParseError',
          'Elixir.Cldr.LanguageTag.Parser','Elixir.Cldr.LanguageTag.Sigil',
          'Elixir.Cldr.LanguageTag.T','Elixir.Cldr.LanguageTag.U',
          'Elixir.Cldr.Locale','Elixir.Cldr.Locale.Backend',
          'Elixir.Cldr.Locale.Cache','Elixir.Cldr.NoDefaultBackendError',
          'Elixir.Cldr.NoMatchingLocale','Elixir.Cldr.NoParentError',
          'Elixir.Cldr.Number.PluralRule',
          'Elixir.Cldr.Number.PluralRule.Compiler',
          'Elixir.Cldr.Number.PluralRule.Transformer',
          'Elixir.Cldr.Plug.AcceptLanguage','Elixir.Cldr.Plug.PutSession',
          'Elixir.Cldr.Plug.SetLocale','Elixir.Cldr.Plug.SetSession',
          'Elixir.Cldr.Rbnf.Config','Elixir.Cldr.Rbnf.NotAvailable',
          'Elixir.Cldr.Rfc5646.Core','Elixir.Cldr.Rfc5646.Grammar',
          'Elixir.Cldr.Rfc5646.Helpers','Elixir.Cldr.Rfc5646.Parser',
          'Elixir.Cldr.Substitution','Elixir.Cldr.Timezone',
          'Elixir.Cldr.UnknownBackendError',
          'Elixir.Cldr.UnknownCalendarError',
          'Elixir.Cldr.UnknownCurrencyError','Elixir.Cldr.UnknownFormatError',
          'Elixir.Cldr.UnknownLocaleError',
          'Elixir.Cldr.UnknownMeasurementSystemError',
          'Elixir.Cldr.UnknownNumberSystemError',
          'Elixir.Cldr.UnknownNumberSystemTypeError',
          'Elixir.Cldr.UnknownOTPAppError','Elixir.Cldr.UnknownPluralRules',
          'Elixir.Cldr.UnknownTerritoryError','Elixir.Cldr.UnknownUnitError',
          'Elixir.Cldr.Validity','Elixir.Cldr.Validity.Language',
          'Elixir.Cldr.Validity.Script','Elixir.Cldr.Validity.Subdivision',
          'Elixir.Cldr.Validity.T','Elixir.Cldr.Validity.Territory',
          'Elixir.Cldr.Validity.U','Elixir.Cldr.Validity.Variant',
          'Elixir.Inspect.Cldr.LanguageTag',
          'Elixir.Jason.Encoder.Cldr.LanguageTag',
          'Elixir.String.Chars.Cldr.LanguageTag',
          'Elixir.String.Chars.Cldr.LanguageTag.T',
          'Elixir.String.Chars.Cldr.LanguageTag.U',plural_rules_lexer,
          plural_rules_parser]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ex_cldr_territories-2.2.2/ebin"]},
     {primLoad,
         ['Elixir.Cldr.Territory','Elixir.Cldr.Territory.Backend',
          'Elixir.Cldr.UnknownChildrenError','Elixir.Cldr.UnknownFlagError',
          'Elixir.Cldr.UnknownLanguageTagError',
          'Elixir.Cldr.UnknownParentError','Elixir.Cldr.UnknownStyleError',
          'Elixir.Cldr.UnknownSubdivisionError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/excal-0.3.2/ebin"]},
     {primLoad,
         ['Elixir.Excal','Elixir.Excal.Interface.Recurrence.Iterator',
          'Elixir.Excal.Recurrence.Iterator',
          'Elixir.Excal.Recurrence.Stream']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/geo-3.4.2/ebin"]},
     {primLoad,
         ['Elixir.Geo','Elixir.Geo.GeometryCollection','Elixir.Geo.JSON',
          'Elixir.Geo.JSON.Decoder','Elixir.Geo.JSON.Decoder.DecodeError',
          'Elixir.Geo.JSON.Encoder','Elixir.Geo.JSON.Encoder.EncodeError',
          'Elixir.Geo.LineString','Elixir.Geo.LineStringZ',
          'Elixir.Geo.MultiLineString','Elixir.Geo.MultiLineStringZ',
          'Elixir.Geo.MultiPoint','Elixir.Geo.MultiPointZ',
          'Elixir.Geo.MultiPolygon','Elixir.Geo.MultiPolygonZ',
          'Elixir.Geo.Point','Elixir.Geo.PointM','Elixir.Geo.PointZ',
          'Elixir.Geo.PointZM','Elixir.Geo.Polygon','Elixir.Geo.PolygonZ',
          'Elixir.Geo.Utils','Elixir.Geo.WKB','Elixir.Geo.WKB.Decoder',
          'Elixir.Geo.WKB.Encoder','Elixir.Geo.WKT','Elixir.Geo.WKT.Decoder',
          'Elixir.Geo.WKT.Encoder',
          'Elixir.Jason.Encoder.Geo.GeometryCollection',
          'Elixir.Jason.Encoder.Geo.LineString',
          'Elixir.Jason.Encoder.Geo.LineStringZ',
          'Elixir.Jason.Encoder.Geo.MultiLineString',
          'Elixir.Jason.Encoder.Geo.MultiLineStringZ',
          'Elixir.Jason.Encoder.Geo.MultiPoint',
          'Elixir.Jason.Encoder.Geo.MultiPointZ',
          'Elixir.Jason.Encoder.Geo.MultiPolygon',
          'Elixir.Jason.Encoder.Geo.MultiPolygonZ',
          'Elixir.Jason.Encoder.Geo.Point','Elixir.Jason.Encoder.Geo.PointM',
          'Elixir.Jason.Encoder.Geo.PointZ',
          'Elixir.Jason.Encoder.Geo.PointZM',
          'Elixir.Jason.Encoder.Geo.Polygon',
          'Elixir.Jason.Encoder.Geo.PolygonZ',
          'Elixir.String.Chars.Geo.GeometryCollection',
          'Elixir.String.Chars.Geo.LineString',
          'Elixir.String.Chars.Geo.LineStringZ',
          'Elixir.String.Chars.Geo.MultiLineString',
          'Elixir.String.Chars.Geo.MultiLineStringZ',
          'Elixir.String.Chars.Geo.MultiPoint',
          'Elixir.String.Chars.Geo.MultiPointZ',
          'Elixir.String.Chars.Geo.MultiPolygon',
          'Elixir.String.Chars.Geo.MultiPolygonZ',
          'Elixir.String.Chars.Geo.Point','Elixir.String.Chars.Geo.PointM',
          'Elixir.String.Chars.Geo.PointZ','Elixir.String.Chars.Geo.PointZM',
          'Elixir.String.Chars.Geo.Polygon',
          'Elixir.String.Chars.Geo.PolygonZ']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/geo_postgis-3.4.0/ebin"]},
     {primLoad,
         ['Elixir.Geo.PostGIS','Elixir.Geo.PostGIS.Config',
          'Elixir.Geo.PostGIS.Extension','Elixir.Geo.PostGIS.Geometry']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/inflex-2.1.0/ebin"]},
     {primLoad,
         ['Elixir.Inflex','Elixir.Inflex.Camelize','Elixir.Inflex.Ordinalize',
          'Elixir.Inflex.Parameterize','Elixir.Inflex.Pluralize',
          'Elixir.Inflex.Underscore']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/rustler-0.22.0/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.Compile.Rustler','Elixir.Mix.Tasks.Rustler.New',
          'Elixir.Rustler','Elixir.Rustler.Compiler',
          'Elixir.Rustler.Compiler.Config','Elixir.Rustler.Compiler.Messages',
          'Elixir.Rustler.Compiler.Rustup']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/mjml-1.1.1/ebin"]},
     {primLoad,['Elixir.Mjml']},
     {path,["$ROOT/lib/os_mon-2.6.1/ebin"]},
     {primLoad,
         [cpu_sup,disksup,memsup,nteventlog,os_mon,os_mon_mib,os_mon_sysinfo,
          os_sup]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/new_relic_agent-1.27.3/ebin"]},
     {primLoad,
         ['Elixir.NewRelic','Elixir.NewRelic.Aggregate',
          'Elixir.NewRelic.Aggregate.Reporter',
          'Elixir.NewRelic.Aggregate.Supervisor',
          'Elixir.NewRelic.AlwaysOnSupervisor','Elixir.NewRelic.Application',
          'Elixir.NewRelic.Config','Elixir.NewRelic.Custom.Event',
          'Elixir.NewRelic.DistributedTrace',
          'Elixir.NewRelic.DistributedTrace.BackoffSampler',
          'Elixir.NewRelic.DistributedTrace.Context',
          'Elixir.NewRelic.DistributedTrace.NewRelicContext',
          'Elixir.NewRelic.DistributedTrace.Supervisor',
          'Elixir.NewRelic.DistributedTrace.W3CTraceContext',
          'Elixir.NewRelic.DistributedTrace.W3CTraceContext.TraceParent',
          'Elixir.NewRelic.DistributedTrace.W3CTraceContext.TraceState',
          'Elixir.NewRelic.DistributedTrace.W3CTraceContext.TraceState.NewRelicState',
          'Elixir.NewRelic.EnabledSupervisor',
          'Elixir.NewRelic.EnabledSupervisorManager',
          'Elixir.NewRelic.Error.Event','Elixir.NewRelic.Error.LoggerHandler',
          'Elixir.NewRelic.Error.Reporter','Elixir.NewRelic.Error.Supervisor',
          'Elixir.NewRelic.Error.Trace','Elixir.NewRelic.GracefulShutdown',
          'Elixir.NewRelic.Harvest.Collector.AgentRun',
          'Elixir.NewRelic.Harvest.Collector.Connect',
          'Elixir.NewRelic.Harvest.Collector.CustomEvent.Harvester',
          'Elixir.NewRelic.Harvest.Collector.ErrorTrace.Harvester',
          'Elixir.NewRelic.Harvest.Collector.Metric.Harvester',
          'Elixir.NewRelic.Harvest.Collector.Protocol',
          'Elixir.NewRelic.Harvest.Collector.SpanEvent.Harvester',
          'Elixir.NewRelic.Harvest.Collector.Supervisor',
          'Elixir.NewRelic.Harvest.Collector.TransactionErrorEvent.Harvester',
          'Elixir.NewRelic.Harvest.Collector.TransactionEvent.Harvester',
          'Elixir.NewRelic.Harvest.Collector.TransactionTrace.Harvester',
          'Elixir.NewRelic.Harvest.DataSupervisor',
          'Elixir.NewRelic.Harvest.HarvestCycle',
          'Elixir.NewRelic.Harvest.HarvesterStore',
          'Elixir.NewRelic.Harvest.HarvesterSupervisor',
          'Elixir.NewRelic.Harvest.Supervisor',
          'Elixir.NewRelic.Harvest.TelemetrySdk.API',
          'Elixir.NewRelic.Harvest.TelemetrySdk.Config',
          'Elixir.NewRelic.Harvest.TelemetrySdk.Logs.Harvester',
          'Elixir.NewRelic.Harvest.TelemetrySdk.Spans.Harvester',
          'Elixir.NewRelic.Harvest.TelemetrySdk.Supervisor',
          'Elixir.NewRelic.Init','Elixir.NewRelic.Instrumented.Mix.Task',
          'Elixir.NewRelic.Instrumented.Task',
          'Elixir.NewRelic.Instrumented.Task.Supervisor',
          'Elixir.NewRelic.Instrumented.Task.Wrappers',
          'Elixir.NewRelic.Logger','Elixir.NewRelic.LogsInContext',
          'Elixir.NewRelic.LogsInContext.Supervisor','Elixir.NewRelic.Metric',
          'Elixir.NewRelic.Metric.MetricData',
          'Elixir.NewRelic.OtherTransaction','Elixir.NewRelic.Sampler.Agent',
          'Elixir.NewRelic.Sampler.Beam','Elixir.NewRelic.Sampler.Ets',
          'Elixir.NewRelic.Sampler.Process',
          'Elixir.NewRelic.Sampler.Reporter',
          'Elixir.NewRelic.Sampler.Supervisor',
          'Elixir.NewRelic.Sampler.TopProcess',
          'Elixir.NewRelic.SignalHandler','Elixir.NewRelic.Span.Event',
          'Elixir.NewRelic.Span.Reporter','Elixir.NewRelic.Telemetry.Ecto',
          'Elixir.NewRelic.Telemetry.Ecto.Handler',
          'Elixir.NewRelic.Telemetry.Ecto.Metadata',
          'Elixir.NewRelic.Telemetry.Ecto.Supervisor',
          'Elixir.NewRelic.Telemetry.Phoenix',
          'Elixir.NewRelic.Telemetry.Plug','Elixir.NewRelic.Telemetry.Redix',
          'Elixir.NewRelic.Telemetry.Supervisor','Elixir.NewRelic.Tracer',
          'Elixir.NewRelic.Tracer.Macro','Elixir.NewRelic.Tracer.Report',
          'Elixir.NewRelic.Transaction',
          'Elixir.NewRelic.Transaction.Complete',
          'Elixir.NewRelic.Transaction.ErlangTrace',
          'Elixir.NewRelic.Transaction.ErlangTraceManager',
          'Elixir.NewRelic.Transaction.ErlangTraceSupervisor',
          'Elixir.NewRelic.Transaction.Event',
          'Elixir.NewRelic.Transaction.Reporter',
          'Elixir.NewRelic.Transaction.Sidecar',
          'Elixir.NewRelic.Transaction.SidecarStore',
          'Elixir.NewRelic.Transaction.Supervisor',
          'Elixir.NewRelic.Transaction.Trace',
          'Elixir.NewRelic.Transaction.Trace.Segment','Elixir.NewRelic.Util',
          'Elixir.NewRelic.Util.Apdex','Elixir.NewRelic.Util.Error',
          'Elixir.NewRelic.Util.Event','Elixir.NewRelic.Util.HTTP',
          'Elixir.NewRelic.Util.PriorityQueue',
          'Elixir.NewRelic.Util.RequestStart','Elixir.NewRelic.Util.Vendor']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/oban-2.7.2/ebin"]},
     {primLoad,
         ['Elixir.Oban','Elixir.Oban.Application','Elixir.Oban.Breaker',
          'Elixir.Oban.Config','Elixir.Oban.CrashError',
          'Elixir.Oban.Cron.Expression','Elixir.Oban.Job',
          'Elixir.Oban.Midwife','Elixir.Oban.Midwife.State',
          'Elixir.Oban.Migrations','Elixir.Oban.Migrations.V01',
          'Elixir.Oban.Migrations.V02','Elixir.Oban.Migrations.V03',
          'Elixir.Oban.Migrations.V04','Elixir.Oban.Migrations.V05',
          'Elixir.Oban.Migrations.V06','Elixir.Oban.Migrations.V07',
          'Elixir.Oban.Migrations.V08','Elixir.Oban.Migrations.V09',
          'Elixir.Oban.Migrations.V10','Elixir.Oban.Notifier',
          'Elixir.Oban.PerformError','Elixir.Oban.Plugins.Cron',
          'Elixir.Oban.Plugins.Cron.State','Elixir.Oban.Plugins.Gossip',
          'Elixir.Oban.Plugins.Gossip.State','Elixir.Oban.Plugins.Pruner',
          'Elixir.Oban.Plugins.Pruner.State','Elixir.Oban.Plugins.Repeater',
          'Elixir.Oban.Plugins.Repeater.State','Elixir.Oban.Plugins.Stager',
          'Elixir.Oban.Plugins.Stager.State','Elixir.Oban.PostgresNotifier',
          'Elixir.Oban.PostgresNotifier.State','Elixir.Oban.Query',
          'Elixir.Oban.Queue.BasicEngine','Elixir.Oban.Queue.Drainer',
          'Elixir.Oban.Queue.Engine','Elixir.Oban.Queue.Executor',
          'Elixir.Oban.Queue.Producer','Elixir.Oban.Queue.Producer.State',
          'Elixir.Oban.Queue.Supervisor','Elixir.Oban.Queue.Watchman',
          'Elixir.Oban.Queue.Watchman.State','Elixir.Oban.Registry',
          'Elixir.Oban.Repo','Elixir.Oban.Telemetry','Elixir.Oban.Testing',
          'Elixir.Oban.TimeoutError','Elixir.Oban.Worker']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/oban_pro-0.8.1/ebin"]},
     {primLoad,
         ['Elixir.Oban.Pro','Elixir.Oban.Pro.Cron',
          'Elixir.Oban.Pro.Migrations.DynamicCron',
          'Elixir.Oban.Pro.Migrations.Producers',
          'Elixir.Oban.Pro.Notifiers.PG','Elixir.Oban.Pro.Notifiers.PG.State',
          'Elixir.Oban.Pro.Plugins.BatchManager',
          'Elixir.Oban.Pro.Plugins.BatchManager.State',
          'Elixir.Oban.Pro.Plugins.DynamicCron',
          'Elixir.Oban.Pro.Plugins.DynamicCron.State',
          'Elixir.Oban.Pro.Plugins.DynamicPruner',
          'Elixir.Oban.Pro.Plugins.DynamicPruner.State',
          'Elixir.Oban.Pro.Plugins.Lifeline',
          'Elixir.Oban.Pro.Plugins.Lifeline.State',
          'Elixir.Oban.Pro.Plugins.Relay',
          'Elixir.Oban.Pro.Plugins.Reprioritizer',
          'Elixir.Oban.Pro.Plugins.Reprioritizer.State',
          'Elixir.Oban.Pro.Plugins.WorkflowManager',
          'Elixir.Oban.Pro.Producer','Elixir.Oban.Pro.Queue.SmartEngine',
          'Elixir.Oban.Pro.Testing','Elixir.Oban.Pro.Workers.Batch',
          'Elixir.Oban.Pro.Workers.Chunk','Elixir.Oban.Pro.Workers.Workflow']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_pubsub-2.0.0/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.PubSub','Elixir.Phoenix.PubSub.Adapter',
          'Elixir.Phoenix.PubSub.Application',
          'Elixir.Phoenix.PubSub.BroadcastError','Elixir.Phoenix.PubSub.PG2',
          'Elixir.Phoenix.PubSub.Supervisor','Elixir.Phoenix.Tracker',
          'Elixir.Phoenix.Tracker.Clock',
          'Elixir.Phoenix.Tracker.DeltaGeneration',
          'Elixir.Phoenix.Tracker.Replica','Elixir.Phoenix.Tracker.Shard',
          'Elixir.Phoenix.Tracker.State']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/query_builder-0.19.2/ebin"]},
     {primLoad,
         ['Elixir.Ecto.Queryable.QueryBuilder.Query',
          'Elixir.Inspect.QueryBuilder.Query','Elixir.QueryBuilder',
          'Elixir.QueryBuilder.AssocList',
          'Elixir.QueryBuilder.AssocList.State',
          'Elixir.QueryBuilder.JoinMaker','Elixir.QueryBuilder.Query',
          'Elixir.QueryBuilder.Query.OrderBy',
          'Elixir.QueryBuilder.Query.Preload',
          'Elixir.QueryBuilder.Query.Where','Elixir.QueryBuilder.Schema',
          'Elixir.QueryBuilder.Utils']},
     {path,["$ROOT/lib/runtime_tools-1.15.1/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,msacc,observer_backend,
          runtime_tools,runtime_tools_sup,scheduler,system_information,
          ttb_autostart]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/slugify-1.3.1/ebin"]},
     {primLoad,['Elixir.Slug']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/combine-0.10.0/ebin"]},
     {primLoad,
         ['Elixir.Combine','Elixir.Combine.Helpers',
          'Elixir.Combine.ParserState','Elixir.Combine.Parsers.Base',
          'Elixir.Combine.Parsers.Binary','Elixir.Combine.Parsers.Text']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/gettext-0.18.2/ebin"]},
     {primLoad,
         ['Elixir.Gettext','Elixir.Gettext.Application',
          'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
          'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
          'Elixir.Gettext.ExtractorAgent','Elixir.Gettext.Fuzzy',
          'Elixir.Gettext.Interpolation','Elixir.Gettext.Merger',
          'Elixir.Gettext.MissingBindingsError','Elixir.Gettext.PO',
          'Elixir.Gettext.PO.Parser','Elixir.Gettext.PO.PluralTranslation',
          'Elixir.Gettext.PO.SyntaxError','Elixir.Gettext.PO.Tokenizer',
          'Elixir.Gettext.PO.Translation','Elixir.Gettext.PO.Translations',
          'Elixir.Gettext.Plural','Elixir.Gettext.Plural.UnknownLocaleError',
          'Elixir.Gettext.PluralFormError','Elixir.Mix.Tasks.Compile.Gettext',
          'Elixir.Mix.Tasks.Gettext.Extract','Elixir.Mix.Tasks.Gettext.Merge',
          gettext_po_parser]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/tzdata-1.1.0/ebin"]},
     {primLoad,
         ['Elixir.Tzdata','Elixir.Tzdata.App','Elixir.Tzdata.BasicDataMap',
          'Elixir.Tzdata.DataBuilder','Elixir.Tzdata.DataLoader',
          'Elixir.Tzdata.EtsHolder','Elixir.Tzdata.FarFutureDynamicPeriods',
          'Elixir.Tzdata.HTTPClient','Elixir.Tzdata.HTTPClient.Hackney',
          'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
          'Elixir.Tzdata.ParserOrganizer','Elixir.Tzdata.PeriodBuilder',
          'Elixir.Tzdata.ReleaseReader','Elixir.Tzdata.ReleaseUpdater',
          'Elixir.Tzdata.TimeZoneDatabase','Elixir.Tzdata.Util']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/timex-3.7.5/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Timex.Interval',
          'Elixir.Inspect.Timex.AmbiguousDateTime',
          'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
          'Elixir.Inspect.Timex.Duration','Elixir.Inspect.Timex.TimezoneInfo',
          'Elixir.Timex','Elixir.Timex.AmbiguousDateTime',
          'Elixir.Timex.AmbiguousTimezoneInfo','Elixir.Timex.Calendar.Julian',
          'Elixir.Timex.Comparable','Elixir.Timex.Comparable.Date',
          'Elixir.Timex.Comparable.DateTime','Elixir.Timex.Comparable.Diff',
          'Elixir.Timex.Comparable.NaiveDateTime',
          'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
          'Elixir.Timex.Comparable.Tuple','Elixir.Timex.Comparable.Utils',
          'Elixir.Timex.Constants','Elixir.Timex.Convert',
          'Elixir.Timex.ConvertError','Elixir.Timex.Date',
          'Elixir.Timex.DateTime','Elixir.Timex.DateTime.Helpers',
          'Elixir.Timex.Duration','Elixir.Timex.Format.DateTime.Formatter',
          'Elixir.Timex.Format.DateTime.Formatters.Default',
          'Elixir.Timex.Format.DateTime.Formatters.Relative',
          'Elixir.Timex.Format.DateTime.Formatters.Strftime',
          'Elixir.Timex.Format.Duration.Formatter',
          'Elixir.Timex.Format.Duration.Formatters.Default',
          'Elixir.Timex.Format.Duration.Formatters.Humanized',
          'Elixir.Timex.Format.FormatError','Elixir.Timex.Gettext',
          'Elixir.Timex.Helpers','Elixir.Timex.Interval',
          'Elixir.Timex.Interval.FormatError','Elixir.Timex.Macros',
          'Elixir.Timex.NaiveDateTime','Elixir.Timex.Parse.DateTime.Helpers',
          'Elixir.Timex.Parse.DateTime.Parser',
          'Elixir.Timex.Parse.DateTime.Parsers',
          'Elixir.Timex.Parse.DateTime.Parsers.ISO8601Extended',
          'Elixir.Timex.Parse.DateTime.Tokenizer',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
          'Elixir.Timex.Parse.Duration.Parser',
          'Elixir.Timex.Parse.Duration.Parsers.ISO8601Parser',
          'Elixir.Timex.Parse.ParseError',
          'Elixir.Timex.Parse.Timezones.Posix',
          'Elixir.Timex.Parse.ZoneInfo.Parser',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
          'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Rule',
          'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',
          'Elixir.Timex.PosixTimezone','Elixir.Timex.Protocol',
          'Elixir.Timex.Protocol.Any','Elixir.Timex.Protocol.Date',
          'Elixir.Timex.Protocol.DateTime','Elixir.Timex.Protocol.Map',
          'Elixir.Timex.Protocol.NaiveDateTime','Elixir.Timex.Protocol.Tuple',
          'Elixir.Timex.Time','Elixir.Timex.Timezone',
          'Elixir.Timex.Timezone.Database','Elixir.Timex.Timezone.Local',
          'Elixir.Timex.Timezone.Utils','Elixir.Timex.TimezoneInfo',
          'Elixir.Timex.Translator','Elixir.Timex.Types']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/trans-2.2.0/ebin"]},
     {primLoad,
         ['Elixir.Trans','Elixir.Trans.QueryBuilder',
          'Elixir.Trans.Translator']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/countdownplus-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Countdownplus','Elixir.Countdownplus.Accounts',
          'Elixir.Countdownplus.Accounts.AuthProviderProfile',
          'Elixir.Countdownplus.Accounts.AuthProviderProfile.Extended',
          'Elixir.Countdownplus.Accounts.AuthProviderProfile.Internal',
          'Elixir.Countdownplus.Accounts.Authenticator',
          'Elixir.Countdownplus.Accounts.Authorizer',
          'Elixir.Countdownplus.Accounts.Contact',
          'Elixir.Countdownplus.Accounts.Contact.Extended',
          'Elixir.Countdownplus.Accounts.Contact.Internal',
          'Elixir.Countdownplus.Accounts.Credential',
          'Elixir.Countdownplus.Accounts.Credential.Internal',
          'Elixir.Countdownplus.Accounts.CredentialNotifier',
          'Elixir.Countdownplus.Accounts.CredentialToken',
          'Elixir.Countdownplus.Accounts.Device',
          'Elixir.Countdownplus.Accounts.Device.Details',
          'Elixir.Countdownplus.Accounts.Registration',
          'Elixir.Countdownplus.Accounts.User',
          'Elixir.Countdownplus.Accounts.User.Extended',
          'Elixir.Countdownplus.Accounts.User.Internal',
          'Elixir.Countdownplus.Accounts.User.Settings',
          'Elixir.Countdownplus.Activities',
          'Elixir.Countdownplus.Activities.Activity',
          'Elixir.Countdownplus.Activities.Activity.Extended',
          'Elixir.Countdownplus.Activities.ActivityEntry',
          'Elixir.Countdownplus.Application','Elixir.Countdownplus.Articles',
          'Elixir.Countdownplus.Articles.Article',
          'Elixir.Countdownplus.Articles.Article.TitleSlug',
          'Elixir.Countdownplus.Articles.Article.TitleSlug.Type',
          'Elixir.Countdownplus.Articles.Oembed',
          'Elixir.Countdownplus.Articles.Oembed.Extended',
          'Elixir.Countdownplus.Cldr',
          'Elixir.Countdownplus.Cldr.Gettext.Plural',
          'Elixir.Countdownplus.Cldr.Locale',
          'Elixir.Countdownplus.Cldr.Number.Cardinal',
          'Elixir.Countdownplus.Cldr.Number.Ordinal',
          'Elixir.Countdownplus.Cldr.Number.PluralRule.Range',
          'Elixir.Countdownplus.Cldr.Territory','Elixir.Countdownplus.Colors',
          'Elixir.Countdownplus.Colors.HSL',
          'Elixir.Countdownplus.Colors.Parser',
          'Elixir.Countdownplus.Colors.RGB',
          'Elixir.Countdownplus.Db.IndexNames',
          'Elixir.Countdownplus.Db.Introspect',
          'Elixir.Countdownplus.Db.Migration','Elixir.Countdownplus.Events',
          'Elixir.Countdownplus.Events.AlarmSound',
          'Elixir.Countdownplus.Events.Appearance',
          'Elixir.Countdownplus.Events.Countdown',
          'Elixir.Countdownplus.Events.Countdown.Extended',
          'Elixir.Countdownplus.Events.Countdown.Internal',
          'Elixir.Countdownplus.Events.CountdownSettings',
          'Elixir.Countdownplus.Events.Event',
          'Elixir.Countdownplus.Events.Event.Extended',
          'Elixir.Countdownplus.Events.Event.Internal',
          'Elixir.Countdownplus.Events.Event.Recurrence',
          'Elixir.Countdownplus.Events.Event.TitleSlug',
          'Elixir.Countdownplus.Events.Event.TitleSlug.Type',
          'Elixir.Countdownplus.Events.RecurrenceRule',
          'Elixir.Countdownplus.Events.Theme',
          'Elixir.Countdownplus.Events.Theme.Background',
          'Elixir.Countdownplus.Events.Theme.Position',
          'Elixir.Countdownplus.Events.Theme.Text',
          'Elixir.Countdownplus.Events.UserLifeEvent',
          'Elixir.Countdownplus.Events.UserLifeEvent.Extended',
          'Elixir.Countdownplus.Groups','Elixir.Countdownplus.Groups.Group',
          'Elixir.Countdownplus.Groups.Group.NameSlug',
          'Elixir.Countdownplus.Groups.Group.NameSlug.Type',
          'Elixir.Countdownplus.Groups.GroupEvent',
          'Elixir.Countdownplus.Groups.GroupMember',
          'Elixir.Countdownplus.Groups.GroupMember.Settings',
          'Elixir.Countdownplus.KeyValues',
          'Elixir.Countdownplus.KeyValues.KeyValue',
          'Elixir.Countdownplus.Legacy','Elixir.Countdownplus.Legacy.Article',
          'Elixir.Countdownplus.Legacy.ArticleOembed',
          'Elixir.Countdownplus.Legacy.ArticleOembed.Data',
          'Elixir.Countdownplus.Legacy.Attachment',
          'Elixir.Countdownplus.Legacy.CivilDate',
          'Elixir.Countdownplus.Legacy.Countdown',
          'Elixir.Countdownplus.Legacy.Countdown.Data',
          'Elixir.Countdownplus.Legacy.Device',
          'Elixir.Countdownplus.Legacy.Device.Data',
          'Elixir.Countdownplus.Legacy.Event',
          'Elixir.Countdownplus.Legacy.Event.Data',
          'Elixir.Countdownplus.Legacy.Follow',
          'Elixir.Countdownplus.Legacy.Follow.Data',
          'Elixir.Countdownplus.Legacy.Holiday',
          'Elixir.Countdownplus.Legacy.Holiday.Data',
          'Elixir.Countdownplus.Legacy.IosReceipt',
          'Elixir.Countdownplus.Legacy.IosReceipt.Data',
          'Elixir.Countdownplus.Legacy.Location',
          'Elixir.Countdownplus.Legacy.Location.Data',
          'Elixir.Countdownplus.Legacy.Migrator.ArticleOembedMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.CountdownMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.DeviceMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.EventMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.FollowMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.HolidayMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.Interface',
          'Elixir.Countdownplus.Legacy.Migrator.IosReceiptMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.LocationMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.ProductMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.PurchaseMigrator',
          'Elixir.Countdownplus.Legacy.Migrator.Server',
          'Elixir.Countdownplus.Legacy.Migrator.Stream',
          'Elixir.Countdownplus.Legacy.Migrator.UserMigrator',
          'Elixir.Countdownplus.Legacy.Product',
          'Elixir.Countdownplus.Legacy.Product.Data',
          'Elixir.Countdownplus.Legacy.Profile',
          'Elixir.Countdownplus.Legacy.Purchase',
          'Elixir.Countdownplus.Legacy.Purchase.Data',
          'Elixir.Countdownplus.Legacy.User',
          'Elixir.Countdownplus.Legacy.User.Data',
          'Elixir.Countdownplus.Legacy.Utils',
          'Elixir.Countdownplus.LegacyRepo',
          'Elixir.Countdownplus.LegacySchema','Elixir.Countdownplus.Market',
          'Elixir.Countdownplus.Market.Product',
          'Elixir.Countdownplus.Market.Purchase',
          'Elixir.Countdownplus.Market.Purchase.Internal',
          'Elixir.Countdownplus.Market.Receipt',
          'Elixir.Countdownplus.Market.Receipt.Internal',
          'Elixir.Countdownplus.Media',
          'Elixir.Countdownplus.Media.ArticleAttachment',
          'Elixir.Countdownplus.Media.ArticleAttachment.Extended',
          'Elixir.Countdownplus.Media.Attachment',
          'Elixir.Countdownplus.Media.Attachment.Asset',
          'Elixir.Countdownplus.Media.Attachment.Author',
          'Elixir.Countdownplus.Media.Attachment.ContentData',
          'Elixir.Countdownplus.Media.CountdownAttachment',
          'Elixir.Countdownplus.Media.CountdownAttachment.Extended',
          'Elixir.Countdownplus.Media.EventAttachment',
          'Elixir.Countdownplus.Media.EventAttachment.Extended',
          'Elixir.Countdownplus.Media.UserAttachment',
          'Elixir.Countdownplus.Media.UserAttachment.Extended',
          'Elixir.Countdownplus.Notifications.Dispatcher',
          'Elixir.Countdownplus.Notifications.EmailDispatcher',
          'Elixir.Countdownplus.Notifications.Emails',
          'Elixir.Countdownplus.Notifications.Emails.ConfirmCodeEmail',
          'Elixir.Countdownplus.Notifications.Emails.ConfirmationEmail',
          'Elixir.Countdownplus.Notifications.Emails.MjmlEmail',
          'Elixir.Countdownplus.Notifications.Emails.ResetPasswordEmail',
          'Elixir.Countdownplus.Places','Elixir.Countdownplus.Places.Address',
          'Elixir.Countdownplus.Places.DeviceAddress',
          'Elixir.Countdownplus.Places.DeviceAddress.Extended',
          'Elixir.Countdownplus.Places.EventAddress',
          'Elixir.Countdownplus.Places.EventAddress.Extended',
          'Elixir.Countdownplus.Places.GroupAddress',
          'Elixir.Countdownplus.Places.GroupAddress.Extended',
          'Elixir.Countdownplus.Places.UserAddress',
          'Elixir.Countdownplus.Places.UserAddress.Extended',
          'Elixir.Countdownplus.ReleaseTasks','Elixir.Countdownplus.Repo',
          'Elixir.Countdownplus.Schema','Elixir.Countdownplus.Social',
          'Elixir.Countdownplus.Social.Follow',
          'Elixir.Countdownplus.Social.Relationship',
          'Elixir.Countdownplus.Types.ActivityObject',
          'Elixir.Countdownplus.Types.Dimension',
          'Elixir.Countdownplus.Types.Ecto.Color',
          'Elixir.Countdownplus.Types.Ecto.CompactEmbed',
          'Elixir.Countdownplus.Types.Ecto.CountryCode',
          'Elixir.Countdownplus.Types.Ecto.DateTimeMask',
          'Elixir.Countdownplus.Types.Ecto.Email',
          'Elixir.Countdownplus.Types.Ecto.Int4Range',
          'Elixir.Countdownplus.Types.Ecto.Int8Range',
          'Elixir.Countdownplus.Types.Ecto.PgRange',
          'Elixir.Countdownplus.Types.Ecto.RecurrenceRule',
          'Elixir.Countdownplus.Types.Ecto.Timezone',
          'Elixir.Countdownplus.Types.Ecto.TstzRange',
          'Elixir.Countdownplus.Types.Ecto.Url',
          'Elixir.Countdownplus.Types.Ecto.Username',
          'Elixir.Countdownplus.Types.Ecto.UsernameBlocklist',
          'Elixir.Countdownplus.Types.Enums',
          'Elixir.Countdownplus.Types.Enums.AccountType',
          'Elixir.Countdownplus.Types.Enums.ActivityEntity',
          'Elixir.Countdownplus.Types.Enums.ActivityType',
          'Elixir.Countdownplus.Types.Enums.AppEdition',
          'Elixir.Countdownplus.Types.Enums.ArticleType',
          'Elixir.Countdownplus.Types.Enums.AttachmentProvider',
          'Elixir.Countdownplus.Types.Enums.AttachmentType',
          'Elixir.Countdownplus.Types.Enums.AuthMethod',
          'Elixir.Countdownplus.Types.Enums.AuthProvider',
          'Elixir.Countdownplus.Types.Enums.CorporateEventType',
          'Elixir.Countdownplus.Types.Enums.CountUnit',
          'Elixir.Countdownplus.Types.Enums.DayOfWeek',
          'Elixir.Countdownplus.Types.Enums.DevicePlatform',
          'Elixir.Countdownplus.Types.Enums.EducationEventType',
          'Elixir.Countdownplus.Types.Enums.EventAccessMode',
          'Elixir.Countdownplus.Types.Enums.EventProvider',
          'Elixir.Countdownplus.Types.Enums.EventType',
          'Elixir.Countdownplus.Types.Enums.FamilyEventType',
          'Elixir.Countdownplus.Types.Enums.FestivalEventType',
          'Elixir.Countdownplus.Types.Enums.FundraiserEventType',
          'Elixir.Countdownplus.Types.Enums.GroupAccessMode',
          'Elixir.Countdownplus.Types.Enums.GroupMembershipStatus',
          'Elixir.Countdownplus.Types.Enums.GroupMembershipType',
          'Elixir.Countdownplus.Types.Enums.InvitationResponse',
          'Elixir.Countdownplus.Types.Enums.NotificationChannel',
          'Elixir.Countdownplus.Types.Enums.ProfileAttachmentType',
          'Elixir.Countdownplus.Types.Enums.Pronoun',
          'Elixir.Countdownplus.Types.Enums.PurchaseModel',
          'Elixir.Countdownplus.Types.Enums.RecurrenceFrequency',
          'Elixir.Countdownplus.Types.Enums.RelationshipType',
          'Elixir.Countdownplus.Types.Enums.ReminderUnit',
          'Elixir.Countdownplus.Types.Enums.WorkEventType',
          'Elixir.Countdownplus.Types.Gauge',
          'Elixir.Countdownplus.Types.Postgres',
          'Elixir.Countdownplus.Utils.Changeset',
          'Elixir.Countdownplus.Utils.Converter',
          'Elixir.Countdownplus.Utils.Dig','Elixir.Countdownplus.Utils.Fill',
          'Elixir.Countdownplus.Utils.Graphql',
          'Elixir.Countdownplus.Utils.Map','Elixir.Countdownplus.Utils.Maybe',
          'Elixir.Countdownplus.Utils.Presence',
          'Elixir.Countdownplus.Utils.Seconds',
          'Elixir.Countdownplus.Utils.String',
          'Elixir.Countdownplus.Utils.Token',
          'Elixir.Countdownplus.Utils.Uniquify',
          'Elixir.Countdownplus.Workers.LegacyMigrate',
          'Elixir.Countdownplus.Workers.LegacyMigrateBatch',
          'Elixir.Countdownplus.Workers.LegacyMigrateBatcher',
          'Elixir.Countdownplus.Workers.SendEmailWorker',
          'Elixir.Inspect.Countdownplus.Accounts.Credential',
          'Elixir.Inspect.Countdownplus.Accounts.Registration',
          'Elixir.String.Chars.Countdownplus.Colors.HSL',
          'Elixir.String.Chars.Countdownplus.Colors.RGB',
          'Elixir.String.Chars.Countdownplus.Events.RecurrenceRule']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/nimble_parsec-1.1.0/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.NimbleParsec.Compile','Elixir.NimbleParsec',
          'Elixir.NimbleParsec.Compiler','Elixir.NimbleParsec.Recorder']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/absinthe-1.6.4/ebin"]},
     {primLoad,
         ['Elixir.Absinthe','Elixir.Absinthe.Adapter',
          'Elixir.Absinthe.Adapter.LanguageConventions',
          'Elixir.Absinthe.Adapter.Passthrough',
          'Elixir.Absinthe.Adapter.StrictLanguageConventions',
          'Elixir.Absinthe.Adapter.Underscore',
          'Elixir.Absinthe.AnalysisError','Elixir.Absinthe.Blueprint',
          'Elixir.Absinthe.Blueprint.Directive',
          'Elixir.Absinthe.Blueprint.Document',
          'Elixir.Absinthe.Blueprint.Document.Field',
          'Elixir.Absinthe.Blueprint.Document.Fragment',
          'Elixir.Absinthe.Blueprint.Document.Fragment.Inline',
          'Elixir.Absinthe.Blueprint.Document.Fragment.Named',
          'Elixir.Absinthe.Blueprint.Document.Fragment.Named.Use',
          'Elixir.Absinthe.Blueprint.Document.Fragment.Spread',
          'Elixir.Absinthe.Blueprint.Document.Operation',
          'Elixir.Absinthe.Blueprint.Document.VariableDefinition',
          'Elixir.Absinthe.Blueprint.Draft',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Argument',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.BooleanValue',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Directive',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.DirectiveDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Document',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.EnumTypeDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.EnumValue',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.EnumValueDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Field',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.FieldDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.FloatValue',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Fragment',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.FragmentSpread',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.InlineFragment',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.InputObjectTypeDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.InputValueDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.IntValue',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.InterfaceTypeDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ListType',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ListValue',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.NamedType',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.NonNullType',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.NullValue',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ObjectField',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ObjectTypeDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ObjectValue',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.OperationDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ScalarTypeDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.SchemaDeclaration',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.SchemaDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.StringValue',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.TypeExtensionDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.UnionTypeDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Variable',
          'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.VariableDefinition',
          'Elixir.Absinthe.Blueprint.Draft.Atom',
          'Elixir.Absinthe.Blueprint.Draft.List',
          'Elixir.Absinthe.Blueprint.Execution',
          'Elixir.Absinthe.Blueprint.Input',
          'Elixir.Absinthe.Blueprint.Input.Argument',
          'Elixir.Absinthe.Blueprint.Input.Boolean',
          'Elixir.Absinthe.Blueprint.Input.Enum',
          'Elixir.Absinthe.Blueprint.Input.Field',
          'Elixir.Absinthe.Blueprint.Input.Float',
          'Elixir.Absinthe.Blueprint.Input.Generated',
          'Elixir.Absinthe.Blueprint.Input.Integer',
          'Elixir.Absinthe.Blueprint.Input.List',
          'Elixir.Absinthe.Blueprint.Input.Null',
          'Elixir.Absinthe.Blueprint.Input.Object',
          'Elixir.Absinthe.Blueprint.Input.RawValue',
          'Elixir.Absinthe.Blueprint.Input.String',
          'Elixir.Absinthe.Blueprint.Input.Value',
          'Elixir.Absinthe.Blueprint.Input.Variable',
          'Elixir.Absinthe.Blueprint.Input.Variable.Use',
          'Elixir.Absinthe.Blueprint.Result.Leaf',
          'Elixir.Absinthe.Blueprint.Result.List',
          'Elixir.Absinthe.Blueprint.Result.Object',
          'Elixir.Absinthe.Blueprint.Schema',
          'Elixir.Absinthe.Blueprint.Schema.Deprecation',
          'Elixir.Absinthe.Blueprint.Schema.DirectiveDefinition',
          'Elixir.Absinthe.Blueprint.Schema.EnumTypeDefinition',
          'Elixir.Absinthe.Blueprint.Schema.EnumValueDefinition',
          'Elixir.Absinthe.Blueprint.Schema.FieldDefinition',
          'Elixir.Absinthe.Blueprint.Schema.InputObjectTypeDefinition',
          'Elixir.Absinthe.Blueprint.Schema.InputValueDefinition',
          'Elixir.Absinthe.Blueprint.Schema.InterfaceTypeDefinition',
          'Elixir.Absinthe.Blueprint.Schema.ObjectTypeDefinition',
          'Elixir.Absinthe.Blueprint.Schema.ScalarTypeDefinition',
          'Elixir.Absinthe.Blueprint.Schema.SchemaDeclaration',
          'Elixir.Absinthe.Blueprint.Schema.SchemaDefinition',
          'Elixir.Absinthe.Blueprint.Schema.UnionTypeDefinition',
          'Elixir.Absinthe.Blueprint.SourceLocation',
          'Elixir.Absinthe.Blueprint.Transform',
          'Elixir.Absinthe.Blueprint.TypeReference',
          'Elixir.Absinthe.Blueprint.TypeReference.Identifier',
          'Elixir.Absinthe.Blueprint.TypeReference.List',
          'Elixir.Absinthe.Blueprint.TypeReference.Name',
          'Elixir.Absinthe.Blueprint.TypeReference.NonNull',
          'Elixir.Absinthe.Complexity','Elixir.Absinthe.ExecutionError',
          'Elixir.Absinthe.Introspection',
          'Elixir.Absinthe.Introspection.DirectiveLocation',
          'Elixir.Absinthe.Introspection.TypeKind','Elixir.Absinthe.Language',
          'Elixir.Absinthe.Language.Argument',
          'Elixir.Absinthe.Language.BooleanValue',
          'Elixir.Absinthe.Language.Directive',
          'Elixir.Absinthe.Language.DirectiveDefinition',
          'Elixir.Absinthe.Language.Document',
          'Elixir.Absinthe.Language.EnumTypeDefinition',
          'Elixir.Absinthe.Language.EnumValue',
          'Elixir.Absinthe.Language.EnumValueDefinition',
          'Elixir.Absinthe.Language.Field',
          'Elixir.Absinthe.Language.FieldDefinition',
          'Elixir.Absinthe.Language.FloatValue',
          'Elixir.Absinthe.Language.Fragment',
          'Elixir.Absinthe.Language.FragmentSpread',
          'Elixir.Absinthe.Language.InlineFragment',
          'Elixir.Absinthe.Language.InputObjectTypeDefinition',
          'Elixir.Absinthe.Language.InputValueDefinition',
          'Elixir.Absinthe.Language.IntValue',
          'Elixir.Absinthe.Language.InterfaceTypeDefinition',
          'Elixir.Absinthe.Language.ListType',
          'Elixir.Absinthe.Language.ListValue',
          'Elixir.Absinthe.Language.NamedType',
          'Elixir.Absinthe.Language.NonNullType',
          'Elixir.Absinthe.Language.NullValue',
          'Elixir.Absinthe.Language.ObjectField',
          'Elixir.Absinthe.Language.ObjectTypeDefinition',
          'Elixir.Absinthe.Language.ObjectValue',
          'Elixir.Absinthe.Language.OperationDefinition',
          'Elixir.Absinthe.Language.ScalarTypeDefinition',
          'Elixir.Absinthe.Language.SchemaDeclaration',
          'Elixir.Absinthe.Language.SchemaDefinition',
          'Elixir.Absinthe.Language.SelectionSet',
          'Elixir.Absinthe.Language.Source',
          'Elixir.Absinthe.Language.StringValue',
          'Elixir.Absinthe.Language.TypeExtensionDefinition',
          'Elixir.Absinthe.Language.UnionTypeDefinition',
          'Elixir.Absinthe.Language.Variable',
          'Elixir.Absinthe.Language.VariableDefinition',
          'Elixir.Absinthe.Lexer','Elixir.Absinthe.Logger',
          'Elixir.Absinthe.Middleware','Elixir.Absinthe.Middleware.Async',
          'Elixir.Absinthe.Middleware.Batch',
          'Elixir.Absinthe.Middleware.MapGet',
          'Elixir.Absinthe.Middleware.PassParent',
          'Elixir.Absinthe.Middleware.Telemetry','Elixir.Absinthe.Phase',
          'Elixir.Absinthe.Phase.Blueprint','Elixir.Absinthe.Phase.Debug',
          'Elixir.Absinthe.Phase.Document.Arguments.CoerceEnums',
          'Elixir.Absinthe.Phase.Document.Arguments.CoerceLists',
          'Elixir.Absinthe.Phase.Document.Arguments.Data',
          'Elixir.Absinthe.Phase.Document.Arguments.FlagInvalid',
          'Elixir.Absinthe.Phase.Document.Arguments.Normalize',
          'Elixir.Absinthe.Phase.Document.Arguments.Parse',
          'Elixir.Absinthe.Phase.Document.Arguments.VariableTypesMatch',
          'Elixir.Absinthe.Phase.Document.Complexity.Analysis',
          'Elixir.Absinthe.Phase.Document.Complexity.Result',
          'Elixir.Absinthe.Phase.Document.Context',
          'Elixir.Absinthe.Phase.Document.CurrentOperation',
          'Elixir.Absinthe.Phase.Document.Directives',
          'Elixir.Absinthe.Phase.Document.Execution.Resolution',
          'Elixir.Absinthe.Phase.Document.MissingLiterals',
          'Elixir.Absinthe.Phase.Document.MissingVariables',
          'Elixir.Absinthe.Phase.Document.OverrideRoot',
          'Elixir.Absinthe.Phase.Document.Result',
          'Elixir.Absinthe.Phase.Document.Uses',
          'Elixir.Absinthe.Phase.Document.Validation.ArgumentsOfCorrectType',
          'Elixir.Absinthe.Phase.Document.Validation.FieldsOnCorrectType',
          'Elixir.Absinthe.Phase.Document.Validation.KnownArgumentNames',
          'Elixir.Absinthe.Phase.Document.Validation.KnownDirectives',
          'Elixir.Absinthe.Phase.Document.Validation.KnownFragmentNames',
          'Elixir.Absinthe.Phase.Document.Validation.LoneAnonymousOperation',
          'Elixir.Absinthe.Phase.Document.Validation.NoFragmentCycles',
          'Elixir.Absinthe.Phase.Document.Validation.NoUndefinedVariables',
          'Elixir.Absinthe.Phase.Document.Validation.NoUnusedFragments',
          'Elixir.Absinthe.Phase.Document.Validation.NoUnusedVariables',
          'Elixir.Absinthe.Phase.Document.Validation.OnlyOneSubscription',
          'Elixir.Absinthe.Phase.Document.Validation.ProvidedAnOperation',
          'Elixir.Absinthe.Phase.Document.Validation.ProvidedNonNullArguments',
          'Elixir.Absinthe.Phase.Document.Validation.ProvidedNonNullVariables',
          'Elixir.Absinthe.Phase.Document.Validation.RepeatableDirectives',
          'Elixir.Absinthe.Phase.Document.Validation.Result',
          'Elixir.Absinthe.Phase.Document.Validation.ScalarLeafs',
          'Elixir.Absinthe.Phase.Document.Validation.SelectedCurrentOperation',
          'Elixir.Absinthe.Phase.Document.Validation.UniqueArgumentNames',
          'Elixir.Absinthe.Phase.Document.Validation.UniqueFragmentNames',
          'Elixir.Absinthe.Phase.Document.Validation.UniqueInputFieldNames',
          'Elixir.Absinthe.Phase.Document.Validation.UniqueOperationNames',
          'Elixir.Absinthe.Phase.Document.Validation.UniqueVariableNames',
          'Elixir.Absinthe.Phase.Document.Validation.Utils.MessageSuggestions',
          'Elixir.Absinthe.Phase.Document.Validation.VariablesAreInputTypes',
          'Elixir.Absinthe.Phase.Document.Variables',
          'Elixir.Absinthe.Phase.Error','Elixir.Absinthe.Phase.Init',
          'Elixir.Absinthe.Phase.Parse','Elixir.Absinthe.Phase.Schema',
          'Elixir.Absinthe.Phase.Schema.ApplyDeclaration',
          'Elixir.Absinthe.Phase.Schema.Arguments.Data',
          'Elixir.Absinthe.Phase.Schema.Arguments.Normalize',
          'Elixir.Absinthe.Phase.Schema.Arguments.Parse',
          'Elixir.Absinthe.Phase.Schema.Build',
          'Elixir.Absinthe.Phase.Schema.Compile',
          'Elixir.Absinthe.Phase.Schema.Directives',
          'Elixir.Absinthe.Phase.Schema.FieldImports',
          'Elixir.Absinthe.Phase.Schema.Hydrate',
          'Elixir.Absinthe.Phase.Schema.InlineFunctions',
          'Elixir.Absinthe.Phase.Schema.Introspection',
          'Elixir.Absinthe.Phase.Schema.MarkReferenced',
          'Elixir.Absinthe.Phase.Schema.PopulatePersistentTerm',
          'Elixir.Absinthe.Phase.Schema.ReformatDescriptions',
          'Elixir.Absinthe.Phase.Schema.RegisterTriggers',
          'Elixir.Absinthe.Phase.Schema.TypeImports',
          'Elixir.Absinthe.Phase.Schema.Validation',
          'Elixir.Absinthe.Phase.Schema.Validation.DefaultEnumValuePresent',
          'Elixir.Absinthe.Phase.Schema.Validation.DirectivesMustBeValid',
          'Elixir.Absinthe.Phase.Schema.Validation.InputOutputTypesCorrectlyPlaced',
          'Elixir.Absinthe.Phase.Schema.Validation.InterfacesMustResolveTypes',
          'Elixir.Absinthe.Phase.Schema.Validation.KnownDirectives',
          'Elixir.Absinthe.Phase.Schema.Validation.NamesMustBeValid',
          'Elixir.Absinthe.Phase.Schema.Validation.NoCircularFieldImports',
          'Elixir.Absinthe.Phase.Schema.Validation.NoInterfaceCyles',
          'Elixir.Absinthe.Phase.Schema.Validation.ObjectInterfacesMustBeValid',
          'Elixir.Absinthe.Phase.Schema.Validation.ObjectMustImplementInterfaces',
          'Elixir.Absinthe.Phase.Schema.Validation.QueryTypeMustBeObject',
          'Elixir.Absinthe.Phase.Schema.Validation.Result',
          'Elixir.Absinthe.Phase.Schema.Validation.TypeNamesAreReserved',
          'Elixir.Absinthe.Phase.Schema.Validation.TypeNamesAreUnique',
          'Elixir.Absinthe.Phase.Schema.Validation.TypeReferencesExist',
          'Elixir.Absinthe.Phase.Subscription.Result',
          'Elixir.Absinthe.Phase.Subscription.SubscribeSelf',
          'Elixir.Absinthe.Phase.Telemetry',
          'Elixir.Absinthe.Phase.Validation',
          'Elixir.Absinthe.Phase.Validation.Helpers',
          'Elixir.Absinthe.Phase.Validation.KnownTypeNames',
          'Elixir.Absinthe.Pipeline','Elixir.Absinthe.Pipeline.BatchResolver',
          'Elixir.Absinthe.Plugin','Elixir.Absinthe.Resolution',
          'Elixir.Absinthe.Resolution.Helpers',
          'Elixir.Absinthe.Resolution.Projector','Elixir.Absinthe.Schema',
          'Elixir.Absinthe.Schema.Compiled','Elixir.Absinthe.Schema.Error',
          'Elixir.Absinthe.Schema.Hydrator','Elixir.Absinthe.Schema.Manager',
          'Elixir.Absinthe.Schema.Notation',
          'Elixir.Absinthe.Schema.Notation.Error',
          'Elixir.Absinthe.Schema.Notation.SDL',
          'Elixir.Absinthe.Schema.Notation.SDL.Render',
          'Elixir.Absinthe.Schema.PersistentTerm',
          'Elixir.Absinthe.Schema.Prototype',
          'Elixir.Absinthe.Schema.Prototype.Compiled',
          'Elixir.Absinthe.Schema.Prototype.Notation',
          'Elixir.Absinthe.Schema.Provider',
          'Elixir.Absinthe.SerializationError','Elixir.Absinthe.Subscription',
          'Elixir.Absinthe.Subscription.Local',
          'Elixir.Absinthe.Subscription.PipelineSerializer',
          'Elixir.Absinthe.Subscription.Proxy',
          'Elixir.Absinthe.Subscription.ProxySupervisor',
          'Elixir.Absinthe.Subscription.Pubsub',
          'Elixir.Absinthe.Subscription.Supervisor','Elixir.Absinthe.Test',
          'Elixir.Absinthe.Type','Elixir.Absinthe.Type.Argument',
          'Elixir.Absinthe.Type.BuiltIns.Directives',
          'Elixir.Absinthe.Type.BuiltIns.Introspection',
          'Elixir.Absinthe.Type.BuiltIns.Scalars',
          'Elixir.Absinthe.Type.BuiltIns.Scalars.Utils',
          'Elixir.Absinthe.Type.Custom','Elixir.Absinthe.Type.Custom.Decimal',
          'Elixir.Absinthe.Type.Deprecation','Elixir.Absinthe.Type.Directive',
          'Elixir.Absinthe.Type.Enum','Elixir.Absinthe.Type.Enum.Value',
          'Elixir.Absinthe.Type.Fetch','Elixir.Absinthe.Type.Field',
          'Elixir.Absinthe.Type.InputObject','Elixir.Absinthe.Type.Interface',
          'Elixir.Absinthe.Type.List','Elixir.Absinthe.Type.NonNull',
          'Elixir.Absinthe.Type.Object','Elixir.Absinthe.Type.Reference',
          'Elixir.Absinthe.Type.Scalar','Elixir.Absinthe.Type.Union',
          'Elixir.Absinthe.Utils','Elixir.Absinthe.Utils.Suggestion',
          'Elixir.Inspect.Absinthe.Blueprint',
          'Elixir.Inspect.Absinthe.Blueprint.Schema.DirectiveDefinition',
          'Elixir.Inspect.Absinthe.Blueprint.Schema.EnumTypeDefinition',
          'Elixir.Inspect.Absinthe.Blueprint.Schema.InputObjectTypeDefinition',
          'Elixir.Inspect.Absinthe.Blueprint.Schema.InterfaceTypeDefinition',
          'Elixir.Inspect.Absinthe.Blueprint.Schema.ObjectTypeDefinition',
          'Elixir.Inspect.Absinthe.Blueprint.Schema.ScalarTypeDefinition',
          'Elixir.Inspect.Absinthe.Blueprint.Schema.SchemaDeclaration',
          'Elixir.Inspect.Absinthe.Blueprint.Schema.UnionTypeDefinition',
          'Elixir.Inspect.Absinthe.Resolution',
          'Elixir.Mix.Tasks.Absinthe.Schema.Json',
          'Elixir.Mix.Tasks.Absinthe.Schema.Json.Options',
          'Elixir.Mix.Tasks.Absinthe.Schema.Sdl',
          'Elixir.Mix.Tasks.Absinthe.Schema.Sdl.Options',absinthe_parser]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/absinthe_plug-1.5.8/ebin"]},
     {primLoad,
         ['Elixir.Absinthe.GraphiQL.Validation.NoSubscriptionOnHTTP',
          'Elixir.Absinthe.Plug','Elixir.Absinthe.Plug.Batch.Runner',
          'Elixir.Absinthe.Plug.DocumentProvider',
          'Elixir.Absinthe.Plug.DocumentProvider.Compiled',
          'Elixir.Absinthe.Plug.DocumentProvider.Compiled.Check',
          'Elixir.Absinthe.Plug.DocumentProvider.Compiled.Writer',
          'Elixir.Absinthe.Plug.DocumentProvider.Default',
          'Elixir.Absinthe.Plug.GraphiQL',
          'Elixir.Absinthe.Plug.GraphiQL.Assets',
          'Elixir.Absinthe.Plug.Parser','Elixir.Absinthe.Plug.Request',
          'Elixir.Absinthe.Plug.Request.Query','Elixir.Absinthe.Plug.Types',
          'Elixir.Absinthe.Plug.Validation.HTTPMethod',
          'Elixir.Mix.Absinthe.Plug.GraphiQL.AssetsTask',
          'Elixir.Mix.Tasks.Absinthe.Plug.Graphiql.Assets.Download',
          'Elixir.Mix.Tasks.Absinthe.Plug.Graphiql.Assets.Remove']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix-1.5.9/ebin"]},
     {primLoad,
         ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
          'Elixir.Mix.Phoenix.Schema','Elixir.Mix.Tasks.Compile.Phoenix',
          'Elixir.Mix.Tasks.Phx','Elixir.Mix.Tasks.Phx.Digest',
          'Elixir.Mix.Tasks.Phx.Digest.Clean','Elixir.Mix.Tasks.Phx.Gen.Cert',
          'Elixir.Mix.Tasks.Phx.Gen.Channel',
          'Elixir.Mix.Tasks.Phx.Gen.Context',
          'Elixir.Mix.Tasks.Phx.Gen.Embedded','Elixir.Mix.Tasks.Phx.Gen.Html',
          'Elixir.Mix.Tasks.Phx.Gen.Json','Elixir.Mix.Tasks.Phx.Gen.Live',
          'Elixir.Mix.Tasks.Phx.Gen.Presence',
          'Elixir.Mix.Tasks.Phx.Gen.Schema','Elixir.Mix.Tasks.Phx.Gen.Secret',
          'Elixir.Mix.Tasks.Phx.Routes','Elixir.Mix.Tasks.Phx.Server',
          'Elixir.Phoenix','Elixir.Phoenix.ActionClauseError',
          'Elixir.Phoenix.Channel','Elixir.Phoenix.Channel.Server',
          'Elixir.Phoenix.ChannelTest',
          'Elixir.Phoenix.ChannelTest.NoopSerializer',
          'Elixir.Phoenix.CodeReloader','Elixir.Phoenix.CodeReloader.Proxy',
          'Elixir.Phoenix.CodeReloader.Server','Elixir.Phoenix.Config',
          'Elixir.Phoenix.ConnTest','Elixir.Phoenix.Controller',
          'Elixir.Phoenix.Controller.Pipeline','Elixir.Phoenix.Digester',
          'Elixir.Phoenix.Endpoint','Elixir.Phoenix.Endpoint.Cowboy2Adapter',
          'Elixir.Phoenix.Endpoint.Cowboy2Handler',
          'Elixir.Phoenix.Endpoint.CowboyAdapter',
          'Elixir.Phoenix.Endpoint.CowboyWebSocket',
          'Elixir.Phoenix.Endpoint.RenderErrors',
          'Elixir.Phoenix.Endpoint.Supervisor',
          'Elixir.Phoenix.Endpoint.Watcher','Elixir.Phoenix.Logger',
          'Elixir.Phoenix.MissingParamError','Elixir.Phoenix.Naming',
          'Elixir.Phoenix.NotAcceptableError','Elixir.Phoenix.Param',
          'Elixir.Phoenix.Param.Any','Elixir.Phoenix.Param.Atom',
          'Elixir.Phoenix.Param.BitString','Elixir.Phoenix.Param.Integer',
          'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
          'Elixir.Phoenix.Presence.Tracker','Elixir.Phoenix.Router',
          'Elixir.Phoenix.Router.ConsoleFormatter',
          'Elixir.Phoenix.Router.Helpers',
          'Elixir.Phoenix.Router.MalformedURIError',
          'Elixir.Phoenix.Router.NoRouteError',
          'Elixir.Phoenix.Router.Resource','Elixir.Phoenix.Router.Route',
          'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
          'Elixir.Phoenix.Socket.Broadcast',
          'Elixir.Phoenix.Socket.InvalidMessageError',
          'Elixir.Phoenix.Socket.Message',
          'Elixir.Phoenix.Socket.PoolSupervisor',
          'Elixir.Phoenix.Socket.Reply','Elixir.Phoenix.Socket.Serializer',
          'Elixir.Phoenix.Socket.Transport',
          'Elixir.Phoenix.Socket.V1.JSONSerializer',
          'Elixir.Phoenix.Socket.V2.JSONSerializer','Elixir.Phoenix.Template',
          'Elixir.Phoenix.Template.EExEngine',
          'Elixir.Phoenix.Template.Engine',
          'Elixir.Phoenix.Template.ExsEngine',
          'Elixir.Phoenix.Template.UndefinedError','Elixir.Phoenix.Token',
          'Elixir.Phoenix.Transports.LongPoll',
          'Elixir.Phoenix.Transports.LongPoll.Server',
          'Elixir.Phoenix.Transports.WebSocket','Elixir.Phoenix.View',
          'Elixir.Plug.Exception.Phoenix.ActionClauseError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_html-2.14.3/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
          'Elixir.Phoenix.HTML.Form','Elixir.Phoenix.HTML.FormData',
          'Elixir.Phoenix.HTML.FormData.Atom',
          'Elixir.Phoenix.HTML.FormData.Plug.Conn',
          'Elixir.Phoenix.HTML.Format','Elixir.Phoenix.HTML.Link',
          'Elixir.Phoenix.HTML.Safe','Elixir.Phoenix.HTML.Safe.Atom',
          'Elixir.Phoenix.HTML.Safe.BitString',
          'Elixir.Phoenix.HTML.Safe.Date','Elixir.Phoenix.HTML.Safe.DateTime',
          'Elixir.Phoenix.HTML.Safe.Float','Elixir.Phoenix.HTML.Safe.Integer',
          'Elixir.Phoenix.HTML.Safe.List',
          'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
          'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
          'Elixir.Phoenix.HTML.Safe.Time','Elixir.Phoenix.HTML.Safe.Tuple',
          'Elixir.Phoenix.HTML.Tag']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_live_view-0.15.7/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Phoenix.LiveView.Socket',
          'Elixir.Inspect.Phoenix.LiveView.Socket.AssignsNotInSocket',
          'Elixir.Inspect.Phoenix.LiveView.UploadConfig',
          'Elixir.Inspect.Phoenix.LiveViewTest.Element',
          'Elixir.Inspect.Phoenix.LiveViewTest.Upload',
          'Elixir.Inspect.Phoenix.LiveViewTest.View',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveComponent.CID',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Component',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Comprehension',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Rendered',
          'Elixir.Phoenix.LiveComponent','Elixir.Phoenix.LiveComponent.CID',
          'Elixir.Phoenix.LiveView','Elixir.Phoenix.LiveView.Application',
          'Elixir.Phoenix.LiveView.Channel',
          'Elixir.Phoenix.LiveView.Component',
          'Elixir.Phoenix.LiveView.Comprehension',
          'Elixir.Phoenix.LiveView.Controller','Elixir.Phoenix.LiveView.Diff',
          'Elixir.Phoenix.LiveView.Engine','Elixir.Phoenix.LiveView.Helpers',
          'Elixir.Phoenix.LiveView.Plug','Elixir.Phoenix.LiveView.Rendered',
          'Elixir.Phoenix.LiveView.Renderer','Elixir.Phoenix.LiveView.Router',
          'Elixir.Phoenix.LiveView.Socket',
          'Elixir.Phoenix.LiveView.Socket.AssignsNotInSocket',
          'Elixir.Phoenix.LiveView.Static','Elixir.Phoenix.LiveView.Upload',
          'Elixir.Phoenix.LiveView.UploadChannel',
          'Elixir.Phoenix.LiveView.UploadConfig',
          'Elixir.Phoenix.LiveView.UploadEntry',
          'Elixir.Phoenix.LiveView.Utils','Elixir.Phoenix.LiveViewTest',
          'Elixir.Phoenix.LiveViewTest.ClientProxy',
          'Elixir.Phoenix.LiveViewTest.DOM',
          'Elixir.Phoenix.LiveViewTest.Element',
          'Elixir.Phoenix.LiveViewTest.Upload',
          'Elixir.Phoenix.LiveViewTest.UploadClient',
          'Elixir.Phoenix.LiveViewTest.View',
          'Elixir.String.Chars.Phoenix.LiveComponent.CID']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/oban_web-2.7.1/ebin"]},
     {primLoad,
         ['Elixir.Oban.Web','Elixir.Oban.Web.BulkActionComponent',
          'Elixir.Oban.Web.DashboardLive','Elixir.Oban.Web.DashboardView',
          'Elixir.Oban.Web.DetailComponent','Elixir.Oban.Web.HeaderComponent',
          'Elixir.Oban.Web.Helpers','Elixir.Oban.Web.LayoutView',
          'Elixir.Oban.Web.ListingComponent',
          'Elixir.Oban.Web.ListingRowComponent',
          'Elixir.Oban.Web.NodeComponent',
          'Elixir.Oban.Web.NotificationComponent',
          'Elixir.Oban.Web.Plugins.Stats',
          'Elixir.Oban.Web.Plugins.Stats.State','Elixir.Oban.Web.Query',
          'Elixir.Oban.Web.QueueComponent','Elixir.Oban.Web.RefreshComponent',
          'Elixir.Oban.Web.Resolver','Elixir.Oban.Web.Router',
          'Elixir.Oban.Web.Search','Elixir.Oban.Web.SearchComponent',
          'Elixir.Oban.Web.SidebarComponent','Elixir.Oban.Web.StateComponent',
          'Elixir.Oban.Web.Telemetry','Elixir.Oban.Web.TimelineComponent',
          'Elixir.Oban.Web.Timing']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_ecto-4.3.0/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.Ecto','Elixir.Phoenix.Ecto.CheckRepoStatus',
          'Elixir.Phoenix.Ecto.PendingMigrationError',
          'Elixir.Phoenix.Ecto.SQL.Sandbox',
          'Elixir.Phoenix.Ecto.SQL.SandboxSession',
          'Elixir.Phoenix.Ecto.StorageNotCreatedError',
          'Elixir.Phoenix.HTML.FormData.Ecto.Changeset',
          'Elixir.Phoenix.HTML.Safe.Decimal',
          'Elixir.Plug.Exception.Ecto.CastError',
          'Elixir.Plug.Exception.Ecto.NoResultsError',
          'Elixir.Plug.Exception.Ecto.Query.CastError',
          'Elixir.Plug.Exception.Ecto.StaleEntryError',
          'Elixir.Plug.Exception.Ecto.SubQueryError',
          'Elixir.Plug.Exception.Phoenix.Ecto.PendingMigrationError',
          'Elixir.Plug.Exception.Phoenix.Ecto.StorageNotCreatedError']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/telemetry_metrics-0.6.1/ebin"]},
     {primLoad,
         ['Elixir.Telemetry.Metrics',
          'Elixir.Telemetry.Metrics.ConsoleReporter',
          'Elixir.Telemetry.Metrics.Counter',
          'Elixir.Telemetry.Metrics.Distribution',
          'Elixir.Telemetry.Metrics.LastValue','Elixir.Telemetry.Metrics.Sum',
          'Elixir.Telemetry.Metrics.Summary']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/phoenix_live_dashboard-0.4.0/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Phoenix.LiveDashboard.PageLive',
          'Elixir.Phoenix.LiveDashboard',
          'Elixir.Phoenix.LiveDashboard.AppInfoComponent',
          'Elixir.Phoenix.LiveDashboard.Application',
          'Elixir.Phoenix.LiveDashboard.ApplicationsPage',
          'Elixir.Phoenix.LiveDashboard.CardUsageComponent',
          'Elixir.Phoenix.LiveDashboard.ChartComponent',
          'Elixir.Phoenix.LiveDashboard.ColorBarComponent',
          'Elixir.Phoenix.LiveDashboard.ColorBarLegendComponent',
          'Elixir.Phoenix.LiveDashboard.EctoStatsPage',
          'Elixir.Phoenix.LiveDashboard.EtsInfoComponent',
          'Elixir.Phoenix.LiveDashboard.EtsPage',
          'Elixir.Phoenix.LiveDashboard.Helpers',
          'Elixir.Phoenix.LiveDashboard.HomePage',
          'Elixir.Phoenix.LiveDashboard.LayoutView',
          'Elixir.Phoenix.LiveDashboard.LoggerPubSubBackend',
          'Elixir.Phoenix.LiveDashboard.MetricsPage',
          'Elixir.Phoenix.LiveDashboard.ModalComponent',
          'Elixir.Phoenix.LiveDashboard.NavBarComponent',
          'Elixir.Phoenix.LiveDashboard.OSMonPage',
          'Elixir.Phoenix.LiveDashboard.PageBuilder',
          'Elixir.Phoenix.LiveDashboard.PageLive',
          'Elixir.Phoenix.LiveDashboard.PageNotFound',
          'Elixir.Phoenix.LiveDashboard.PortInfoComponent',
          'Elixir.Phoenix.LiveDashboard.PortsPage',
          'Elixir.Phoenix.LiveDashboard.ProcessInfoComponent',
          'Elixir.Phoenix.LiveDashboard.ProcessesPage',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Line',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Node',
          'Elixir.Phoenix.LiveDashboard.RequestLogger',
          'Elixir.Phoenix.LiveDashboard.RequestLoggerPage',
          'Elixir.Phoenix.LiveDashboard.Router',
          'Elixir.Phoenix.LiveDashboard.SocketInfoComponent',
          'Elixir.Phoenix.LiveDashboard.SocketsPage',
          'Elixir.Phoenix.LiveDashboard.SystemInfo',
          'Elixir.Phoenix.LiveDashboard.TableComponent',
          'Elixir.Phoenix.LiveDashboard.TelemetryListener',
          'Elixir.Phoenix.LiveDashboard.TitleBarComponent',
          'Elixir.Phoenix.LiveDashboard.Web']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/cowlib-2.11.0/ebin"]},
     {primLoad,
         [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,cow_http2,
          cow_http2_machine,cow_http_hd,cow_http_struct_hd,cow_http_te,
          cow_iolists,cow_link,cow_mimetypes,cow_multipart,cow_qs,cow_spdy,
          cow_sse,cow_uri,cow_uri_template,cow_ws]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/ranch-1.8.0/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_crc32c,ranch_listener_sup,ranch_protocol,ranch_proxy_header,
          ranch_server,ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/cowboy-2.9.0/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_children,cowboy_clear,
          cowboy_clock,cowboy_compress_h,cowboy_constraints,cowboy_handler,
          cowboy_http,cowboy_http2,cowboy_loop,cowboy_metrics_h,
          cowboy_middleware,cowboy_req,cowboy_rest,cowboy_router,
          cowboy_static,cowboy_stream,cowboy_stream_h,cowboy_sub_protocol,
          cowboy_sup,cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/cowboy_telemetry-0.3.1/ebin"]},
     {primLoad,[cowboy_telemetry_h]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/plug_cowboy-2.5.0/ebin"]},
     {primLoad,
         ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
          'Elixir.Plug.Cowboy.Drainer','Elixir.Plug.Cowboy.Handler',
          'Elixir.Plug.Cowboy.Translator']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/remote_ip-1.0.0/ebin"]},
     {primLoad,
         ['Elixir.RemoteIp','Elixir.RemoteIp.Block',
          'Elixir.RemoteIp.Debugger','Elixir.RemoteIp.Headers',
          'Elixir.RemoteIp.Options','Elixir.RemoteIp.Parser',
          'Elixir.RemoteIp.Parsers.Forwarded',
          'Elixir.RemoteIp.Parsers.Generic',
          'Elixir.String.Chars.RemoteIp.Block']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/telemetry_poller-0.5.1/ebin"]},
     {primLoad,
         [telemetry_poller,telemetry_poller_app,telemetry_poller_builtin,
          telemetry_poller_sup]},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/countdownplus_web-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.CountdownplusWeb','Elixir.CountdownplusWeb.Application',
          'Elixir.CountdownplusWeb.CredentialAuth',
          'Elixir.CountdownplusWeb.CredentialConfirmationController',
          'Elixir.CountdownplusWeb.CredentialConfirmationView',
          'Elixir.CountdownplusWeb.CredentialRegistrationController',
          'Elixir.CountdownplusWeb.CredentialRegistrationView',
          'Elixir.CountdownplusWeb.CredentialResetPasswordController',
          'Elixir.CountdownplusWeb.CredentialResetPasswordView',
          'Elixir.CountdownplusWeb.CredentialSessionController',
          'Elixir.CountdownplusWeb.CredentialSessionView',
          'Elixir.CountdownplusWeb.CredentialSettingsController',
          'Elixir.CountdownplusWeb.CredentialSettingsView',
          'Elixir.CountdownplusWeb.Endpoint',
          'Elixir.CountdownplusWeb.ErrorHelpers',
          'Elixir.CountdownplusWeb.ErrorView',
          'Elixir.CountdownplusWeb.Gettext',
          'Elixir.CountdownplusWeb.LayoutView',
          'Elixir.CountdownplusWeb.PageLive','Elixir.CountdownplusWeb.Router',
          'Elixir.CountdownplusWeb.Router.Helpers',
          'Elixir.CountdownplusWeb.Schema',
          'Elixir.CountdownplusWeb.Schema.Compiled',
          'Elixir.CountdownplusWeb.Schema.Types.Enums',
          'Elixir.CountdownplusWeb.Schema.Types.Queries',
          'Elixir.CountdownplusWeb.Telemetry',
          'Elixir.CountdownplusWeb.UserSocket',
          'Elixir.Mix.Tasks.Cplus.Build.Release',
          'Elixir.Mix.Tasks.Cplus.Gen.GqlSchema',
          'Elixir.Mix.Tasks.Cplus.Utils']},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$RELEASE_LIB/iex-1.11.3/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.Broker','Elixir.IEx.CLI','Elixir.IEx.Config',
          'Elixir.IEx.Evaluator','Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.Info','Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
          'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
          'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection','Elixir.IEx.Pry',
          'Elixir.IEx.Server','Elixir.IEx.State']},
     {progress,modules_loaded},
     {path,
         ["$RELEASE_LIB/../releases/0.1.0/consolidated",
          "$ROOT/lib/kernel-7.2.1/ebin","$ROOT/lib/stdlib-3.14/ebin",
          "$ROOT/lib/compiler-7.6.6/ebin","$RELEASE_LIB/elixir-1.11.3/ebin",
          "$ROOT/lib/sasl-4.0.1/ebin","$RELEASE_LIB/eex-1.11.3/ebin",
          "$ROOT/lib/asn1-5.0.14/ebin","$RELEASE_LIB/certifi-2.6.1/ebin",
          "$ROOT/lib/crypto-4.8.3/ebin",
          "$RELEASE_LIB/unicode_util_compat-0.7.0/ebin",
          "$RELEASE_LIB/idna-6.1.1/ebin","$RELEASE_LIB/metrics-1.0.1/ebin",
          "$RELEASE_LIB/mimerl-1.2.0/ebin","$ROOT/lib/syntax_tools-2.4/ebin",
          "$RELEASE_LIB/parse_trans-3.3.1/ebin",
          "$ROOT/lib/public_key-1.9.2/ebin","$ROOT/lib/ssl-10.2.4/ebin",
          "$RELEASE_LIB/ssl_verify_fun-1.1.6/ebin",
          "$RELEASE_LIB/hackney-1.17.4/ebin",
          "$RELEASE_LIB/logger-1.11.3/ebin","$RELEASE_LIB/mime-1.6.0/ebin",
          "$RELEASE_LIB/plug_crypto-1.2.2/ebin",
          "$RELEASE_LIB/telemetry-0.4.3/ebin","$RELEASE_LIB/plug-1.11.1/ebin",
          "$RELEASE_LIB/bamboo-2.2.0/ebin","$RELEASE_LIB/ex_aws-2.2.3/ebin",
          "$RELEASE_LIB/ex_aws_ses-2.1.1/ebin",
          "$RELEASE_LIB/jason-1.2.2/ebin","$RELEASE_LIB/mail-0.2.3/ebin",
          "$RELEASE_LIB/bamboo_ses-0.2.0/ebin",
          "$RELEASE_LIB/comeonin-5.3.2/ebin",
          "$RELEASE_LIB/bcrypt_elixir-2.3.0/ebin",
          "$RELEASE_LIB/bodyguard-2.4.1/ebin",
          "$RELEASE_LIB/decimal-2.0.0/ebin","$RELEASE_LIB/ecto-3.6.2/ebin",
          "$RELEASE_LIB/slugger-0.3.0/ebin",
          "$RELEASE_LIB/ecto_autoslug_field-2.0.1/ebin",
          "$RELEASE_LIB/connection-1.1.0/ebin",
          "$RELEASE_LIB/db_connection-2.4.0/ebin",
          "$RELEASE_LIB/ecto_sql-3.6.2/ebin",
          "$RELEASE_LIB/ecto_enum-1.4.0/ebin",
          "$RELEASE_LIB/postgrex-0.15.9/ebin",
          "$RELEASE_LIB/ecto_network-1.3.0/ebin",
          "$RELEASE_LIB/ecto_soft_delete-2.0.2/ebin",
          "$RELEASE_LIB/castore-0.1.10/ebin","$RELEASE_LIB/mint-0.4.0/ebin",
          "$RELEASE_LIB/emojix-0.3.1/ebin",
          "$RELEASE_LIB/ex_aws_s3-2.2.0/ebin","$ROOT/lib/inets-7.3.2/ebin",
          "$RELEASE_LIB/cldr_utils-2.16.0/ebin",
          "$RELEASE_LIB/ex_unit-1.11.3/ebin",
          "$RELEASE_LIB/ex_cldr-2.23.0/ebin",
          "$RELEASE_LIB/ex_cldr_territories-2.2.2/ebin",
          "$RELEASE_LIB/excal-0.3.2/ebin","$RELEASE_LIB/geo-3.4.2/ebin",
          "$RELEASE_LIB/geo_postgis-3.4.0/ebin",
          "$RELEASE_LIB/inflex-2.1.0/ebin","$RELEASE_LIB/rustler-0.22.0/ebin",
          "$RELEASE_LIB/mjml-1.1.1/ebin","$ROOT/lib/os_mon-2.6.1/ebin",
          "$RELEASE_LIB/new_relic_agent-1.27.3/ebin",
          "$RELEASE_LIB/oban-2.7.2/ebin","$RELEASE_LIB/oban_pro-0.8.1/ebin",
          "$RELEASE_LIB/phoenix_pubsub-2.0.0/ebin",
          "$RELEASE_LIB/query_builder-0.19.2/ebin",
          "$ROOT/lib/runtime_tools-1.15.1/ebin",
          "$RELEASE_LIB/slugify-1.3.1/ebin",
          "$RELEASE_LIB/combine-0.10.0/ebin",
          "$RELEASE_LIB/gettext-0.18.2/ebin","$RELEASE_LIB/tzdata-1.1.0/ebin",
          "$RELEASE_LIB/timex-3.7.5/ebin","$RELEASE_LIB/trans-2.2.0/ebin",
          "$RELEASE_LIB/countdownplus-0.1.0/ebin",
          "$RELEASE_LIB/nimble_parsec-1.1.0/ebin",
          "$RELEASE_LIB/absinthe-1.6.4/ebin",
          "$RELEASE_LIB/absinthe_plug-1.5.8/ebin",
          "$RELEASE_LIB/phoenix-1.5.9/ebin",
          "$RELEASE_LIB/phoenix_html-2.14.3/ebin",
          "$RELEASE_LIB/phoenix_live_view-0.15.7/ebin",
          "$RELEASE_LIB/oban_web-2.7.1/ebin",
          "$RELEASE_LIB/phoenix_ecto-4.3.0/ebin",
          "$RELEASE_LIB/telemetry_metrics-0.6.1/ebin",
          "$RELEASE_LIB/phoenix_live_dashboard-0.4.0/ebin",
          "$RELEASE_LIB/cowlib-2.11.0/ebin","$RELEASE_LIB/ranch-1.8.0/ebin",
          "$RELEASE_LIB/cowboy-2.9.0/ebin",
          "$RELEASE_LIB/cowboy_telemetry-0.3.1/ebin",
          "$RELEASE_LIB/plug_cowboy-2.5.0/ebin",
          "$RELEASE_LIB/remote_ip-1.0.0/ebin",
          "$RELEASE_LIB/telemetry_poller-0.5.1/ebin",
          "$RELEASE_LIB/countdownplus_web-0.1.0/ebin",
          "$RELEASE_LIB/iex-1.11.3/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.2.1"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_compile_server,erl_distribution,
                        erl_reply,erl_signal_handler,erpc,error_handler,
                        error_logger,file,file_server,file_io_server,global,
                        global_group,global_search,group,group_history,heart,
                        hipe_unified_loader,inet6_tcp,inet6_tcp_dist,
                        inet6_udp,inet6_sctp,inet_config,inet_hosts,
                        inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user,user_drv,
                        user_sup,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_udp,gen_sctp,gen_tcp_socket,inet,inet_db,
                        inet_dns,inet_parse,inet_res,inet_tcp,inet_udp,
                        inet_sctp,pg,pg2,raw_file_io,raw_file_io_compressed,
                        raw_file_io_deflate,raw_file_io_delayed,
                        raw_file_io_inflate,raw_file_io_list,raw_file_io_raw,
                        seq_trace,socket,standard_error,wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg,
                        pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},
                        {logger_sasl_compatible,false},
                        {shell_docs_ansi,auto}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.14"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_internal,
                        erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
                        erl_tar,error_logger_file_h,error_logger_tty_h,
                        escript,ets,file_sorter,filelib,filename,gb_trees,
                        gb_sets,gen,gen_event,gen_fsm,gen_server,gen_statem,
                        io,io_lib,io_lib_format,io_lib_fread,io_lib_pretty,
                        lists,log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,shell_docs,
                        slave,sofs,string,supervisor,supervisor_bridge,sys,
                        timer,unicode,unicode_util,uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.6.6"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_call_types,beam_clean,
                        beam_dict,beam_digraph,beam_disasm,beam_flatten,
                        beam_jump,beam_kernel_to_ssa,beam_listing,
                        beam_opcodes,beam_peep,beam_ssa,beam_ssa_bool,
                        beam_ssa_bsm,beam_ssa_codegen,beam_ssa_dead,
                        beam_ssa_funs,beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
                        beam_ssa_pre_codegen,beam_ssa_recv,beam_ssa_share,
                        beam_ssa_type,beam_trim,beam_types,beam_utils,
                        beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
                        cerl_sets,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_alias,sys_core_bsm,sys_core_fold,
                        sys_core_fold_lists,sys_core_inline,sys_core_prepare,
                        sys_pre_attributes,v3_core,v3_kernel,v3_kernel_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.11.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent.Server','Elixir.Agent',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar.ISO',
                        'Elixir.Calendar.TimeZoneDatabase',
                        'Elixir.Calendar.UTCOnlyTimeZoneDatabase',
                        'Elixir.Calendar','Elixir.CaseClauseError',
                        'Elixir.Code.Formatter','Elixir.Code.Identifier',
                        'Elixir.Code.LoadError','Elixir.Code.Typespec',
                        'Elixir.Code','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.Collectable',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Config.Provider','Elixir.Config.Reader',
                        'Elixir.Config','Elixir.Date.Range','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enum',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.Enumerable',
                        'Elixir.ErlangError','Elixir.Exception',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.RenameError',
                        'Elixir.File.Stat','Elixir.File.Stream','Elixir.File',
                        'Elixir.Float','Elixir.Function',
                        'Elixir.FunctionClauseError','Elixir.GenEvent.Stream',
                        'Elixir.GenEvent','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence',
                        'Elixir.IO.ANSI','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.IO',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date.Range','Elixir.Inspect.Date',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
                        'Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.Version.Requirement',
                        'Elixir.Inspect.Version','Elixir.Inspect',
                        'Elixir.Integer','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.Kernel',
                        'Elixir.KeyError','Elixir.Keyword',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.List.Chars',
                        'Elixir.List','Elixir.Macro.Env','Elixir.Macro',
                        'Elixir.Map','Elixir.MapSet','Elixir.MatchError',
                        'Elixir.Module.LocalsTracker',
                        'Elixir.Module.ParallelChecker',
                        'Elixir.Module.Types.Error',
                        'Elixir.Module.Types.Expr',
                        'Elixir.Module.Types.Helpers',
                        'Elixir.Module.Types.Of',
                        'Elixir.Module.Types.Pattern',
                        'Elixir.Module.Types.Unify','Elixir.Module.Types',
                        'Elixir.Module','Elixir.NaiveDateTime','Elixir.Node',
                        'Elixir.OptionParser.ParseError',
                        'Elixir.OptionParser','Elixir.Path.Wildcard',
                        'Elixir.Path','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol.UndefinedError','Elixir.Protocol',
                        'Elixir.Range','Elixir.Record.Extractor',
                        'Elixir.Record','Elixir.Regex.CompileError',
                        'Elixir.Regex','Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.Registry',
                        'Elixir.RuntimeError','Elixir.Set',
                        'Elixir.Stream.Reducers','Elixir.Stream',
                        'Elixir.String.Break','Elixir.String.Casing',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Chars.Version','Elixir.String.Chars',
                        'Elixir.String.Tokenizer','Elixir.String.Unicode',
                        'Elixir.String','Elixir.StringIO',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.Supervisor','Elixir.SyntaxError',
                        'Elixir.System','Elixir.SystemLimitError',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.Task','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.Version','Elixir.WithClauseError',elixir,
                        elixir_aliases,elixir_bitstring,elixir_bootstrap,
                        elixir_clauses,elixir_code_server,elixir_compiler,
                        elixir_config,elixir_def,elixir_dispatch,elixir_env,
                        elixir_erl,elixir_erl_clauses,elixir_erl_compiler,
                        elixir_erl_for,elixir_erl_pass,elixir_erl_try,
                        elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,
                        elixir_import,elixir_interpolation,elixir_lexical,
                        elixir_locals,elixir_map,elixir_module,
                        elixir_overridable,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_sup,elixir_tokenizer,
                        elixir_utils]},
                   {registered,[elixir_sup,elixir_config,elixir_code_server]},
                   {applications,[kernel,stdlib,compiler]},
                   {included_applications,[]},
                   {env,
                       [{check_endianness,true},
                        {ansi_enabled,false},
                        {time_zone_database,
                            'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"4.0.1"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,eex,
                  [{description,"eex"},
                   {vsn,"1.11.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.EEx','Elixir.EEx.Compiler',
                        'Elixir.EEx.Engine','Elixir.EEx.SmartEngine',
                        'Elixir.EEx.SyntaxError','Elixir.EEx.Tokenizer']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.14"},
                   {vsn,"5.0.14"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,certifi,
                  [{description,
                       "CA bundle adapted from Mozilla by https://certifi.io"},
                   {vsn,"2.6.1"},
                   {id,[]},
                   {modules,[certifi,certifi_pt]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"4.8.3"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,unicode_util_compat,
                  [{description,
                       "unicode_util compatibility library for Erlang < 20"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,[string_compat,unicode_util_compat]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,idna,
                  [{description,"A pure Erlang IDNA implementation"},
                   {vsn,"6.1.1"},
                   {id,[]},
                   {modules,
                       [idna,idna_bidi,idna_context,idna_data,idna_mapping,
                        idna_table,idna_ucs,punycode]},
                   {registered,[]},
                   {applications,[kernel,stdlib,unicode_util_compat]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,metrics,
                  [{description,
                       "A generic interface to different metrics systems in Erlang."},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       [metrics,metrics_dummy,metrics_exometer,
                        metrics_folsom]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mimerl,
                  [{description,"Library to handle mimetypes"},
                   {vsn,"1.2.0"},
                   {id,[]},
                   {modules,[mimerl]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"2.4"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,erl_tidy,igor,
                        merl,merl_transform,prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,parse_trans,
                  [{description,"Parse transform library"},
                   {vsn,"3.3.1"},
                   {id,[]},
                   {modules,
                       [ct_expand,exprecs,parse_trans,parse_trans_codegen,
                        parse_trans_mod,parse_trans_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib,syntax_tools]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.9.2"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        pubkey_ocsp,'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,asn1,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"10.2.4"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_connection_1_3,tls_handshake,
                        tls_handshake_1_3,tls_record,tls_record_1_3,
                        tls_socket,tls_v1,tls_connection_sup,
                        tls_gen_connection,tls_sender,tls_server_sup,
                        tls_server_session_ticket_sup,
                        tls_server_session_ticket,tls_sup,ssl_dh_groups,
                        dtls_connection,dtls_handshake,dtls_record,
                        dtls_socket,dtls_v1,dtls_connection_sup,
                        dtls_gen_connection,dtls_packet_demux,
                        dtls_listener_sup,dtls_sup,dtls_server_sup,
                        dtls_server_session_cache_sup,ssl,
                        ssl_session_cache_api,tls_dtls_connection,ssl_config,
                        ssl_gen_statem,ssl_handshake,ssl_record,ssl_cipher,
                        ssl_cipher_format,ssl_srp_primes,ssl_alert,
                        ssl_listen_tracker_sup,tls_bloom_filter,
                        tls_client_ticket_store,inet_tls_dist,inet6_tls_dist,
                        ssl_dist_sup,ssl_dist_connection_sup,
                        ssl_dist_admin_sup,tls_dist_sup,tls_dist_server_sup,
                        ssl_session,ssl_session_cache,
                        ssl_server_session_cache,ssl_server_session_cache_db,
                        ssl_server_session_cache_sup,
                        ssl_upgrade_server_session_cache_sup,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_logger,ssl_app,ssl_sup,ssl_admin_sup,
                        ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,stdlib,crypto,public_key]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ssl_verify_fun,
                  [{description,"SSL verification functions for Erlang\n"},
                   {vsn,"1.1.6"},
                   {id,[]},
                   {modules,
                       [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
                        ssl_verify_fun_encodings,ssl_verify_hostname,
                        ssl_verify_pk,ssl_verify_string,ssl_verify_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hackney,
                  [{description,"simple HTTP client"},
                   {vsn,"1.17.4"},
                   {id,[]},
                   {modules,
                       [hackney,hackney_app,hackney_bstr,hackney_connect,
                        hackney_connection,hackney_connections,hackney_cookie,
                        hackney_date,hackney_headers,hackney_headers_new,
                        hackney_http,hackney_http_connect,hackney_local_tcp,
                        hackney_manager,hackney_metrics,hackney_multipart,
                        hackney_pool,hackney_pool_handler,hackney_request,
                        hackney_response,hackney_socks5,hackney_ssl,
                        hackney_ssl_certificate,hackney_stream,hackney_sup,
                        hackney_tcp,hackney_trace,hackney_url,hackney_util]},
                   {registered,[hackney_pool]},
                   {applications,
                       [kernel,stdlib,asn1,certifi,crypto,idna,metrics,mimerl,
                        parse_trans,public_key,ssl,ssl_verify_fun,
                        unicode_util_compat]},
                   {included_applications,[]},
                   {env,
                       [{timeout,150000},
                        {max_connections,50},
                        {restart,permanent},
                        {shutdown,10000},
                        {maxr,10},
                        {maxt,1}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hackney_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.11.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.Counter',
                        'Elixir.Logger.Filter','Elixir.Logger.Formatter',
                        'Elixir.Logger.Handler','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Supervisor','Elixir.Logger.Watcher']},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,
                       [{utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {discard_threshold_periodic_check,30000},
                        {discard_threshold_for_error_logger,500},
                        {compile_time_purge_matching,[]},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {console,[]},
                        {start_options,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,mime,
                  [{description,"A MIME type module for Elixir"},
                   {vsn,"1.6.0"},
                   {id,[]},
                   {modules,['Elixir.MIME','Elixir.MIME.Application']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,[{types,#{}}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.MIME.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug_crypto,
                  [{description,"Crypto-related functionality for the web"},
                   {vsn,"1.2.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Crypto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry,
                  [{description,
                       "Dynamic dispatching library for metrics and instrumentations"},
                   {vsn,"0.4.3"},
                   {id,[]},
                   {modules,
                       [telemetry,telemetry_app,telemetry_handler_table,
                        telemetry_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,
                       "A specification and conveniences for composable modules between web applications"},
                   {vsn,"1.11.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Plug.Conn',
                        'Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Cowboy2',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Application',
                        'Elixir.Plug.BadRequestError','Elixir.Plug.BasicAuth',
                        'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.CookieOverflowError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderError',
                        'Elixir.Plug.Conn.InvalidQueryError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
                        'Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.MalformedURIError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Telemetry','Elixir.Plug.Test',
                        'Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
                        'Elixir.Plug.UploadError',plug_multipart]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,eex,logger,mime,plug_crypto,
                        telemetry]},
                   {included_applications,[]},
                   {env,[{validate_header_keys_during_test,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,bamboo,
                  [{description,
                       "Straightforward, powerful, and adapter based Elixir email library. Works with Mandrill, Mailgun, SendGrid, SparkPost, Postmark, in-memory, and test."},
                   {vsn,"2.2.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Bamboo','Elixir.Bamboo.Adapter',
                        'Elixir.Bamboo.AdapterHelper',
                        'Elixir.Bamboo.ApiError','Elixir.Bamboo.Attachment',
                        'Elixir.Bamboo.DeliverLaterStrategy',
                        'Elixir.Bamboo.Email',
                        'Elixir.Bamboo.EmptyFromAddressError',
                        'Elixir.Bamboo.Formatter',
                        'Elixir.Bamboo.Formatter.BitString',
                        'Elixir.Bamboo.Formatter.List',
                        'Elixir.Bamboo.Formatter.Map',
                        'Elixir.Bamboo.Formatter.Tuple',
                        'Elixir.Bamboo.ImmediateDeliveryStrategy',
                        'Elixir.Bamboo.Interceptor',
                        'Elixir.Bamboo.LocalAdapter','Elixir.Bamboo.Mailer',
                        'Elixir.Bamboo.MailgunAdapter',
                        'Elixir.Bamboo.MailgunHelper',
                        'Elixir.Bamboo.MandrillAdapter',
                        'Elixir.Bamboo.MandrillHelper',
                        'Elixir.Bamboo.NilRecipientsError',
                        'Elixir.Bamboo.SendGridAdapter',
                        'Elixir.Bamboo.SendGridHelper',
                        'Elixir.Bamboo.SentEmail',
                        'Elixir.Bamboo.SentEmail.DeliveriesError',
                        'Elixir.Bamboo.SentEmail.NoDeliveriesError',
                        'Elixir.Bamboo.SentEmailApiPlug',
                        'Elixir.Bamboo.SentEmailViewerPlug',
                        'Elixir.Bamboo.SentEmailViewerPlug.Helper',
                        'Elixir.Bamboo.TaskSupervisorStrategy',
                        'Elixir.Bamboo.Template','Elixir.Bamboo.Test',
                        'Elixir.Bamboo.TestAdapter','Elixir.Bamboo.View',
                        'Elixir.Bamboo.View.UndefinedTemplateError',
                        'Elixir.Mix.Tasks.Bamboo.StartSentEmailViewer']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,eex,hackney,logger,mime,plug]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Bamboo',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ex_aws,
                  [{description,"Generic AWS client"},
                   {vsn,"2.2.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.ExAws','Elixir.ExAws.Auth',
                        'Elixir.ExAws.Auth.Credentials',
                        'Elixir.ExAws.Auth.Signatures',
                        'Elixir.ExAws.Auth.Utils','Elixir.ExAws.Behaviour',
                        'Elixir.ExAws.Config','Elixir.ExAws.Config.AuthCache',
                        'Elixir.ExAws.Config.AuthCache.AuthConfigAdapter',
                        'Elixir.ExAws.Config.Defaults',
                        'Elixir.ExAws.CredentialsIni.File',
                        'Elixir.ExAws.CredentialsIni.Provider',
                        'Elixir.ExAws.Error','Elixir.ExAws.InstanceMeta',
                        'Elixir.ExAws.JSON.Codec','Elixir.ExAws.JSON.JSX',
                        'Elixir.ExAws.Operation',
                        'Elixir.ExAws.Operation.ExAws.Operation.JSON',
                        'Elixir.ExAws.Operation.ExAws.Operation.Query',
                        'Elixir.ExAws.Operation.ExAws.Operation.RestQuery',
                        'Elixir.ExAws.Operation.ExAws.Operation.S3',
                        'Elixir.ExAws.Operation.JSON',
                        'Elixir.ExAws.Operation.Query',
                        'Elixir.ExAws.Operation.RestQuery',
                        'Elixir.ExAws.Operation.S3','Elixir.ExAws.Request',
                        'Elixir.ExAws.Request.Hackney',
                        'Elixir.ExAws.Request.HttpClient',
                        'Elixir.ExAws.Request.Url','Elixir.ExAws.Utils',
                        'Elixir.Mix.Tasks.Aws.Kinesis.Tail']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,crypto,logger,telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.ExAws',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ex_aws_ses,
                  [{description,"ex_aws_ses"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,['Elixir.ExAws.SES','Elixir.ExAws.SES.Parsers']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,ex_aws,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jason,
                  [{description,
                       "A blazing fast JSON parser and generator in pure Elixir.\n"},
                   {vsn,"1.2.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Jason','Elixir.Jason.Codegen',
                        'Elixir.Jason.DecodeError','Elixir.Jason.Decoder',
                        'Elixir.Jason.Decoder.Unescape','Elixir.Jason.Encode',
                        'Elixir.Jason.EncodeError','Elixir.Jason.Encoder',
                        'Elixir.Jason.Encoder.Any',
                        'Elixir.Jason.Encoder.Atom',
                        'Elixir.Jason.Encoder.BitString',
                        'Elixir.Jason.Encoder.Date',
                        'Elixir.Jason.Encoder.DateTime',
                        'Elixir.Jason.Encoder.Decimal',
                        'Elixir.Jason.Encoder.Float',
                        'Elixir.Jason.Encoder.Integer',
                        'Elixir.Jason.Encoder.Jason.Fragment',
                        'Elixir.Jason.Encoder.List',
                        'Elixir.Jason.Encoder.Map',
                        'Elixir.Jason.Encoder.NaiveDateTime',
                        'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
                        'Elixir.Jason.Fragment','Elixir.Jason.Helpers']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mail,
                  [{description,"Easily build a composable mail message"},
                   {vsn,"0.2.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mail','Elixir.Mail.Encoder',
                        'Elixir.Mail.Encoders.Base64',
                        'Elixir.Mail.Encoders.Binary',
                        'Elixir.Mail.Encoders.EightBit',
                        'Elixir.Mail.Encoders.QuotedPrintable',
                        'Elixir.Mail.Encoders.SevenBit','Elixir.Mail.MIME',
                        'Elixir.Mail.Message','Elixir.Mail.Parsers.RFC2822',
                        'Elixir.Mail.Proplist',
                        'Elixir.Mail.Renderers.RFC2822',
                        'Elixir.Mail.TestAssertions']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,crypto,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,bamboo_ses,
                  [{description,"AWS SES adapter for Bamboo"},
                   {vsn,"0.2.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Bamboo.SesAdapter',
                        'Elixir.Bamboo.SesAdapter.RFC2822Renderer']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,bamboo,ex_aws_ses,jason,logger,
                        mail]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,comeonin,
                  [{description,
                       "A specification for password hashing libraries"},
                   {vsn,"5.3.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Comeonin','Elixir.Comeonin.Argon2',
                        'Elixir.Comeonin.Bcrypt',
                        'Elixir.Comeonin.BehaviourTestHelper',
                        'Elixir.Comeonin.PasswordHash',
                        'Elixir.Comeonin.Pbkdf2']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,bcrypt_elixir,
                  [{description,
                       "Bcrypt password hashing algorithm for Elixir\n"},
                   {vsn,"2.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Bcrypt','Elixir.Bcrypt.Base',
                        'Elixir.Bcrypt.Stats']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,comeonin,crypto,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,bodyguard,
                  [{description,
                       "Bodyguard is a simple, flexibile authorization library with a focus\non Phoenix 1.3+ apps.\n"},
                   {vsn,"2.4.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Bodyguard','Elixir.Bodyguard.Action',
                        'Elixir.Bodyguard.NotAuthorizedError',
                        'Elixir.Bodyguard.Plug',
                        'Elixir.Bodyguard.Plug.Authorize',
                        'Elixir.Bodyguard.Plug.BuildAction',
                        'Elixir.Bodyguard.Policy','Elixir.Bodyguard.Schema',
                        'Elixir.Bodyguard.Utilities',
                        'Elixir.Plug.Exception.Bodyguard.NotAuthorizedError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,plug]},
                   {included_applications,[]},
                   {env,[{default_error,unauthorized}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,decimal,
                  [{description,"Arbitrary precision decimal arithmetic."},
                   {vsn,"2.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Decimal','Elixir.Decimal.Context',
                        'Elixir.Decimal.Error','Elixir.Decimal.Macros',
                        'Elixir.Inspect.Decimal',
                        'Elixir.String.Chars.Decimal']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ecto,
                  [{description,
                       "A toolkit for data mapping and language integrated query for Elixir"},
                   {vsn,"3.6.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ecto','Elixir.Ecto.Adapter',
                        'Elixir.Ecto.Adapter.Queryable',
                        'Elixir.Ecto.Adapter.Schema',
                        'Elixir.Ecto.Adapter.Storage',
                        'Elixir.Ecto.Adapter.Transaction',
                        'Elixir.Ecto.Application','Elixir.Ecto.Association',
                        'Elixir.Ecto.Association.BelongsTo',
                        'Elixir.Ecto.Association.Has',
                        'Elixir.Ecto.Association.HasThrough',
                        'Elixir.Ecto.Association.ManyToMany',
                        'Elixir.Ecto.Association.NotLoaded',
                        'Elixir.Ecto.CastError','Elixir.Ecto.ChangeError',
                        'Elixir.Ecto.Changeset',
                        'Elixir.Ecto.Changeset.Relation',
                        'Elixir.Ecto.ConstraintError','Elixir.Ecto.Embedded',
                        'Elixir.Ecto.Enum',
                        'Elixir.Ecto.InvalidChangesetError',
                        'Elixir.Ecto.InvalidURLError',
                        'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
                        'Elixir.Ecto.MultiplePrimaryKeyError',
                        'Elixir.Ecto.MultipleResultsError',
                        'Elixir.Ecto.NoPrimaryKeyFieldError',
                        'Elixir.Ecto.NoPrimaryKeyValueError',
                        'Elixir.Ecto.NoResultsError',
                        'Elixir.Ecto.ParameterizedType','Elixir.Ecto.Query',
                        'Elixir.Ecto.Query.API',
                        'Elixir.Ecto.Query.BooleanExpr',
                        'Elixir.Ecto.Query.Builder',
                        'Elixir.Ecto.Query.Builder.CTE',
                        'Elixir.Ecto.Query.Builder.Combination',
                        'Elixir.Ecto.Query.Builder.Distinct',
                        'Elixir.Ecto.Query.Builder.Dynamic',
                        'Elixir.Ecto.Query.Builder.Filter',
                        'Elixir.Ecto.Query.Builder.From',
                        'Elixir.Ecto.Query.Builder.GroupBy',
                        'Elixir.Ecto.Query.Builder.Join',
                        'Elixir.Ecto.Query.Builder.LimitOffset',
                        'Elixir.Ecto.Query.Builder.Lock',
                        'Elixir.Ecto.Query.Builder.OrderBy',
                        'Elixir.Ecto.Query.Builder.Preload',
                        'Elixir.Ecto.Query.Builder.Select',
                        'Elixir.Ecto.Query.Builder.Update',
                        'Elixir.Ecto.Query.Builder.Windows',
                        'Elixir.Ecto.Query.CastError',
                        'Elixir.Ecto.Query.CompileError',
                        'Elixir.Ecto.Query.DynamicExpr',
                        'Elixir.Ecto.Query.FromExpr',
                        'Elixir.Ecto.Query.JoinExpr',
                        'Elixir.Ecto.Query.Planner',
                        'Elixir.Ecto.Query.QueryExpr',
                        'Elixir.Ecto.Query.SelectExpr',
                        'Elixir.Ecto.Query.Tagged',
                        'Elixir.Ecto.Query.WindowAPI',
                        'Elixir.Ecto.Query.WithExpr','Elixir.Ecto.QueryError',
                        'Elixir.Ecto.Queryable','Elixir.Ecto.Queryable.Atom',
                        'Elixir.Ecto.Queryable.BitString',
                        'Elixir.Ecto.Queryable.Ecto.Query',
                        'Elixir.Ecto.Queryable.Ecto.SubQuery',
                        'Elixir.Ecto.Queryable.Tuple','Elixir.Ecto.Repo',
                        'Elixir.Ecto.Repo.Assoc','Elixir.Ecto.Repo.Preloader',
                        'Elixir.Ecto.Repo.Queryable',
                        'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
                        'Elixir.Ecto.Repo.Supervisor',
                        'Elixir.Ecto.Repo.Transaction','Elixir.Ecto.Schema',
                        'Elixir.Ecto.Schema.Loader',
                        'Elixir.Ecto.Schema.Metadata',
                        'Elixir.Ecto.StaleEntryError','Elixir.Ecto.SubQuery',
                        'Elixir.Ecto.SubQueryError','Elixir.Ecto.Type',
                        'Elixir.Ecto.UUID',
                        'Elixir.Inspect.Ecto.Association.NotLoaded',
                        'Elixir.Inspect.Ecto.Changeset',
                        'Elixir.Inspect.Ecto.Query',
                        'Elixir.Inspect.Ecto.Query.DynamicExpr',
                        'Elixir.Inspect.Ecto.Schema.Metadata',
                        'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
                        'Elixir.Jason.Encoder.Ecto.Schema.Metadata',
                        'Elixir.Mix.Ecto','Elixir.Mix.Tasks.Ecto',
                        'Elixir.Mix.Tasks.Ecto.Create',
                        'Elixir.Mix.Tasks.Ecto.Drop',
                        'Elixir.Mix.Tasks.Ecto.Gen.Repo']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,crypto,decimal,eex,logger,
                        telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,slugger,
                  [{description,
                       "The library Slugger can generate slugs from given strings that can be used in URLs or file names.\n"},
                   {vsn,"0.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Slugger','Elixir.Slugify',
                        'Elixir.Slugify.Any']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,
                       [{replacement_file,<<"lib/replacements.exs">>},
                        {separator_char,45}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ecto_autoslug_field,
                  [{description,"Autoslug field for Ecto."},
                   {vsn,"2.0.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.EctoAutoslugField',
                        'Elixir.EctoAutoslugField.Slug',
                        'Elixir.EctoAutoslugField.SlugBase',
                        'Elixir.EctoAutoslugField.SlugGenerator',
                        'Elixir.EctoAutoslugField.Type']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,ecto,logger,slugger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,connection,
                  [{description,
                       "Connection behaviour for connection processes\n"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,['Elixir.Connection']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,db_connection,
                  [{description,
                       "Database connection behaviour for database transactions and connection pooling\n"},
                   {vsn,"2.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection','Elixir.DBConnection.App',
                        'Elixir.DBConnection.Backoff',
                        'Elixir.DBConnection.Connection',
                        'Elixir.DBConnection.ConnectionError',
                        'Elixir.DBConnection.ConnectionPool',
                        'Elixir.DBConnection.ConnectionPool.Pool',
                        'Elixir.DBConnection.EncodeError',
                        'Elixir.DBConnection.Holder',
                        'Elixir.DBConnection.LogEntry',
                        'Elixir.DBConnection.Ownership',
                        'Elixir.DBConnection.Ownership.Manager',
                        'Elixir.DBConnection.Ownership.Proxy',
                        'Elixir.DBConnection.OwnershipError',
                        'Elixir.DBConnection.PrepareStream',
                        'Elixir.DBConnection.Query',
                        'Elixir.DBConnection.Stream',
                        'Elixir.DBConnection.Task',
                        'Elixir.DBConnection.TransactionError',
                        'Elixir.DBConnection.Watcher',
                        'Elixir.Enumerable.DBConnection.PrepareStream',
                        'Elixir.Enumerable.DBConnection.Stream']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,connection,logger,telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.DBConnection.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto_sql,
                  [{description,
                       "SQL-based adapters for Ecto and database migrations"},
                   {vsn,"3.6.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapter.Migration',
                        'Elixir.Ecto.Adapter.Structure',
                        'Elixir.Ecto.Adapters.MySQL',
                        'Elixir.Ecto.Adapters.MyXQL',
                        'Elixir.Ecto.Adapters.Postgres',
                        'Elixir.Ecto.Adapters.Postgres.Connection',
                        'Elixir.Ecto.Adapters.SQL',
                        'Elixir.Ecto.Adapters.SQL.Application',
                        'Elixir.Ecto.Adapters.SQL.Connection',
                        'Elixir.Ecto.Adapters.SQL.Sandbox',
                        'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
                        'Elixir.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapters.Tds','Elixir.Ecto.Migration',
                        'Elixir.Ecto.Migration.Command',
                        'Elixir.Ecto.Migration.Constraint',
                        'Elixir.Ecto.Migration.Index',
                        'Elixir.Ecto.Migration.Reference',
                        'Elixir.Ecto.Migration.Runner',
                        'Elixir.Ecto.Migration.SchemaMigration',
                        'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
                        'Elixir.Enumerable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Mix.EctoSQL','Elixir.Mix.Tasks.Ecto.Dump',
                        'Elixir.Mix.Tasks.Ecto.Gen.Migration',
                        'Elixir.Mix.Tasks.Ecto.Load',
                        'Elixir.Mix.Tasks.Ecto.Migrate',
                        'Elixir.Mix.Tasks.Ecto.Migrations',
                        'Elixir.Mix.Tasks.Ecto.Rollback']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,db_connection,ecto,eex,logger,
                        telemetry]},
                   {included_applications,[]},
                   {env,[{postgres_map_type,<<"jsonb">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Adapters.SQL.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto_enum,
                  [{description,"Ecto extension to support enums in models"},
                   {vsn,"1.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.EctoEnum','Elixir.EctoEnum.Postgres',
                        'Elixir.EctoEnum.Postgres.Use',
                        'Elixir.EctoEnum.Typespec',
                        'Elixir.EctoEnum.Typespec.TestModule',
                        'Elixir.EctoEnum.Typespec.TestModule.PGStatusEnum',
                        'Elixir.EctoEnum.Typespec.TestModule.StatusEnum',
                        'Elixir.EctoEnum.Use']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,ecto,ecto_sql,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,postgrex,
                  [{description,"PostgreSQL driver for Elixir"},
                   {vsn,"0.15.9"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Postgrex.Stream',
                        'Elixir.DBConnection.Query.Postgrex.Copy',
                        'Elixir.DBConnection.Query.Postgrex.Parameters',
                        'Elixir.DBConnection.Query.Postgrex.Query',
                        'Elixir.Enumerable.Postgrex.Stream','Elixir.Postgrex',
                        'Elixir.Postgrex.App',
                        'Elixir.Postgrex.BinaryExtension',
                        'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
                        'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
                        'Elixir.Postgrex.Cursor',
                        'Elixir.Postgrex.DefaultTypes',
                        'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
                        'Elixir.Postgrex.Extension',
                        'Elixir.Postgrex.Extensions.Array',
                        'Elixir.Postgrex.Extensions.BitString',
                        'Elixir.Postgrex.Extensions.Bool',
                        'Elixir.Postgrex.Extensions.Box',
                        'Elixir.Postgrex.Extensions.Circle',
                        'Elixir.Postgrex.Extensions.Date',
                        'Elixir.Postgrex.Extensions.Float4',
                        'Elixir.Postgrex.Extensions.Float8',
                        'Elixir.Postgrex.Extensions.HStore',
                        'Elixir.Postgrex.Extensions.INET',
                        'Elixir.Postgrex.Extensions.Int2',
                        'Elixir.Postgrex.Extensions.Int4',
                        'Elixir.Postgrex.Extensions.Int8',
                        'Elixir.Postgrex.Extensions.Interval',
                        'Elixir.Postgrex.Extensions.JSON',
                        'Elixir.Postgrex.Extensions.JSONB',
                        'Elixir.Postgrex.Extensions.Line',
                        'Elixir.Postgrex.Extensions.LineSegment',
                        'Elixir.Postgrex.Extensions.MACADDR',
                        'Elixir.Postgrex.Extensions.Name',
                        'Elixir.Postgrex.Extensions.Numeric',
                        'Elixir.Postgrex.Extensions.OID',
                        'Elixir.Postgrex.Extensions.Path',
                        'Elixir.Postgrex.Extensions.Point',
                        'Elixir.Postgrex.Extensions.Polygon',
                        'Elixir.Postgrex.Extensions.Range',
                        'Elixir.Postgrex.Extensions.Raw',
                        'Elixir.Postgrex.Extensions.Record',
                        'Elixir.Postgrex.Extensions.TID',
                        'Elixir.Postgrex.Extensions.TSVector',
                        'Elixir.Postgrex.Extensions.Time',
                        'Elixir.Postgrex.Extensions.TimeTZ',
                        'Elixir.Postgrex.Extensions.Timestamp',
                        'Elixir.Postgrex.Extensions.TimestampTZ',
                        'Elixir.Postgrex.Extensions.UUID',
                        'Elixir.Postgrex.Extensions.VoidBinary',
                        'Elixir.Postgrex.Extensions.VoidText',
                        'Elixir.Postgrex.INET','Elixir.Postgrex.Interval',
                        'Elixir.Postgrex.Lexeme','Elixir.Postgrex.Line',
                        'Elixir.Postgrex.LineSegment',
                        'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
                        'Elixir.Postgrex.Notifications',
                        'Elixir.Postgrex.Parameters','Elixir.Postgrex.Path',
                        'Elixir.Postgrex.Point','Elixir.Postgrex.Polygon',
                        'Elixir.Postgrex.Protocol','Elixir.Postgrex.Query',
                        'Elixir.Postgrex.QueryError','Elixir.Postgrex.Range',
                        'Elixir.Postgrex.Result','Elixir.Postgrex.SCRAM',
                        'Elixir.Postgrex.Stream',
                        'Elixir.Postgrex.SuperExtension',
                        'Elixir.Postgrex.TypeInfo',
                        'Elixir.Postgrex.TypeModule',
                        'Elixir.Postgrex.TypeServer',
                        'Elixir.Postgrex.TypeSupervisor',
                        'Elixir.Postgrex.Types','Elixir.Postgrex.Utils',
                        'Elixir.String.Chars.Postgrex.Copy',
                        'Elixir.String.Chars.Postgrex.Query']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,connection,crypto,db_connection,
                        decimal,logger]},
                   {included_applications,[]},
                   {env,
                       [{type_server_reap_after,180000},
                        {json_library,'Elixir.Jason'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Postgrex.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto_network,
                  [{description,
                       "Ecto types to support MACADDR and Network extensions provided by Postgrex.\n"},
                   {vsn,"1.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.EctoNetwork','Elixir.EctoNetwork.CIDR',
                        'Elixir.EctoNetwork.INET',
                        'Elixir.EctoNetwork.MACADDR',
                        'Elixir.Phoenix.HTML.Safe.Postgrex.INET',
                        'Elixir.Phoenix.HTML.Safe.Postgrex.MACADDR',
                        'Elixir.String.Chars.Postgrex.INET',
                        'Elixir.String.Chars.Postgrex.MACADDR']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,ecto_sql,logger,postgrex]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ecto_soft_delete,
                  [{description,"Soft deletion with Ecto.\n"},
                   {vsn,"2.0.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ecto.SoftDelete.Migration',
                        'Elixir.Ecto.SoftDelete.Query',
                        'Elixir.Ecto.SoftDelete.Repo',
                        'Elixir.Ecto.SoftDelete.Schema']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,ecto_sql,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,castore,
                  [{description,"Up-to-date CA certificate store."},
                   {vsn,"0.1.10"},
                   {id,[]},
                   {modules,['Elixir.CAStore']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mint,
                  [{description,"Small and composable HTTP client."},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mint.Core.Conn','Elixir.Mint.Core.Transport',
                        'Elixir.Mint.Core.Transport.SSL',
                        'Elixir.Mint.Core.Transport.TCP',
                        'Elixir.Mint.Core.Util','Elixir.Mint.HTTP',
                        'Elixir.Mint.HTTP1','Elixir.Mint.HTTP1.Parse',
                        'Elixir.Mint.HTTP1.Request',
                        'Elixir.Mint.HTTP1.Response','Elixir.Mint.HTTP2',
                        'Elixir.Mint.HTTP2.Frame','Elixir.Mint.HTTP2.HPACK',
                        'Elixir.Mint.HTTP2.HPACK.Huffman',
                        'Elixir.Mint.HTTP2.HPACK.Table',
                        'Elixir.Mint.HTTP2.HPACK.Types',
                        'Elixir.Mint.HTTPError','Elixir.Mint.Negotiate',
                        'Elixir.Mint.TransportError',
                        'Elixir.Mint.TunnelProxy','Elixir.Mint.Types',
                        'Elixir.Mint.UnsafeProxy',mint_shims]},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,emojix,
                  [{description,
                       [83,105,109,112,108,101,32,101,109,111,106,105,32,108,
                        105,98,114,97,114,121,32,102,111,114,32,69,108,105,
                        120,105,114,46,32,128169,10]},
                   {vsn,"0.3.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Emojix','Elixir.Emojix.App',
                        'Elixir.Emojix.DataLoader','Elixir.Emojix.Emoji',
                        'Elixir.Emojix.Repo']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,castore,jason,logger,mint]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Emojix.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ex_aws_s3,
                  [{description,"ex_aws_s3"},
                   {vsn,"2.2.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.ExAws.Operation.ExAws.Operation.S3DeleteAllObjects',
                        'Elixir.ExAws.Operation.ExAws.S3.Download',
                        'Elixir.ExAws.Operation.ExAws.S3.Upload',
                        'Elixir.ExAws.Operation.S3DeleteAllObjects',
                        'Elixir.ExAws.S3','Elixir.ExAws.S3.Download',
                        'Elixir.ExAws.S3.Lazy','Elixir.ExAws.S3.Parsers',
                        'Elixir.ExAws.S3.Upload','Elixir.ExAws.S3.Utils']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,ex_aws,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,inets,
                  [{description,"INETS  CXC 138 49"},
                   {vsn,"7.3.2"},
                   {id,[]},
                   {modules,
                       [inets,inets_sup,inets_app,inets_service,inets_trace,
                        inets_lib,inets_ftp_wrapper,httpc,httpc_handler,
                        httpc_handler_sup,httpc_manager,httpc_profile_sup,
                        httpc_request,httpc_response,httpc_sup,httpc_cookie,
                        http_chunk,http_request,http_response,http_transport,
                        http_util,http_uri,httpd,httpd_acceptor,
                        httpd_acceptor_sup,httpd_cgi,httpd_connection_sup,
                        httpd_conf,httpd_custom,httpd_custom_api,httpd_esi,
                        httpd_example,httpd_file,httpd_instance_sup,httpd_log,
                        httpd_logger,httpd_manager,httpd_misc_sup,
                        httpd_request,httpd_request_handler,httpd_response,
                        httpd_script_env,httpd_socket,httpd_sup,httpd_util,
                        mod_actions,mod_alias,mod_auth,mod_auth_dets,
                        mod_auth_mnesia,mod_auth_plain,mod_auth_server,
                        mod_cgi,mod_dir,mod_disk_log,mod_esi,mod_get,mod_head,
                        mod_log,mod_range,mod_responsecontrol,mod_security,
                        mod_security_server,mod_trace,inets_tftp_wrapper]},
                   {registered,[inets_sup,httpc_manager]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{inets_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cldr_utils,
                  [{description,
                       "Map, Calendar, Digits, Decimal, HTTP, Macro, Math, and String helpers for ex_cldr.\n"},
                   {vsn,"2.16.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Cldr.Calendar.Conversion','Elixir.Cldr.Code',
                        'Elixir.Cldr.Decimal','Elixir.Cldr.Digits',
                        'Elixir.Cldr.Enum','Elixir.Cldr.Helpers',
                        'Elixir.Cldr.Http','Elixir.Cldr.Macros',
                        'Elixir.Cldr.Map','Elixir.Cldr.Math',
                        'Elixir.Cldr.String','Elixir.CldrUtils']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,decimal,inets,logger,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ex_unit,
                  [{description,"ex_unit"},
                   {vsn,"1.11.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.ExUnit','Elixir.ExUnit.AssertionError',
                        'Elixir.ExUnit.Assertions',
                        'Elixir.ExUnit.CLIFormatter',
                        'Elixir.ExUnit.Callbacks','Elixir.ExUnit.CaptureIO',
                        'Elixir.ExUnit.CaptureLog',
                        'Elixir.ExUnit.CaptureServer','Elixir.ExUnit.Case',
                        'Elixir.ExUnit.CaseTemplate','Elixir.ExUnit.Diff',
                        'Elixir.ExUnit.DocTest','Elixir.ExUnit.DocTest.Error',
                        'Elixir.ExUnit.DuplicateDescribeError',
                        'Elixir.ExUnit.DuplicateTestError',
                        'Elixir.ExUnit.EventManager',
                        'Elixir.ExUnit.FailuresManifest',
                        'Elixir.ExUnit.Filters','Elixir.ExUnit.Formatter',
                        'Elixir.ExUnit.MultiError',
                        'Elixir.ExUnit.OnExitHandler','Elixir.ExUnit.Runner',
                        'Elixir.ExUnit.RunnerStats','Elixir.ExUnit.Server',
                        'Elixir.ExUnit.Test','Elixir.ExUnit.TestCase',
                        'Elixir.ExUnit.TestModule',
                        'Elixir.ExUnit.TimeoutError']},
                   {registered,
                       ['Elixir.ExUnit.CaptureServer',
                        'Elixir.ExUnit.OnExitHandler','Elixir.ExUnit.Server',
                        'Elixir.ExUnit.Supervisor']},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,
                       [{assert_receive_timeout,100},
                        {autorun,true},
                        {capture_log,false},
                        {colors,[]},
                        {exclude,[]},
                        {formatters,['Elixir.ExUnit.CLIFormatter']},
                        {include,[]},
                        {max_failures,infinity},
                        {refute_receive_timeout,100},
                        {slowest,0},
                        {stacktrace_depth,20},
                        {timeout,60000},
                        {trace,false},
                        {after_suite,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.ExUnit',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ex_cldr,
                  [{description,
                       "Common Locale Data Repository (CLDR) functions for Elixir to localize and format numbers,\ndates, lists and units with support for over 500 locales for internationalized (i18n) and\nlocalized (L10N) applications.\n"},
                   {vsn,"2.23.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Cldr','Elixir.Cldr.AcceptLanguage',
                        'Elixir.Cldr.AcceptLanguageError',
                        'Elixir.Cldr.AmbiguousTimezoneError',
                        'Elixir.Cldr.Backend','Elixir.Cldr.Backend.Compiler',
                        'Elixir.Cldr.Chars','Elixir.Cldr.Chars.Any',
                        'Elixir.Cldr.Chars.BitString',
                        'Elixir.Cldr.Chars.Cldr.LanguageTag',
                        'Elixir.Cldr.Config','Elixir.Cldr.Config.Dependents',
                        'Elixir.Cldr.DisplayName',
                        'Elixir.Cldr.FormatCompileError',
                        'Elixir.Cldr.FormatError',
                        'Elixir.Cldr.Gettext.Plural','Elixir.Cldr.Install',
                        'Elixir.Cldr.InvalidDateFormatType',
                        'Elixir.Cldr.InvalidDateTimeFormatType',
                        'Elixir.Cldr.InvalidLanguageError',
                        'Elixir.Cldr.InvalidLanguageTag',
                        'Elixir.Cldr.InvalidScriptError',
                        'Elixir.Cldr.InvalidTerritoryError',
                        'Elixir.Cldr.InvalidTimeFormatType',
                        'Elixir.Cldr.InvalidVariantError',
                        'Elixir.Cldr.LanguageTag',
                        'Elixir.Cldr.LanguageTag.Chars',
                        'Elixir.Cldr.LanguageTag.Chars.Atom',
                        'Elixir.Cldr.LanguageTag.Chars.BitString',
                        'Elixir.Cldr.LanguageTag.Chars.Cldr.LanguageTag.T',
                        'Elixir.Cldr.LanguageTag.Chars.Cldr.LanguageTag.U',
                        'Elixir.Cldr.LanguageTag.Chars.List',
                        'Elixir.Cldr.LanguageTag.Chars.Map',
                        'Elixir.Cldr.LanguageTag.Chars.Tuple',
                        'Elixir.Cldr.LanguageTag.ParseError',
                        'Elixir.Cldr.LanguageTag.Parser',
                        'Elixir.Cldr.LanguageTag.Sigil',
                        'Elixir.Cldr.LanguageTag.T',
                        'Elixir.Cldr.LanguageTag.U','Elixir.Cldr.Locale',
                        'Elixir.Cldr.Locale.Backend',
                        'Elixir.Cldr.Locale.Cache',
                        'Elixir.Cldr.NoDefaultBackendError',
                        'Elixir.Cldr.NoMatchingLocale',
                        'Elixir.Cldr.NoParentError',
                        'Elixir.Cldr.Number.PluralRule',
                        'Elixir.Cldr.Number.PluralRule.Compiler',
                        'Elixir.Cldr.Number.PluralRule.Transformer',
                        'Elixir.Cldr.Plug.AcceptLanguage',
                        'Elixir.Cldr.Plug.PutSession',
                        'Elixir.Cldr.Plug.SetLocale',
                        'Elixir.Cldr.Plug.SetSession',
                        'Elixir.Cldr.Rbnf.Config',
                        'Elixir.Cldr.Rbnf.NotAvailable',
                        'Elixir.Cldr.Rfc5646.Core',
                        'Elixir.Cldr.Rfc5646.Grammar',
                        'Elixir.Cldr.Rfc5646.Helpers',
                        'Elixir.Cldr.Rfc5646.Parser',
                        'Elixir.Cldr.Substitution','Elixir.Cldr.Timezone',
                        'Elixir.Cldr.UnknownBackendError',
                        'Elixir.Cldr.UnknownCalendarError',
                        'Elixir.Cldr.UnknownCurrencyError',
                        'Elixir.Cldr.UnknownFormatError',
                        'Elixir.Cldr.UnknownLocaleError',
                        'Elixir.Cldr.UnknownMeasurementSystemError',
                        'Elixir.Cldr.UnknownNumberSystemError',
                        'Elixir.Cldr.UnknownNumberSystemTypeError',
                        'Elixir.Cldr.UnknownOTPAppError',
                        'Elixir.Cldr.UnknownPluralRules',
                        'Elixir.Cldr.UnknownTerritoryError',
                        'Elixir.Cldr.UnknownUnitError','Elixir.Cldr.Validity',
                        'Elixir.Cldr.Validity.Language',
                        'Elixir.Cldr.Validity.Script',
                        'Elixir.Cldr.Validity.Subdivision',
                        'Elixir.Cldr.Validity.T',
                        'Elixir.Cldr.Validity.Territory',
                        'Elixir.Cldr.Validity.U',
                        'Elixir.Cldr.Validity.Variant',
                        'Elixir.Inspect.Cldr.LanguageTag',
                        'Elixir.Jason.Encoder.Cldr.LanguageTag',
                        'Elixir.String.Chars.Cldr.LanguageTag',
                        'Elixir.String.Chars.Cldr.LanguageTag.T',
                        'Elixir.String.Chars.Cldr.LanguageTag.U',
                        plural_rules_lexer,plural_rules_parser]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,cldr_utils,decimal,eex,ex_unit,
                        inets,logger,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ex_cldr_territories,
                  [{description,
                       "Terrritory formatting functions for the Common Locale Data Repository (CLDR)\npackage ex_cldr\n"},
                   {vsn,"2.2.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Cldr.Territory',
                        'Elixir.Cldr.Territory.Backend',
                        'Elixir.Cldr.UnknownChildrenError',
                        'Elixir.Cldr.UnknownFlagError',
                        'Elixir.Cldr.UnknownLanguageTagError',
                        'Elixir.Cldr.UnknownParentError',
                        'Elixir.Cldr.UnknownStyleError',
                        'Elixir.Cldr.UnknownSubdivisionError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,ex_cldr,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,excal,
                  [{description,
                       "NIF bindings to libical providing icalendar rrule expansion.\n"},
                   {vsn,"0.3.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Excal',
                        'Elixir.Excal.Interface.Recurrence.Iterator',
                        'Elixir.Excal.Recurrence.Iterator',
                        'Elixir.Excal.Recurrence.Stream']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,geo,
                  [{description,
                       "Encodes and decodes WKB, WKT, and GeoJSON formats.\n"},
                   {vsn,"3.4.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Geo','Elixir.Geo.GeometryCollection',
                        'Elixir.Geo.JSON','Elixir.Geo.JSON.Decoder',
                        'Elixir.Geo.JSON.Decoder.DecodeError',
                        'Elixir.Geo.JSON.Encoder',
                        'Elixir.Geo.JSON.Encoder.EncodeError',
                        'Elixir.Geo.LineString','Elixir.Geo.LineStringZ',
                        'Elixir.Geo.MultiLineString',
                        'Elixir.Geo.MultiLineStringZ','Elixir.Geo.MultiPoint',
                        'Elixir.Geo.MultiPointZ','Elixir.Geo.MultiPolygon',
                        'Elixir.Geo.MultiPolygonZ','Elixir.Geo.Point',
                        'Elixir.Geo.PointM','Elixir.Geo.PointZ',
                        'Elixir.Geo.PointZM','Elixir.Geo.Polygon',
                        'Elixir.Geo.PolygonZ','Elixir.Geo.Utils',
                        'Elixir.Geo.WKB','Elixir.Geo.WKB.Decoder',
                        'Elixir.Geo.WKB.Encoder','Elixir.Geo.WKT',
                        'Elixir.Geo.WKT.Decoder','Elixir.Geo.WKT.Encoder',
                        'Elixir.Jason.Encoder.Geo.GeometryCollection',
                        'Elixir.Jason.Encoder.Geo.LineString',
                        'Elixir.Jason.Encoder.Geo.LineStringZ',
                        'Elixir.Jason.Encoder.Geo.MultiLineString',
                        'Elixir.Jason.Encoder.Geo.MultiLineStringZ',
                        'Elixir.Jason.Encoder.Geo.MultiPoint',
                        'Elixir.Jason.Encoder.Geo.MultiPointZ',
                        'Elixir.Jason.Encoder.Geo.MultiPolygon',
                        'Elixir.Jason.Encoder.Geo.MultiPolygonZ',
                        'Elixir.Jason.Encoder.Geo.Point',
                        'Elixir.Jason.Encoder.Geo.PointM',
                        'Elixir.Jason.Encoder.Geo.PointZ',
                        'Elixir.Jason.Encoder.Geo.PointZM',
                        'Elixir.Jason.Encoder.Geo.Polygon',
                        'Elixir.Jason.Encoder.Geo.PolygonZ',
                        'Elixir.String.Chars.Geo.GeometryCollection',
                        'Elixir.String.Chars.Geo.LineString',
                        'Elixir.String.Chars.Geo.LineStringZ',
                        'Elixir.String.Chars.Geo.MultiLineString',
                        'Elixir.String.Chars.Geo.MultiLineStringZ',
                        'Elixir.String.Chars.Geo.MultiPoint',
                        'Elixir.String.Chars.Geo.MultiPointZ',
                        'Elixir.String.Chars.Geo.MultiPolygon',
                        'Elixir.String.Chars.Geo.MultiPolygonZ',
                        'Elixir.String.Chars.Geo.Point',
                        'Elixir.String.Chars.Geo.PointM',
                        'Elixir.String.Chars.Geo.PointZ',
                        'Elixir.String.Chars.Geo.PointZM',
                        'Elixir.String.Chars.Geo.Polygon',
                        'Elixir.String.Chars.Geo.PolygonZ']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,geo_postgis,
                  [{description,"geo_postgis"},
                   {vsn,"3.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Geo.PostGIS','Elixir.Geo.PostGIS.Config',
                        'Elixir.Geo.PostGIS.Extension',
                        'Elixir.Geo.PostGIS.Geometry']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,geo,logger,postgrex]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,inflex,
                  [{description,
                       "An Elixir library for handling word inflections.\n"},
                   {vsn,"2.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inflex','Elixir.Inflex.Camelize',
                        'Elixir.Inflex.Ordinalize',
                        'Elixir.Inflex.Parameterize',
                        'Elixir.Inflex.Pluralize','Elixir.Inflex.Underscore']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,rustler,
                  [{description,"rustler"},
                   {vsn,"0.22.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.Compile.Rustler',
                        'Elixir.Mix.Tasks.Rustler.New','Elixir.Rustler',
                        'Elixir.Rustler.Compiler',
                        'Elixir.Rustler.Compiler.Config',
                        'Elixir.Rustler.Compiler.Messages',
                        'Elixir.Rustler.Compiler.Rustup']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,eex,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mjml,
                  [{description,
                       "NIF bindings for the MJML Rust implementation (mrml)"},
                   {vsn,"1.1.1"},
                   {id,[]},
                   {modules,['Elixir.Mjml']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,rustler]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,os_mon,
                  [{description,"CPO  CXC 138 46"},
                   {vsn,"2.6.1"},
                   {id,[]},
                   {modules,
                       [os_mon,os_mon_mib,os_sup,disksup,memsup,cpu_sup,
                        os_mon_sysinfo,nteventlog]},
                   {registered,
                       [os_mon_sup,os_mon_sysinfo,disksup,memsup,cpu_sup,
                        os_sup_server]},
                   {applications,[kernel,stdlib,sasl]},
                   {included_applications,[]},
                   {env,
                       [{start_cpu_sup,true},
                        {start_disksup,true},
                        {start_memsup,true},
                        {start_os_sup,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{os_mon,[]}}]}]}},
     {apply,
         {application,load,
             [{application,new_relic_agent,
                  [{description,"New Relic's Open-Source Elixir Agent"},
                   {vsn,"1.27.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.NewRelic','Elixir.NewRelic.Aggregate',
                        'Elixir.NewRelic.Aggregate.Reporter',
                        'Elixir.NewRelic.Aggregate.Supervisor',
                        'Elixir.NewRelic.AlwaysOnSupervisor',
                        'Elixir.NewRelic.Application',
                        'Elixir.NewRelic.Config',
                        'Elixir.NewRelic.Custom.Event',
                        'Elixir.NewRelic.DistributedTrace',
                        'Elixir.NewRelic.DistributedTrace.BackoffSampler',
                        'Elixir.NewRelic.DistributedTrace.Context',
                        'Elixir.NewRelic.DistributedTrace.NewRelicContext',
                        'Elixir.NewRelic.DistributedTrace.Supervisor',
                        'Elixir.NewRelic.DistributedTrace.W3CTraceContext',
                        'Elixir.NewRelic.DistributedTrace.W3CTraceContext.TraceParent',
                        'Elixir.NewRelic.DistributedTrace.W3CTraceContext.TraceState',
                        'Elixir.NewRelic.DistributedTrace.W3CTraceContext.TraceState.NewRelicState',
                        'Elixir.NewRelic.EnabledSupervisor',
                        'Elixir.NewRelic.EnabledSupervisorManager',
                        'Elixir.NewRelic.Error.Event',
                        'Elixir.NewRelic.Error.LoggerHandler',
                        'Elixir.NewRelic.Error.Reporter',
                        'Elixir.NewRelic.Error.Supervisor',
                        'Elixir.NewRelic.Error.Trace',
                        'Elixir.NewRelic.GracefulShutdown',
                        'Elixir.NewRelic.Harvest.Collector.AgentRun',
                        'Elixir.NewRelic.Harvest.Collector.Connect',
                        'Elixir.NewRelic.Harvest.Collector.CustomEvent.Harvester',
                        'Elixir.NewRelic.Harvest.Collector.ErrorTrace.Harvester',
                        'Elixir.NewRelic.Harvest.Collector.Metric.Harvester',
                        'Elixir.NewRelic.Harvest.Collector.Protocol',
                        'Elixir.NewRelic.Harvest.Collector.SpanEvent.Harvester',
                        'Elixir.NewRelic.Harvest.Collector.Supervisor',
                        'Elixir.NewRelic.Harvest.Collector.TransactionErrorEvent.Harvester',
                        'Elixir.NewRelic.Harvest.Collector.TransactionEvent.Harvester',
                        'Elixir.NewRelic.Harvest.Collector.TransactionTrace.Harvester',
                        'Elixir.NewRelic.Harvest.DataSupervisor',
                        'Elixir.NewRelic.Harvest.HarvestCycle',
                        'Elixir.NewRelic.Harvest.HarvesterStore',
                        'Elixir.NewRelic.Harvest.HarvesterSupervisor',
                        'Elixir.NewRelic.Harvest.Supervisor',
                        'Elixir.NewRelic.Harvest.TelemetrySdk.API',
                        'Elixir.NewRelic.Harvest.TelemetrySdk.Config',
                        'Elixir.NewRelic.Harvest.TelemetrySdk.Logs.Harvester',
                        'Elixir.NewRelic.Harvest.TelemetrySdk.Spans.Harvester',
                        'Elixir.NewRelic.Harvest.TelemetrySdk.Supervisor',
                        'Elixir.NewRelic.Init',
                        'Elixir.NewRelic.Instrumented.Mix.Task',
                        'Elixir.NewRelic.Instrumented.Task',
                        'Elixir.NewRelic.Instrumented.Task.Supervisor',
                        'Elixir.NewRelic.Instrumented.Task.Wrappers',
                        'Elixir.NewRelic.Logger',
                        'Elixir.NewRelic.LogsInContext',
                        'Elixir.NewRelic.LogsInContext.Supervisor',
                        'Elixir.NewRelic.Metric',
                        'Elixir.NewRelic.Metric.MetricData',
                        'Elixir.NewRelic.OtherTransaction',
                        'Elixir.NewRelic.Sampler.Agent',
                        'Elixir.NewRelic.Sampler.Beam',
                        'Elixir.NewRelic.Sampler.Ets',
                        'Elixir.NewRelic.Sampler.Process',
                        'Elixir.NewRelic.Sampler.Reporter',
                        'Elixir.NewRelic.Sampler.Supervisor',
                        'Elixir.NewRelic.Sampler.TopProcess',
                        'Elixir.NewRelic.SignalHandler',
                        'Elixir.NewRelic.Span.Event',
                        'Elixir.NewRelic.Span.Reporter',
                        'Elixir.NewRelic.Telemetry.Ecto',
                        'Elixir.NewRelic.Telemetry.Ecto.Handler',
                        'Elixir.NewRelic.Telemetry.Ecto.Metadata',
                        'Elixir.NewRelic.Telemetry.Ecto.Supervisor',
                        'Elixir.NewRelic.Telemetry.Phoenix',
                        'Elixir.NewRelic.Telemetry.Plug',
                        'Elixir.NewRelic.Telemetry.Redix',
                        'Elixir.NewRelic.Telemetry.Supervisor',
                        'Elixir.NewRelic.Tracer',
                        'Elixir.NewRelic.Tracer.Macro',
                        'Elixir.NewRelic.Tracer.Report',
                        'Elixir.NewRelic.Transaction',
                        'Elixir.NewRelic.Transaction.Complete',
                        'Elixir.NewRelic.Transaction.ErlangTrace',
                        'Elixir.NewRelic.Transaction.ErlangTraceManager',
                        'Elixir.NewRelic.Transaction.ErlangTraceSupervisor',
                        'Elixir.NewRelic.Transaction.Event',
                        'Elixir.NewRelic.Transaction.Reporter',
                        'Elixir.NewRelic.Transaction.Sidecar',
                        'Elixir.NewRelic.Transaction.SidecarStore',
                        'Elixir.NewRelic.Transaction.Supervisor',
                        'Elixir.NewRelic.Transaction.Trace',
                        'Elixir.NewRelic.Transaction.Trace.Segment',
                        'Elixir.NewRelic.Util','Elixir.NewRelic.Util.Apdex',
                        'Elixir.NewRelic.Util.Error',
                        'Elixir.NewRelic.Util.Event',
                        'Elixir.NewRelic.Util.HTTP',
                        'Elixir.NewRelic.Util.PriorityQueue',
                        'Elixir.NewRelic.Util.RequestStart',
                        'Elixir.NewRelic.Util.Vendor']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,castore,inets,jason,logger,
                        os_mon,ssl,telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.NewRelic.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,oban,
                  [{description,
                       "Robust job processing, backed by modern PostgreSQL.\n"},
                   {vsn,"2.7.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Oban','Elixir.Oban.Application',
                        'Elixir.Oban.Breaker','Elixir.Oban.Config',
                        'Elixir.Oban.CrashError',
                        'Elixir.Oban.Cron.Expression','Elixir.Oban.Job',
                        'Elixir.Oban.Midwife','Elixir.Oban.Midwife.State',
                        'Elixir.Oban.Migrations','Elixir.Oban.Migrations.V01',
                        'Elixir.Oban.Migrations.V02',
                        'Elixir.Oban.Migrations.V03',
                        'Elixir.Oban.Migrations.V04',
                        'Elixir.Oban.Migrations.V05',
                        'Elixir.Oban.Migrations.V06',
                        'Elixir.Oban.Migrations.V07',
                        'Elixir.Oban.Migrations.V08',
                        'Elixir.Oban.Migrations.V09',
                        'Elixir.Oban.Migrations.V10','Elixir.Oban.Notifier',
                        'Elixir.Oban.PerformError','Elixir.Oban.Plugins.Cron',
                        'Elixir.Oban.Plugins.Cron.State',
                        'Elixir.Oban.Plugins.Gossip',
                        'Elixir.Oban.Plugins.Gossip.State',
                        'Elixir.Oban.Plugins.Pruner',
                        'Elixir.Oban.Plugins.Pruner.State',
                        'Elixir.Oban.Plugins.Repeater',
                        'Elixir.Oban.Plugins.Repeater.State',
                        'Elixir.Oban.Plugins.Stager',
                        'Elixir.Oban.Plugins.Stager.State',
                        'Elixir.Oban.PostgresNotifier',
                        'Elixir.Oban.PostgresNotifier.State',
                        'Elixir.Oban.Query','Elixir.Oban.Queue.BasicEngine',
                        'Elixir.Oban.Queue.Drainer',
                        'Elixir.Oban.Queue.Engine',
                        'Elixir.Oban.Queue.Executor',
                        'Elixir.Oban.Queue.Producer',
                        'Elixir.Oban.Queue.Producer.State',
                        'Elixir.Oban.Queue.Supervisor',
                        'Elixir.Oban.Queue.Watchman',
                        'Elixir.Oban.Queue.Watchman.State',
                        'Elixir.Oban.Registry','Elixir.Oban.Repo',
                        'Elixir.Oban.Telemetry','Elixir.Oban.Testing',
                        'Elixir.Oban.TimeoutError','Elixir.Oban.Worker']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,ecto_sql,jason,logger,postgrex,
                        telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Oban.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,oban_pro,
                  [{description,"Oban Pro Component"},
                   {vsn,"0.8.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Oban.Pro','Elixir.Oban.Pro.Cron',
                        'Elixir.Oban.Pro.Migrations.DynamicCron',
                        'Elixir.Oban.Pro.Migrations.Producers',
                        'Elixir.Oban.Pro.Notifiers.PG',
                        'Elixir.Oban.Pro.Notifiers.PG.State',
                        'Elixir.Oban.Pro.Plugins.BatchManager',
                        'Elixir.Oban.Pro.Plugins.BatchManager.State',
                        'Elixir.Oban.Pro.Plugins.DynamicCron',
                        'Elixir.Oban.Pro.Plugins.DynamicCron.State',
                        'Elixir.Oban.Pro.Plugins.DynamicPruner',
                        'Elixir.Oban.Pro.Plugins.DynamicPruner.State',
                        'Elixir.Oban.Pro.Plugins.Lifeline',
                        'Elixir.Oban.Pro.Plugins.Lifeline.State',
                        'Elixir.Oban.Pro.Plugins.Relay',
                        'Elixir.Oban.Pro.Plugins.Reprioritizer',
                        'Elixir.Oban.Pro.Plugins.Reprioritizer.State',
                        'Elixir.Oban.Pro.Plugins.WorkflowManager',
                        'Elixir.Oban.Pro.Producer',
                        'Elixir.Oban.Pro.Queue.SmartEngine',
                        'Elixir.Oban.Pro.Testing',
                        'Elixir.Oban.Pro.Workers.Batch',
                        'Elixir.Oban.Pro.Workers.Chunk',
                        'Elixir.Oban.Pro.Workers.Workflow']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,oban]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_pubsub,
                  [{description,"Distributed PubSub and Presence platform"},
                   {vsn,"2.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.PubSub',
                        'Elixir.Phoenix.PubSub.Adapter',
                        'Elixir.Phoenix.PubSub.Application',
                        'Elixir.Phoenix.PubSub.BroadcastError',
                        'Elixir.Phoenix.PubSub.PG2',
                        'Elixir.Phoenix.PubSub.Supervisor',
                        'Elixir.Phoenix.Tracker',
                        'Elixir.Phoenix.Tracker.Clock',
                        'Elixir.Phoenix.Tracker.DeltaGeneration',
                        'Elixir.Phoenix.Tracker.Replica',
                        'Elixir.Phoenix.Tracker.Shard',
                        'Elixir.Phoenix.Tracker.State']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,crypto,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.PubSub.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,query_builder,
                  [{description,"Compose Ecto queries without effort"},
                   {vsn,"0.19.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ecto.Queryable.QueryBuilder.Query',
                        'Elixir.Inspect.QueryBuilder.Query',
                        'Elixir.QueryBuilder','Elixir.QueryBuilder.AssocList',
                        'Elixir.QueryBuilder.AssocList.State',
                        'Elixir.QueryBuilder.JoinMaker',
                        'Elixir.QueryBuilder.Query',
                        'Elixir.QueryBuilder.Query.OrderBy',
                        'Elixir.QueryBuilder.Query.Preload',
                        'Elixir.QueryBuilder.Query.Where',
                        'Elixir.QueryBuilder.Schema',
                        'Elixir.QueryBuilder.Utils']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,ecto,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"1.15.1"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,runtime_tools,
                        runtime_tools_sup,erts_alloc_config,ttb_autostart,
                        dyntrace,system_information,scheduler,msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,slugify,
                  [{description,
                       "Transform strings from any language to slugs for URLs, filenames or fun"},
                   {vsn,"1.3.1"},
                   {id,[]},
                   {modules,['Elixir.Slug']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,combine,
                  [{description,
                       "A parser combinator library for Elixir projects."},
                   {vsn,"0.10.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Combine','Elixir.Combine.Helpers',
                        'Elixir.Combine.ParserState',
                        'Elixir.Combine.Parsers.Base',
                        'Elixir.Combine.Parsers.Binary',
                        'Elixir.Combine.Parsers.Text']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gettext,
                  [{description,
                       "Internationalization and localization through gettext"},
                   {vsn,"0.18.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Gettext','Elixir.Gettext.Application',
                        'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
                        'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
                        'Elixir.Gettext.ExtractorAgent',
                        'Elixir.Gettext.Fuzzy','Elixir.Gettext.Interpolation',
                        'Elixir.Gettext.Merger',
                        'Elixir.Gettext.MissingBindingsError',
                        'Elixir.Gettext.PO','Elixir.Gettext.PO.Parser',
                        'Elixir.Gettext.PO.PluralTranslation',
                        'Elixir.Gettext.PO.SyntaxError',
                        'Elixir.Gettext.PO.Tokenizer',
                        'Elixir.Gettext.PO.Translation',
                        'Elixir.Gettext.PO.Translations',
                        'Elixir.Gettext.Plural',
                        'Elixir.Gettext.Plural.UnknownLocaleError',
                        'Elixir.Gettext.PluralFormError',
                        'Elixir.Mix.Tasks.Compile.Gettext',
                        'Elixir.Mix.Tasks.Gettext.Extract',
                        'Elixir.Mix.Tasks.Gettext.Merge',gettext_po_parser]},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,
                       [{default_locale,<<"en">>},
                        {plural_forms,'Elixir.Gettext.Plural'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Gettext.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,tzdata,
                  [{description,
                       "Tzdata is a parser and library for the tz database.\n"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Tzdata','Elixir.Tzdata.App',
                        'Elixir.Tzdata.BasicDataMap',
                        'Elixir.Tzdata.DataBuilder',
                        'Elixir.Tzdata.DataLoader','Elixir.Tzdata.EtsHolder',
                        'Elixir.Tzdata.FarFutureDynamicPeriods',
                        'Elixir.Tzdata.HTTPClient',
                        'Elixir.Tzdata.HTTPClient.Hackney',
                        'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
                        'Elixir.Tzdata.ParserOrganizer',
                        'Elixir.Tzdata.PeriodBuilder',
                        'Elixir.Tzdata.ReleaseReader',
                        'Elixir.Tzdata.ReleaseUpdater',
                        'Elixir.Tzdata.TimeZoneDatabase',
                        'Elixir.Tzdata.Util']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,hackney,logger]},
                   {included_applications,[]},
                   {env,
                       [{autoupdate,enabled},
                        {data_dir,nil},
                        {http_client,'Elixir.Tzdata.HTTPClient.Hackney'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Tzdata.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,timex,
                  [{description,
                       "Timex is a rich, comprehensive Date/Time library for Elixir projects, with full timezone support via the :tzdata package.\nIf you need to manipulate dates, times, datetimes, timestamps, etc., then Timex is for you!\n"},
                   {vsn,"3.7.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Timex.Interval',
                        'Elixir.Inspect.Timex.AmbiguousDateTime',
                        'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Inspect.Timex.Duration',
                        'Elixir.Inspect.Timex.TimezoneInfo','Elixir.Timex',
                        'Elixir.Timex.AmbiguousDateTime',
                        'Elixir.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Timex.Calendar.Julian',
                        'Elixir.Timex.Comparable',
                        'Elixir.Timex.Comparable.Date',
                        'Elixir.Timex.Comparable.DateTime',
                        'Elixir.Timex.Comparable.Diff',
                        'Elixir.Timex.Comparable.NaiveDateTime',
                        'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
                        'Elixir.Timex.Comparable.Tuple',
                        'Elixir.Timex.Comparable.Utils',
                        'Elixir.Timex.Constants','Elixir.Timex.Convert',
                        'Elixir.Timex.ConvertError','Elixir.Timex.Date',
                        'Elixir.Timex.DateTime',
                        'Elixir.Timex.DateTime.Helpers',
                        'Elixir.Timex.Duration',
                        'Elixir.Timex.Format.DateTime.Formatter',
                        'Elixir.Timex.Format.DateTime.Formatters.Default',
                        'Elixir.Timex.Format.DateTime.Formatters.Relative',
                        'Elixir.Timex.Format.DateTime.Formatters.Strftime',
                        'Elixir.Timex.Format.Duration.Formatter',
                        'Elixir.Timex.Format.Duration.Formatters.Default',
                        'Elixir.Timex.Format.Duration.Formatters.Humanized',
                        'Elixir.Timex.Format.FormatError',
                        'Elixir.Timex.Gettext','Elixir.Timex.Helpers',
                        'Elixir.Timex.Interval',
                        'Elixir.Timex.Interval.FormatError',
                        'Elixir.Timex.Macros','Elixir.Timex.NaiveDateTime',
                        'Elixir.Timex.Parse.DateTime.Helpers',
                        'Elixir.Timex.Parse.DateTime.Parser',
                        'Elixir.Timex.Parse.DateTime.Parsers',
                        'Elixir.Timex.Parse.DateTime.Parsers.ISO8601Extended',
                        'Elixir.Timex.Parse.DateTime.Tokenizer',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
                        'Elixir.Timex.Parse.Duration.Parser',
                        'Elixir.Timex.Parse.Duration.Parsers.ISO8601Parser',
                        'Elixir.Timex.Parse.ParseError',
                        'Elixir.Timex.Parse.Timezones.Posix',
                        'Elixir.Timex.Parse.ZoneInfo.Parser',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Rule',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',
                        'Elixir.Timex.PosixTimezone','Elixir.Timex.Protocol',
                        'Elixir.Timex.Protocol.Any',
                        'Elixir.Timex.Protocol.Date',
                        'Elixir.Timex.Protocol.DateTime',
                        'Elixir.Timex.Protocol.Map',
                        'Elixir.Timex.Protocol.NaiveDateTime',
                        'Elixir.Timex.Protocol.Tuple','Elixir.Timex.Time',
                        'Elixir.Timex.Timezone',
                        'Elixir.Timex.Timezone.Database',
                        'Elixir.Timex.Timezone.Local',
                        'Elixir.Timex.Timezone.Utils',
                        'Elixir.Timex.TimezoneInfo','Elixir.Timex.Translator',
                        'Elixir.Timex.Types']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,combine,gettext,tzdata]},
                   {included_applications,[]},
                   {env,[{local_timezone,nil}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Timex',[]}}]}]}},
     {apply,
         {application,load,
             [{application,trans,
                  [{description,"Embedded translations for Elixir schemas"},
                   {vsn,"2.2.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Trans','Elixir.Trans.QueryBuilder',
                        'Elixir.Trans.Translator']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,countdownplus,
                  [{description,"countdownplus"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Countdownplus',
                        'Elixir.Countdownplus.Accounts',
                        'Elixir.Countdownplus.Accounts.AuthProviderProfile',
                        'Elixir.Countdownplus.Accounts.AuthProviderProfile.Extended',
                        'Elixir.Countdownplus.Accounts.AuthProviderProfile.Internal',
                        'Elixir.Countdownplus.Accounts.Authenticator',
                        'Elixir.Countdownplus.Accounts.Authorizer',
                        'Elixir.Countdownplus.Accounts.Contact',
                        'Elixir.Countdownplus.Accounts.Contact.Extended',
                        'Elixir.Countdownplus.Accounts.Contact.Internal',
                        'Elixir.Countdownplus.Accounts.Credential',
                        'Elixir.Countdownplus.Accounts.Credential.Internal',
                        'Elixir.Countdownplus.Accounts.CredentialNotifier',
                        'Elixir.Countdownplus.Accounts.CredentialToken',
                        'Elixir.Countdownplus.Accounts.Device',
                        'Elixir.Countdownplus.Accounts.Device.Details',
                        'Elixir.Countdownplus.Accounts.Registration',
                        'Elixir.Countdownplus.Accounts.User',
                        'Elixir.Countdownplus.Accounts.User.Extended',
                        'Elixir.Countdownplus.Accounts.User.Internal',
                        'Elixir.Countdownplus.Accounts.User.Settings',
                        'Elixir.Countdownplus.Activities',
                        'Elixir.Countdownplus.Activities.Activity',
                        'Elixir.Countdownplus.Activities.Activity.Extended',
                        'Elixir.Countdownplus.Activities.ActivityEntry',
                        'Elixir.Countdownplus.Application',
                        'Elixir.Countdownplus.Articles',
                        'Elixir.Countdownplus.Articles.Article',
                        'Elixir.Countdownplus.Articles.Article.TitleSlug',
                        'Elixir.Countdownplus.Articles.Article.TitleSlug.Type',
                        'Elixir.Countdownplus.Articles.Oembed',
                        'Elixir.Countdownplus.Articles.Oembed.Extended',
                        'Elixir.Countdownplus.Cldr',
                        'Elixir.Countdownplus.Cldr.Gettext.Plural',
                        'Elixir.Countdownplus.Cldr.Locale',
                        'Elixir.Countdownplus.Cldr.Number.Cardinal',
                        'Elixir.Countdownplus.Cldr.Number.Ordinal',
                        'Elixir.Countdownplus.Cldr.Number.PluralRule.Range',
                        'Elixir.Countdownplus.Cldr.Territory',
                        'Elixir.Countdownplus.Colors',
                        'Elixir.Countdownplus.Colors.HSL',
                        'Elixir.Countdownplus.Colors.Parser',
                        'Elixir.Countdownplus.Colors.RGB',
                        'Elixir.Countdownplus.Db.IndexNames',
                        'Elixir.Countdownplus.Db.Introspect',
                        'Elixir.Countdownplus.Db.Migration',
                        'Elixir.Countdownplus.Events',
                        'Elixir.Countdownplus.Events.AlarmSound',
                        'Elixir.Countdownplus.Events.Appearance',
                        'Elixir.Countdownplus.Events.Countdown',
                        'Elixir.Countdownplus.Events.Countdown.Extended',
                        'Elixir.Countdownplus.Events.Countdown.Internal',
                        'Elixir.Countdownplus.Events.CountdownSettings',
                        'Elixir.Countdownplus.Events.Event',
                        'Elixir.Countdownplus.Events.Event.Extended',
                        'Elixir.Countdownplus.Events.Event.Internal',
                        'Elixir.Countdownplus.Events.Event.Recurrence',
                        'Elixir.Countdownplus.Events.Event.TitleSlug',
                        'Elixir.Countdownplus.Events.Event.TitleSlug.Type',
                        'Elixir.Countdownplus.Events.RecurrenceRule',
                        'Elixir.Countdownplus.Events.Theme',
                        'Elixir.Countdownplus.Events.Theme.Background',
                        'Elixir.Countdownplus.Events.Theme.Position',
                        'Elixir.Countdownplus.Events.Theme.Text',
                        'Elixir.Countdownplus.Events.UserLifeEvent',
                        'Elixir.Countdownplus.Events.UserLifeEvent.Extended',
                        'Elixir.Countdownplus.Groups',
                        'Elixir.Countdownplus.Groups.Group',
                        'Elixir.Countdownplus.Groups.Group.NameSlug',
                        'Elixir.Countdownplus.Groups.Group.NameSlug.Type',
                        'Elixir.Countdownplus.Groups.GroupEvent',
                        'Elixir.Countdownplus.Groups.GroupMember',
                        'Elixir.Countdownplus.Groups.GroupMember.Settings',
                        'Elixir.Countdownplus.KeyValues',
                        'Elixir.Countdownplus.KeyValues.KeyValue',
                        'Elixir.Countdownplus.Legacy',
                        'Elixir.Countdownplus.Legacy.Article',
                        'Elixir.Countdownplus.Legacy.ArticleOembed',
                        'Elixir.Countdownplus.Legacy.ArticleOembed.Data',
                        'Elixir.Countdownplus.Legacy.Attachment',
                        'Elixir.Countdownplus.Legacy.CivilDate',
                        'Elixir.Countdownplus.Legacy.Countdown',
                        'Elixir.Countdownplus.Legacy.Countdown.Data',
                        'Elixir.Countdownplus.Legacy.Device',
                        'Elixir.Countdownplus.Legacy.Device.Data',
                        'Elixir.Countdownplus.Legacy.Event',
                        'Elixir.Countdownplus.Legacy.Event.Data',
                        'Elixir.Countdownplus.Legacy.Follow',
                        'Elixir.Countdownplus.Legacy.Follow.Data',
                        'Elixir.Countdownplus.Legacy.Holiday',
                        'Elixir.Countdownplus.Legacy.Holiday.Data',
                        'Elixir.Countdownplus.Legacy.IosReceipt',
                        'Elixir.Countdownplus.Legacy.IosReceipt.Data',
                        'Elixir.Countdownplus.Legacy.Location',
                        'Elixir.Countdownplus.Legacy.Location.Data',
                        'Elixir.Countdownplus.Legacy.Migrator.ArticleOembedMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.CountdownMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.DeviceMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.EventMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.FollowMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.HolidayMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.Interface',
                        'Elixir.Countdownplus.Legacy.Migrator.IosReceiptMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.LocationMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.ProductMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.PurchaseMigrator',
                        'Elixir.Countdownplus.Legacy.Migrator.Server',
                        'Elixir.Countdownplus.Legacy.Migrator.Stream',
                        'Elixir.Countdownplus.Legacy.Migrator.UserMigrator',
                        'Elixir.Countdownplus.Legacy.Product',
                        'Elixir.Countdownplus.Legacy.Product.Data',
                        'Elixir.Countdownplus.Legacy.Profile',
                        'Elixir.Countdownplus.Legacy.Purchase',
                        'Elixir.Countdownplus.Legacy.Purchase.Data',
                        'Elixir.Countdownplus.Legacy.User',
                        'Elixir.Countdownplus.Legacy.User.Data',
                        'Elixir.Countdownplus.Legacy.Utils',
                        'Elixir.Countdownplus.LegacyRepo',
                        'Elixir.Countdownplus.LegacySchema',
                        'Elixir.Countdownplus.Market',
                        'Elixir.Countdownplus.Market.Product',
                        'Elixir.Countdownplus.Market.Purchase',
                        'Elixir.Countdownplus.Market.Purchase.Internal',
                        'Elixir.Countdownplus.Market.Receipt',
                        'Elixir.Countdownplus.Market.Receipt.Internal',
                        'Elixir.Countdownplus.Media',
                        'Elixir.Countdownplus.Media.ArticleAttachment',
                        'Elixir.Countdownplus.Media.ArticleAttachment.Extended',
                        'Elixir.Countdownplus.Media.Attachment',
                        'Elixir.Countdownplus.Media.Attachment.Asset',
                        'Elixir.Countdownplus.Media.Attachment.Author',
                        'Elixir.Countdownplus.Media.Attachment.ContentData',
                        'Elixir.Countdownplus.Media.CountdownAttachment',
                        'Elixir.Countdownplus.Media.CountdownAttachment.Extended',
                        'Elixir.Countdownplus.Media.EventAttachment',
                        'Elixir.Countdownplus.Media.EventAttachment.Extended',
                        'Elixir.Countdownplus.Media.UserAttachment',
                        'Elixir.Countdownplus.Media.UserAttachment.Extended',
                        'Elixir.Countdownplus.Notifications.Dispatcher',
                        'Elixir.Countdownplus.Notifications.EmailDispatcher',
                        'Elixir.Countdownplus.Notifications.Emails',
                        'Elixir.Countdownplus.Notifications.Emails.ConfirmCodeEmail',
                        'Elixir.Countdownplus.Notifications.Emails.ConfirmationEmail',
                        'Elixir.Countdownplus.Notifications.Emails.MjmlEmail',
                        'Elixir.Countdownplus.Notifications.Emails.ResetPasswordEmail',
                        'Elixir.Countdownplus.Places',
                        'Elixir.Countdownplus.Places.Address',
                        'Elixir.Countdownplus.Places.DeviceAddress',
                        'Elixir.Countdownplus.Places.DeviceAddress.Extended',
                        'Elixir.Countdownplus.Places.EventAddress',
                        'Elixir.Countdownplus.Places.EventAddress.Extended',
                        'Elixir.Countdownplus.Places.GroupAddress',
                        'Elixir.Countdownplus.Places.GroupAddress.Extended',
                        'Elixir.Countdownplus.Places.UserAddress',
                        'Elixir.Countdownplus.Places.UserAddress.Extended',
                        'Elixir.Countdownplus.ReleaseTasks',
                        'Elixir.Countdownplus.Repo',
                        'Elixir.Countdownplus.Schema',
                        'Elixir.Countdownplus.Social',
                        'Elixir.Countdownplus.Social.Follow',
                        'Elixir.Countdownplus.Social.Relationship',
                        'Elixir.Countdownplus.Types.ActivityObject',
                        'Elixir.Countdownplus.Types.Dimension',
                        'Elixir.Countdownplus.Types.Ecto.Color',
                        'Elixir.Countdownplus.Types.Ecto.CompactEmbed',
                        'Elixir.Countdownplus.Types.Ecto.CountryCode',
                        'Elixir.Countdownplus.Types.Ecto.DateTimeMask',
                        'Elixir.Countdownplus.Types.Ecto.Email',
                        'Elixir.Countdownplus.Types.Ecto.Int4Range',
                        'Elixir.Countdownplus.Types.Ecto.Int8Range',
                        'Elixir.Countdownplus.Types.Ecto.PgRange',
                        'Elixir.Countdownplus.Types.Ecto.RecurrenceRule',
                        'Elixir.Countdownplus.Types.Ecto.Timezone',
                        'Elixir.Countdownplus.Types.Ecto.TstzRange',
                        'Elixir.Countdownplus.Types.Ecto.Url',
                        'Elixir.Countdownplus.Types.Ecto.Username',
                        'Elixir.Countdownplus.Types.Ecto.UsernameBlocklist',
                        'Elixir.Countdownplus.Types.Enums',
                        'Elixir.Countdownplus.Types.Enums.AccountType',
                        'Elixir.Countdownplus.Types.Enums.ActivityEntity',
                        'Elixir.Countdownplus.Types.Enums.ActivityType',
                        'Elixir.Countdownplus.Types.Enums.AppEdition',
                        'Elixir.Countdownplus.Types.Enums.ArticleType',
                        'Elixir.Countdownplus.Types.Enums.AttachmentProvider',
                        'Elixir.Countdownplus.Types.Enums.AttachmentType',
                        'Elixir.Countdownplus.Types.Enums.AuthMethod',
                        'Elixir.Countdownplus.Types.Enums.AuthProvider',
                        'Elixir.Countdownplus.Types.Enums.CorporateEventType',
                        'Elixir.Countdownplus.Types.Enums.CountUnit',
                        'Elixir.Countdownplus.Types.Enums.DayOfWeek',
                        'Elixir.Countdownplus.Types.Enums.DevicePlatform',
                        'Elixir.Countdownplus.Types.Enums.EducationEventType',
                        'Elixir.Countdownplus.Types.Enums.EventAccessMode',
                        'Elixir.Countdownplus.Types.Enums.EventProvider',
                        'Elixir.Countdownplus.Types.Enums.EventType',
                        'Elixir.Countdownplus.Types.Enums.FamilyEventType',
                        'Elixir.Countdownplus.Types.Enums.FestivalEventType',
                        'Elixir.Countdownplus.Types.Enums.FundraiserEventType',
                        'Elixir.Countdownplus.Types.Enums.GroupAccessMode',
                        'Elixir.Countdownplus.Types.Enums.GroupMembershipStatus',
                        'Elixir.Countdownplus.Types.Enums.GroupMembershipType',
                        'Elixir.Countdownplus.Types.Enums.InvitationResponse',
                        'Elixir.Countdownplus.Types.Enums.NotificationChannel',
                        'Elixir.Countdownplus.Types.Enums.ProfileAttachmentType',
                        'Elixir.Countdownplus.Types.Enums.Pronoun',
                        'Elixir.Countdownplus.Types.Enums.PurchaseModel',
                        'Elixir.Countdownplus.Types.Enums.RecurrenceFrequency',
                        'Elixir.Countdownplus.Types.Enums.RelationshipType',
                        'Elixir.Countdownplus.Types.Enums.ReminderUnit',
                        'Elixir.Countdownplus.Types.Enums.WorkEventType',
                        'Elixir.Countdownplus.Types.Gauge',
                        'Elixir.Countdownplus.Types.Postgres',
                        'Elixir.Countdownplus.Utils.Changeset',
                        'Elixir.Countdownplus.Utils.Converter',
                        'Elixir.Countdownplus.Utils.Dig',
                        'Elixir.Countdownplus.Utils.Fill',
                        'Elixir.Countdownplus.Utils.Graphql',
                        'Elixir.Countdownplus.Utils.Map',
                        'Elixir.Countdownplus.Utils.Maybe',
                        'Elixir.Countdownplus.Utils.Presence',
                        'Elixir.Countdownplus.Utils.Seconds',
                        'Elixir.Countdownplus.Utils.String',
                        'Elixir.Countdownplus.Utils.Token',
                        'Elixir.Countdownplus.Utils.Uniquify',
                        'Elixir.Countdownplus.Workers.LegacyMigrate',
                        'Elixir.Countdownplus.Workers.LegacyMigrateBatch',
                        'Elixir.Countdownplus.Workers.LegacyMigrateBatcher',
                        'Elixir.Countdownplus.Workers.SendEmailWorker',
                        'Elixir.Inspect.Countdownplus.Accounts.Credential',
                        'Elixir.Inspect.Countdownplus.Accounts.Registration',
                        'Elixir.String.Chars.Countdownplus.Colors.HSL',
                        'Elixir.String.Chars.Countdownplus.Colors.RGB',
                        'Elixir.String.Chars.Countdownplus.Events.RecurrenceRule']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,bamboo,bamboo_ses,bcrypt_elixir,
                        bodyguard,ecto_autoslug_field,ecto_enum,ecto_network,
                        ecto_soft_delete,ecto_sql,emojix,ex_aws,ex_aws_s3,
                        ex_aws_ses,ex_cldr,ex_cldr_territories,excal,
                        geo_postgis,inflex,jason,logger,mjml,new_relic_agent,
                        oban,oban_pro,phoenix_pubsub,plug_crypto,postgrex,
                        query_builder,runtime_tools,slugify,timex,trans,
                        tzdata]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Countdownplus.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,nimble_parsec,
                  [{description,
                       "A simple and fast library for text-based parser combinators"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.NimbleParsec.Compile',
                        'Elixir.NimbleParsec','Elixir.NimbleParsec.Compiler',
                        'Elixir.NimbleParsec.Recorder']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,absinthe,
                  [{description,"absinthe"},
                   {vsn,"1.6.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Absinthe','Elixir.Absinthe.Adapter',
                        'Elixir.Absinthe.Adapter.LanguageConventions',
                        'Elixir.Absinthe.Adapter.Passthrough',
                        'Elixir.Absinthe.Adapter.StrictLanguageConventions',
                        'Elixir.Absinthe.Adapter.Underscore',
                        'Elixir.Absinthe.AnalysisError',
                        'Elixir.Absinthe.Blueprint',
                        'Elixir.Absinthe.Blueprint.Directive',
                        'Elixir.Absinthe.Blueprint.Document',
                        'Elixir.Absinthe.Blueprint.Document.Field',
                        'Elixir.Absinthe.Blueprint.Document.Fragment',
                        'Elixir.Absinthe.Blueprint.Document.Fragment.Inline',
                        'Elixir.Absinthe.Blueprint.Document.Fragment.Named',
                        'Elixir.Absinthe.Blueprint.Document.Fragment.Named.Use',
                        'Elixir.Absinthe.Blueprint.Document.Fragment.Spread',
                        'Elixir.Absinthe.Blueprint.Document.Operation',
                        'Elixir.Absinthe.Blueprint.Document.VariableDefinition',
                        'Elixir.Absinthe.Blueprint.Draft',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Argument',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.BooleanValue',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Directive',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.DirectiveDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Document',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.EnumTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.EnumValue',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.EnumValueDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Field',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.FieldDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.FloatValue',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Fragment',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.FragmentSpread',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.InlineFragment',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.InputObjectTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.InputValueDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.IntValue',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.InterfaceTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ListType',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ListValue',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.NamedType',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.NonNullType',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.NullValue',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ObjectField',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ObjectTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ObjectValue',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.OperationDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.ScalarTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.SchemaDeclaration',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.SchemaDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.StringValue',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.TypeExtensionDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.UnionTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.Variable',
                        'Elixir.Absinthe.Blueprint.Draft.Absinthe.Language.VariableDefinition',
                        'Elixir.Absinthe.Blueprint.Draft.Atom',
                        'Elixir.Absinthe.Blueprint.Draft.List',
                        'Elixir.Absinthe.Blueprint.Execution',
                        'Elixir.Absinthe.Blueprint.Input',
                        'Elixir.Absinthe.Blueprint.Input.Argument',
                        'Elixir.Absinthe.Blueprint.Input.Boolean',
                        'Elixir.Absinthe.Blueprint.Input.Enum',
                        'Elixir.Absinthe.Blueprint.Input.Field',
                        'Elixir.Absinthe.Blueprint.Input.Float',
                        'Elixir.Absinthe.Blueprint.Input.Generated',
                        'Elixir.Absinthe.Blueprint.Input.Integer',
                        'Elixir.Absinthe.Blueprint.Input.List',
                        'Elixir.Absinthe.Blueprint.Input.Null',
                        'Elixir.Absinthe.Blueprint.Input.Object',
                        'Elixir.Absinthe.Blueprint.Input.RawValue',
                        'Elixir.Absinthe.Blueprint.Input.String',
                        'Elixir.Absinthe.Blueprint.Input.Value',
                        'Elixir.Absinthe.Blueprint.Input.Variable',
                        'Elixir.Absinthe.Blueprint.Input.Variable.Use',
                        'Elixir.Absinthe.Blueprint.Result.Leaf',
                        'Elixir.Absinthe.Blueprint.Result.List',
                        'Elixir.Absinthe.Blueprint.Result.Object',
                        'Elixir.Absinthe.Blueprint.Schema',
                        'Elixir.Absinthe.Blueprint.Schema.Deprecation',
                        'Elixir.Absinthe.Blueprint.Schema.DirectiveDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.EnumTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.EnumValueDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.FieldDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.InputObjectTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.InputValueDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.InterfaceTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.ObjectTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.ScalarTypeDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.SchemaDeclaration',
                        'Elixir.Absinthe.Blueprint.Schema.SchemaDefinition',
                        'Elixir.Absinthe.Blueprint.Schema.UnionTypeDefinition',
                        'Elixir.Absinthe.Blueprint.SourceLocation',
                        'Elixir.Absinthe.Blueprint.Transform',
                        'Elixir.Absinthe.Blueprint.TypeReference',
                        'Elixir.Absinthe.Blueprint.TypeReference.Identifier',
                        'Elixir.Absinthe.Blueprint.TypeReference.List',
                        'Elixir.Absinthe.Blueprint.TypeReference.Name',
                        'Elixir.Absinthe.Blueprint.TypeReference.NonNull',
                        'Elixir.Absinthe.Complexity',
                        'Elixir.Absinthe.ExecutionError',
                        'Elixir.Absinthe.Introspection',
                        'Elixir.Absinthe.Introspection.DirectiveLocation',
                        'Elixir.Absinthe.Introspection.TypeKind',
                        'Elixir.Absinthe.Language',
                        'Elixir.Absinthe.Language.Argument',
                        'Elixir.Absinthe.Language.BooleanValue',
                        'Elixir.Absinthe.Language.Directive',
                        'Elixir.Absinthe.Language.DirectiveDefinition',
                        'Elixir.Absinthe.Language.Document',
                        'Elixir.Absinthe.Language.EnumTypeDefinition',
                        'Elixir.Absinthe.Language.EnumValue',
                        'Elixir.Absinthe.Language.EnumValueDefinition',
                        'Elixir.Absinthe.Language.Field',
                        'Elixir.Absinthe.Language.FieldDefinition',
                        'Elixir.Absinthe.Language.FloatValue',
                        'Elixir.Absinthe.Language.Fragment',
                        'Elixir.Absinthe.Language.FragmentSpread',
                        'Elixir.Absinthe.Language.InlineFragment',
                        'Elixir.Absinthe.Language.InputObjectTypeDefinition',
                        'Elixir.Absinthe.Language.InputValueDefinition',
                        'Elixir.Absinthe.Language.IntValue',
                        'Elixir.Absinthe.Language.InterfaceTypeDefinition',
                        'Elixir.Absinthe.Language.ListType',
                        'Elixir.Absinthe.Language.ListValue',
                        'Elixir.Absinthe.Language.NamedType',
                        'Elixir.Absinthe.Language.NonNullType',
                        'Elixir.Absinthe.Language.NullValue',
                        'Elixir.Absinthe.Language.ObjectField',
                        'Elixir.Absinthe.Language.ObjectTypeDefinition',
                        'Elixir.Absinthe.Language.ObjectValue',
                        'Elixir.Absinthe.Language.OperationDefinition',
                        'Elixir.Absinthe.Language.ScalarTypeDefinition',
                        'Elixir.Absinthe.Language.SchemaDeclaration',
                        'Elixir.Absinthe.Language.SchemaDefinition',
                        'Elixir.Absinthe.Language.SelectionSet',
                        'Elixir.Absinthe.Language.Source',
                        'Elixir.Absinthe.Language.StringValue',
                        'Elixir.Absinthe.Language.TypeExtensionDefinition',
                        'Elixir.Absinthe.Language.UnionTypeDefinition',
                        'Elixir.Absinthe.Language.Variable',
                        'Elixir.Absinthe.Language.VariableDefinition',
                        'Elixir.Absinthe.Lexer','Elixir.Absinthe.Logger',
                        'Elixir.Absinthe.Middleware',
                        'Elixir.Absinthe.Middleware.Async',
                        'Elixir.Absinthe.Middleware.Batch',
                        'Elixir.Absinthe.Middleware.MapGet',
                        'Elixir.Absinthe.Middleware.PassParent',
                        'Elixir.Absinthe.Middleware.Telemetry',
                        'Elixir.Absinthe.Phase',
                        'Elixir.Absinthe.Phase.Blueprint',
                        'Elixir.Absinthe.Phase.Debug',
                        'Elixir.Absinthe.Phase.Document.Arguments.CoerceEnums',
                        'Elixir.Absinthe.Phase.Document.Arguments.CoerceLists',
                        'Elixir.Absinthe.Phase.Document.Arguments.Data',
                        'Elixir.Absinthe.Phase.Document.Arguments.FlagInvalid',
                        'Elixir.Absinthe.Phase.Document.Arguments.Normalize',
                        'Elixir.Absinthe.Phase.Document.Arguments.Parse',
                        'Elixir.Absinthe.Phase.Document.Arguments.VariableTypesMatch',
                        'Elixir.Absinthe.Phase.Document.Complexity.Analysis',
                        'Elixir.Absinthe.Phase.Document.Complexity.Result',
                        'Elixir.Absinthe.Phase.Document.Context',
                        'Elixir.Absinthe.Phase.Document.CurrentOperation',
                        'Elixir.Absinthe.Phase.Document.Directives',
                        'Elixir.Absinthe.Phase.Document.Execution.Resolution',
                        'Elixir.Absinthe.Phase.Document.MissingLiterals',
                        'Elixir.Absinthe.Phase.Document.MissingVariables',
                        'Elixir.Absinthe.Phase.Document.OverrideRoot',
                        'Elixir.Absinthe.Phase.Document.Result',
                        'Elixir.Absinthe.Phase.Document.Uses',
                        'Elixir.Absinthe.Phase.Document.Validation.ArgumentsOfCorrectType',
                        'Elixir.Absinthe.Phase.Document.Validation.FieldsOnCorrectType',
                        'Elixir.Absinthe.Phase.Document.Validation.KnownArgumentNames',
                        'Elixir.Absinthe.Phase.Document.Validation.KnownDirectives',
                        'Elixir.Absinthe.Phase.Document.Validation.KnownFragmentNames',
                        'Elixir.Absinthe.Phase.Document.Validation.LoneAnonymousOperation',
                        'Elixir.Absinthe.Phase.Document.Validation.NoFragmentCycles',
                        'Elixir.Absinthe.Phase.Document.Validation.NoUndefinedVariables',
                        'Elixir.Absinthe.Phase.Document.Validation.NoUnusedFragments',
                        'Elixir.Absinthe.Phase.Document.Validation.NoUnusedVariables',
                        'Elixir.Absinthe.Phase.Document.Validation.OnlyOneSubscription',
                        'Elixir.Absinthe.Phase.Document.Validation.ProvidedAnOperation',
                        'Elixir.Absinthe.Phase.Document.Validation.ProvidedNonNullArguments',
                        'Elixir.Absinthe.Phase.Document.Validation.ProvidedNonNullVariables',
                        'Elixir.Absinthe.Phase.Document.Validation.RepeatableDirectives',
                        'Elixir.Absinthe.Phase.Document.Validation.Result',
                        'Elixir.Absinthe.Phase.Document.Validation.ScalarLeafs',
                        'Elixir.Absinthe.Phase.Document.Validation.SelectedCurrentOperation',
                        'Elixir.Absinthe.Phase.Document.Validation.UniqueArgumentNames',
                        'Elixir.Absinthe.Phase.Document.Validation.UniqueFragmentNames',
                        'Elixir.Absinthe.Phase.Document.Validation.UniqueInputFieldNames',
                        'Elixir.Absinthe.Phase.Document.Validation.UniqueOperationNames',
                        'Elixir.Absinthe.Phase.Document.Validation.UniqueVariableNames',
                        'Elixir.Absinthe.Phase.Document.Validation.Utils.MessageSuggestions',
                        'Elixir.Absinthe.Phase.Document.Validation.VariablesAreInputTypes',
                        'Elixir.Absinthe.Phase.Document.Variables',
                        'Elixir.Absinthe.Phase.Error',
                        'Elixir.Absinthe.Phase.Init',
                        'Elixir.Absinthe.Phase.Parse',
                        'Elixir.Absinthe.Phase.Schema',
                        'Elixir.Absinthe.Phase.Schema.ApplyDeclaration',
                        'Elixir.Absinthe.Phase.Schema.Arguments.Data',
                        'Elixir.Absinthe.Phase.Schema.Arguments.Normalize',
                        'Elixir.Absinthe.Phase.Schema.Arguments.Parse',
                        'Elixir.Absinthe.Phase.Schema.Build',
                        'Elixir.Absinthe.Phase.Schema.Compile',
                        'Elixir.Absinthe.Phase.Schema.Directives',
                        'Elixir.Absinthe.Phase.Schema.FieldImports',
                        'Elixir.Absinthe.Phase.Schema.Hydrate',
                        'Elixir.Absinthe.Phase.Schema.InlineFunctions',
                        'Elixir.Absinthe.Phase.Schema.Introspection',
                        'Elixir.Absinthe.Phase.Schema.MarkReferenced',
                        'Elixir.Absinthe.Phase.Schema.PopulatePersistentTerm',
                        'Elixir.Absinthe.Phase.Schema.ReformatDescriptions',
                        'Elixir.Absinthe.Phase.Schema.RegisterTriggers',
                        'Elixir.Absinthe.Phase.Schema.TypeImports',
                        'Elixir.Absinthe.Phase.Schema.Validation',
                        'Elixir.Absinthe.Phase.Schema.Validation.DefaultEnumValuePresent',
                        'Elixir.Absinthe.Phase.Schema.Validation.DirectivesMustBeValid',
                        'Elixir.Absinthe.Phase.Schema.Validation.InputOutputTypesCorrectlyPlaced',
                        'Elixir.Absinthe.Phase.Schema.Validation.InterfacesMustResolveTypes',
                        'Elixir.Absinthe.Phase.Schema.Validation.KnownDirectives',
                        'Elixir.Absinthe.Phase.Schema.Validation.NamesMustBeValid',
                        'Elixir.Absinthe.Phase.Schema.Validation.NoCircularFieldImports',
                        'Elixir.Absinthe.Phase.Schema.Validation.NoInterfaceCyles',
                        'Elixir.Absinthe.Phase.Schema.Validation.ObjectInterfacesMustBeValid',
                        'Elixir.Absinthe.Phase.Schema.Validation.ObjectMustImplementInterfaces',
                        'Elixir.Absinthe.Phase.Schema.Validation.QueryTypeMustBeObject',
                        'Elixir.Absinthe.Phase.Schema.Validation.Result',
                        'Elixir.Absinthe.Phase.Schema.Validation.TypeNamesAreReserved',
                        'Elixir.Absinthe.Phase.Schema.Validation.TypeNamesAreUnique',
                        'Elixir.Absinthe.Phase.Schema.Validation.TypeReferencesExist',
                        'Elixir.Absinthe.Phase.Subscription.Result',
                        'Elixir.Absinthe.Phase.Subscription.SubscribeSelf',
                        'Elixir.Absinthe.Phase.Telemetry',
                        'Elixir.Absinthe.Phase.Validation',
                        'Elixir.Absinthe.Phase.Validation.Helpers',
                        'Elixir.Absinthe.Phase.Validation.KnownTypeNames',
                        'Elixir.Absinthe.Pipeline',
                        'Elixir.Absinthe.Pipeline.BatchResolver',
                        'Elixir.Absinthe.Plugin','Elixir.Absinthe.Resolution',
                        'Elixir.Absinthe.Resolution.Helpers',
                        'Elixir.Absinthe.Resolution.Projector',
                        'Elixir.Absinthe.Schema',
                        'Elixir.Absinthe.Schema.Compiled',
                        'Elixir.Absinthe.Schema.Error',
                        'Elixir.Absinthe.Schema.Hydrator',
                        'Elixir.Absinthe.Schema.Manager',
                        'Elixir.Absinthe.Schema.Notation',
                        'Elixir.Absinthe.Schema.Notation.Error',
                        'Elixir.Absinthe.Schema.Notation.SDL',
                        'Elixir.Absinthe.Schema.Notation.SDL.Render',
                        'Elixir.Absinthe.Schema.PersistentTerm',
                        'Elixir.Absinthe.Schema.Prototype',
                        'Elixir.Absinthe.Schema.Prototype.Compiled',
                        'Elixir.Absinthe.Schema.Prototype.Notation',
                        'Elixir.Absinthe.Schema.Provider',
                        'Elixir.Absinthe.SerializationError',
                        'Elixir.Absinthe.Subscription',
                        'Elixir.Absinthe.Subscription.Local',
                        'Elixir.Absinthe.Subscription.PipelineSerializer',
                        'Elixir.Absinthe.Subscription.Proxy',
                        'Elixir.Absinthe.Subscription.ProxySupervisor',
                        'Elixir.Absinthe.Subscription.Pubsub',
                        'Elixir.Absinthe.Subscription.Supervisor',
                        'Elixir.Absinthe.Test','Elixir.Absinthe.Type',
                        'Elixir.Absinthe.Type.Argument',
                        'Elixir.Absinthe.Type.BuiltIns.Directives',
                        'Elixir.Absinthe.Type.BuiltIns.Introspection',
                        'Elixir.Absinthe.Type.BuiltIns.Scalars',
                        'Elixir.Absinthe.Type.BuiltIns.Scalars.Utils',
                        'Elixir.Absinthe.Type.Custom',
                        'Elixir.Absinthe.Type.Custom.Decimal',
                        'Elixir.Absinthe.Type.Deprecation',
                        'Elixir.Absinthe.Type.Directive',
                        'Elixir.Absinthe.Type.Enum',
                        'Elixir.Absinthe.Type.Enum.Value',
                        'Elixir.Absinthe.Type.Fetch',
                        'Elixir.Absinthe.Type.Field',
                        'Elixir.Absinthe.Type.InputObject',
                        'Elixir.Absinthe.Type.Interface',
                        'Elixir.Absinthe.Type.List',
                        'Elixir.Absinthe.Type.NonNull',
                        'Elixir.Absinthe.Type.Object',
                        'Elixir.Absinthe.Type.Reference',
                        'Elixir.Absinthe.Type.Scalar',
                        'Elixir.Absinthe.Type.Union','Elixir.Absinthe.Utils',
                        'Elixir.Absinthe.Utils.Suggestion',
                        'Elixir.Inspect.Absinthe.Blueprint',
                        'Elixir.Inspect.Absinthe.Blueprint.Schema.DirectiveDefinition',
                        'Elixir.Inspect.Absinthe.Blueprint.Schema.EnumTypeDefinition',
                        'Elixir.Inspect.Absinthe.Blueprint.Schema.InputObjectTypeDefinition',
                        'Elixir.Inspect.Absinthe.Blueprint.Schema.InterfaceTypeDefinition',
                        'Elixir.Inspect.Absinthe.Blueprint.Schema.ObjectTypeDefinition',
                        'Elixir.Inspect.Absinthe.Blueprint.Schema.ScalarTypeDefinition',
                        'Elixir.Inspect.Absinthe.Blueprint.Schema.SchemaDeclaration',
                        'Elixir.Inspect.Absinthe.Blueprint.Schema.UnionTypeDefinition',
                        'Elixir.Inspect.Absinthe.Resolution',
                        'Elixir.Mix.Tasks.Absinthe.Schema.Json',
                        'Elixir.Mix.Tasks.Absinthe.Schema.Json.Options',
                        'Elixir.Mix.Tasks.Absinthe.Schema.Sdl',
                        'Elixir.Mix.Tasks.Absinthe.Schema.Sdl.Options',
                        absinthe_parser]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,crypto,logger,nimble_parsec,
                        telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,absinthe_plug,
                  [{description,"absinthe_plug"},
                   {vsn,"1.5.8"},
                   {id,[]},
                   {modules,
                       ['Elixir.Absinthe.GraphiQL.Validation.NoSubscriptionOnHTTP',
                        'Elixir.Absinthe.Plug',
                        'Elixir.Absinthe.Plug.Batch.Runner',
                        'Elixir.Absinthe.Plug.DocumentProvider',
                        'Elixir.Absinthe.Plug.DocumentProvider.Compiled',
                        'Elixir.Absinthe.Plug.DocumentProvider.Compiled.Check',
                        'Elixir.Absinthe.Plug.DocumentProvider.Compiled.Writer',
                        'Elixir.Absinthe.Plug.DocumentProvider.Default',
                        'Elixir.Absinthe.Plug.GraphiQL',
                        'Elixir.Absinthe.Plug.GraphiQL.Assets',
                        'Elixir.Absinthe.Plug.Parser',
                        'Elixir.Absinthe.Plug.Request',
                        'Elixir.Absinthe.Plug.Request.Query',
                        'Elixir.Absinthe.Plug.Types',
                        'Elixir.Absinthe.Plug.Validation.HTTPMethod',
                        'Elixir.Mix.Absinthe.Plug.GraphiQL.AssetsTask',
                        'Elixir.Mix.Tasks.Absinthe.Plug.Graphiql.Assets.Download',
                        'Elixir.Mix.Tasks.Absinthe.Plug.Graphiql.Assets.Remove']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,absinthe,inets,logger,plug]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix,
                  [{description,
                       "Productive. Reliable. Fast. A productive web framework that\ndoes not compromise speed or maintainability.\n"},
                   {vsn,"1.5.9"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
                        'Elixir.Mix.Phoenix.Schema',
                        'Elixir.Mix.Tasks.Compile.Phoenix',
                        'Elixir.Mix.Tasks.Phx','Elixir.Mix.Tasks.Phx.Digest',
                        'Elixir.Mix.Tasks.Phx.Digest.Clean',
                        'Elixir.Mix.Tasks.Phx.Gen.Cert',
                        'Elixir.Mix.Tasks.Phx.Gen.Channel',
                        'Elixir.Mix.Tasks.Phx.Gen.Context',
                        'Elixir.Mix.Tasks.Phx.Gen.Embedded',
                        'Elixir.Mix.Tasks.Phx.Gen.Html',
                        'Elixir.Mix.Tasks.Phx.Gen.Json',
                        'Elixir.Mix.Tasks.Phx.Gen.Live',
                        'Elixir.Mix.Tasks.Phx.Gen.Presence',
                        'Elixir.Mix.Tasks.Phx.Gen.Schema',
                        'Elixir.Mix.Tasks.Phx.Gen.Secret',
                        'Elixir.Mix.Tasks.Phx.Routes',
                        'Elixir.Mix.Tasks.Phx.Server','Elixir.Phoenix',
                        'Elixir.Phoenix.ActionClauseError',
                        'Elixir.Phoenix.Channel',
                        'Elixir.Phoenix.Channel.Server',
                        'Elixir.Phoenix.ChannelTest',
                        'Elixir.Phoenix.ChannelTest.NoopSerializer',
                        'Elixir.Phoenix.CodeReloader',
                        'Elixir.Phoenix.CodeReloader.Proxy',
                        'Elixir.Phoenix.CodeReloader.Server',
                        'Elixir.Phoenix.Config','Elixir.Phoenix.ConnTest',
                        'Elixir.Phoenix.Controller',
                        'Elixir.Phoenix.Controller.Pipeline',
                        'Elixir.Phoenix.Digester','Elixir.Phoenix.Endpoint',
                        'Elixir.Phoenix.Endpoint.Cowboy2Adapter',
                        'Elixir.Phoenix.Endpoint.Cowboy2Handler',
                        'Elixir.Phoenix.Endpoint.CowboyAdapter',
                        'Elixir.Phoenix.Endpoint.CowboyWebSocket',
                        'Elixir.Phoenix.Endpoint.RenderErrors',
                        'Elixir.Phoenix.Endpoint.Supervisor',
                        'Elixir.Phoenix.Endpoint.Watcher',
                        'Elixir.Phoenix.Logger',
                        'Elixir.Phoenix.MissingParamError',
                        'Elixir.Phoenix.Naming',
                        'Elixir.Phoenix.NotAcceptableError',
                        'Elixir.Phoenix.Param','Elixir.Phoenix.Param.Any',
                        'Elixir.Phoenix.Param.Atom',
                        'Elixir.Phoenix.Param.BitString',
                        'Elixir.Phoenix.Param.Integer',
                        'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
                        'Elixir.Phoenix.Presence.Tracker',
                        'Elixir.Phoenix.Router',
                        'Elixir.Phoenix.Router.ConsoleFormatter',
                        'Elixir.Phoenix.Router.Helpers',
                        'Elixir.Phoenix.Router.MalformedURIError',
                        'Elixir.Phoenix.Router.NoRouteError',
                        'Elixir.Phoenix.Router.Resource',
                        'Elixir.Phoenix.Router.Route',
                        'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
                        'Elixir.Phoenix.Socket.Broadcast',
                        'Elixir.Phoenix.Socket.InvalidMessageError',
                        'Elixir.Phoenix.Socket.Message',
                        'Elixir.Phoenix.Socket.PoolSupervisor',
                        'Elixir.Phoenix.Socket.Reply',
                        'Elixir.Phoenix.Socket.Serializer',
                        'Elixir.Phoenix.Socket.Transport',
                        'Elixir.Phoenix.Socket.V1.JSONSerializer',
                        'Elixir.Phoenix.Socket.V2.JSONSerializer',
                        'Elixir.Phoenix.Template',
                        'Elixir.Phoenix.Template.EExEngine',
                        'Elixir.Phoenix.Template.Engine',
                        'Elixir.Phoenix.Template.ExsEngine',
                        'Elixir.Phoenix.Template.UndefinedError',
                        'Elixir.Phoenix.Token',
                        'Elixir.Phoenix.Transports.LongPoll',
                        'Elixir.Phoenix.Transports.LongPoll.Server',
                        'Elixir.Phoenix.Transports.WebSocket',
                        'Elixir.Phoenix.View',
                        'Elixir.Plug.Exception.Phoenix.ActionClauseError']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,crypto,eex,logger,phoenix_pubsub,
                        plug,plug_crypto,public_key,telemetry]},
                   {included_applications,[]},
                   {env,
                       [{logger,true},
                        {stacktrace_depth,nil},
                        {template_engines,[]},
                        {format_encoders,[]},
                        {filter_parameters,[<<"password">>]},
                        {serve_endpoints,false},
                        {gzippable_exts,
                            [<<".js">>,<<".css">>,<<".txt">>,<<".text">>,
                             <<".html">>,<<".json">>,<<".svg">>,<<".eot">>,
                             <<".ttf">>]},
                        {trim_on_html_eex_engine,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_html,
                  [{description,
                       "Phoenix view functions for working with HTML templates"},
                   {vsn,"2.14.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
                        'Elixir.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.FormData',
                        'Elixir.Phoenix.HTML.FormData.Atom',
                        'Elixir.Phoenix.HTML.FormData.Plug.Conn',
                        'Elixir.Phoenix.HTML.Format',
                        'Elixir.Phoenix.HTML.Link','Elixir.Phoenix.HTML.Safe',
                        'Elixir.Phoenix.HTML.Safe.Atom',
                        'Elixir.Phoenix.HTML.Safe.BitString',
                        'Elixir.Phoenix.HTML.Safe.Date',
                        'Elixir.Phoenix.HTML.Safe.DateTime',
                        'Elixir.Phoenix.HTML.Safe.Float',
                        'Elixir.Phoenix.HTML.Safe.Integer',
                        'Elixir.Phoenix.HTML.Safe.List',
                        'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.Safe.Time',
                        'Elixir.Phoenix.HTML.Safe.Tuple',
                        'Elixir.Phoenix.HTML.Tag']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,eex,logger,plug]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_view,
                  [{description,
                       "Rich, real-time user experiences with server-rendered HTML\n"},
                   {vsn,"0.15.7"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Phoenix.LiveView.Socket',
                        'Elixir.Inspect.Phoenix.LiveView.Socket.AssignsNotInSocket',
                        'Elixir.Inspect.Phoenix.LiveView.UploadConfig',
                        'Elixir.Inspect.Phoenix.LiveViewTest.Element',
                        'Elixir.Inspect.Phoenix.LiveViewTest.Upload',
                        'Elixir.Inspect.Phoenix.LiveViewTest.View',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveComponent.CID',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Component',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Comprehension',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Rendered',
                        'Elixir.Phoenix.LiveComponent',
                        'Elixir.Phoenix.LiveComponent.CID',
                        'Elixir.Phoenix.LiveView',
                        'Elixir.Phoenix.LiveView.Application',
                        'Elixir.Phoenix.LiveView.Channel',
                        'Elixir.Phoenix.LiveView.Component',
                        'Elixir.Phoenix.LiveView.Comprehension',
                        'Elixir.Phoenix.LiveView.Controller',
                        'Elixir.Phoenix.LiveView.Diff',
                        'Elixir.Phoenix.LiveView.Engine',
                        'Elixir.Phoenix.LiveView.Helpers',
                        'Elixir.Phoenix.LiveView.Plug',
                        'Elixir.Phoenix.LiveView.Rendered',
                        'Elixir.Phoenix.LiveView.Renderer',
                        'Elixir.Phoenix.LiveView.Router',
                        'Elixir.Phoenix.LiveView.Socket',
                        'Elixir.Phoenix.LiveView.Socket.AssignsNotInSocket',
                        'Elixir.Phoenix.LiveView.Static',
                        'Elixir.Phoenix.LiveView.Upload',
                        'Elixir.Phoenix.LiveView.UploadChannel',
                        'Elixir.Phoenix.LiveView.UploadConfig',
                        'Elixir.Phoenix.LiveView.UploadEntry',
                        'Elixir.Phoenix.LiveView.Utils',
                        'Elixir.Phoenix.LiveViewTest',
                        'Elixir.Phoenix.LiveViewTest.ClientProxy',
                        'Elixir.Phoenix.LiveViewTest.DOM',
                        'Elixir.Phoenix.LiveViewTest.Element',
                        'Elixir.Phoenix.LiveViewTest.Upload',
                        'Elixir.Phoenix.LiveViewTest.UploadClient',
                        'Elixir.Phoenix.LiveViewTest.View',
                        'Elixir.String.Chars.Phoenix.LiveComponent.CID']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,phoenix,phoenix_html,
                        telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveView.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,oban_web,
                  [{description,"Oban Web Component"},
                   {vsn,"2.7.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Oban.Web',
                        'Elixir.Oban.Web.BulkActionComponent',
                        'Elixir.Oban.Web.DashboardLive',
                        'Elixir.Oban.Web.DashboardView',
                        'Elixir.Oban.Web.DetailComponent',
                        'Elixir.Oban.Web.HeaderComponent',
                        'Elixir.Oban.Web.Helpers',
                        'Elixir.Oban.Web.LayoutView',
                        'Elixir.Oban.Web.ListingComponent',
                        'Elixir.Oban.Web.ListingRowComponent',
                        'Elixir.Oban.Web.NodeComponent',
                        'Elixir.Oban.Web.NotificationComponent',
                        'Elixir.Oban.Web.Plugins.Stats',
                        'Elixir.Oban.Web.Plugins.Stats.State',
                        'Elixir.Oban.Web.Query',
                        'Elixir.Oban.Web.QueueComponent',
                        'Elixir.Oban.Web.RefreshComponent',
                        'Elixir.Oban.Web.Resolver','Elixir.Oban.Web.Router',
                        'Elixir.Oban.Web.Search',
                        'Elixir.Oban.Web.SearchComponent',
                        'Elixir.Oban.Web.SidebarComponent',
                        'Elixir.Oban.Web.StateComponent',
                        'Elixir.Oban.Web.Telemetry',
                        'Elixir.Oban.Web.TimelineComponent',
                        'Elixir.Oban.Web.Timing']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,jason,logger,oban,phoenix,
                        phoenix_html,phoenix_live_view,phoenix_pubsub]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_ecto,
                  [{description,"Integration between Phoenix & Ecto"},
                   {vsn,"4.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.Ecto',
                        'Elixir.Phoenix.Ecto.CheckRepoStatus',
                        'Elixir.Phoenix.Ecto.PendingMigrationError',
                        'Elixir.Phoenix.Ecto.SQL.Sandbox',
                        'Elixir.Phoenix.Ecto.SQL.SandboxSession',
                        'Elixir.Phoenix.Ecto.StorageNotCreatedError',
                        'Elixir.Phoenix.HTML.FormData.Ecto.Changeset',
                        'Elixir.Phoenix.HTML.Safe.Decimal',
                        'Elixir.Plug.Exception.Ecto.CastError',
                        'Elixir.Plug.Exception.Ecto.NoResultsError',
                        'Elixir.Plug.Exception.Ecto.Query.CastError',
                        'Elixir.Plug.Exception.Ecto.StaleEntryError',
                        'Elixir.Plug.Exception.Ecto.SubQueryError',
                        'Elixir.Plug.Exception.Phoenix.Ecto.PendingMigrationError',
                        'Elixir.Plug.Exception.Phoenix.Ecto.StorageNotCreatedError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,ecto,logger,plug]},
                   {included_applications,[]},
                   {env,[{exclude_ecto_exceptions_from_plug,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.Ecto',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_metrics,
                  [{description,
                       "Provides a common interface for defining metrics based on Telemetry events.\n"},
                   {vsn,"0.6.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Telemetry.Metrics',
                        'Elixir.Telemetry.Metrics.ConsoleReporter',
                        'Elixir.Telemetry.Metrics.Counter',
                        'Elixir.Telemetry.Metrics.Distribution',
                        'Elixir.Telemetry.Metrics.LastValue',
                        'Elixir.Telemetry.Metrics.Sum',
                        'Elixir.Telemetry.Metrics.Summary']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_dashboard,
                  [{description,"Real-time performance dashboard for Phoenix"},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Phoenix.LiveDashboard.PageLive',
                        'Elixir.Phoenix.LiveDashboard',
                        'Elixir.Phoenix.LiveDashboard.AppInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.Application',
                        'Elixir.Phoenix.LiveDashboard.ApplicationsPage',
                        'Elixir.Phoenix.LiveDashboard.CardUsageComponent',
                        'Elixir.Phoenix.LiveDashboard.ChartComponent',
                        'Elixir.Phoenix.LiveDashboard.ColorBarComponent',
                        'Elixir.Phoenix.LiveDashboard.ColorBarLegendComponent',
                        'Elixir.Phoenix.LiveDashboard.EctoStatsPage',
                        'Elixir.Phoenix.LiveDashboard.EtsInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.EtsPage',
                        'Elixir.Phoenix.LiveDashboard.Helpers',
                        'Elixir.Phoenix.LiveDashboard.HomePage',
                        'Elixir.Phoenix.LiveDashboard.LayoutView',
                        'Elixir.Phoenix.LiveDashboard.LoggerPubSubBackend',
                        'Elixir.Phoenix.LiveDashboard.MetricsPage',
                        'Elixir.Phoenix.LiveDashboard.ModalComponent',
                        'Elixir.Phoenix.LiveDashboard.NavBarComponent',
                        'Elixir.Phoenix.LiveDashboard.OSMonPage',
                        'Elixir.Phoenix.LiveDashboard.PageBuilder',
                        'Elixir.Phoenix.LiveDashboard.PageLive',
                        'Elixir.Phoenix.LiveDashboard.PageNotFound',
                        'Elixir.Phoenix.LiveDashboard.PortInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.PortsPage',
                        'Elixir.Phoenix.LiveDashboard.ProcessInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.ProcessesPage',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Line',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Node',
                        'Elixir.Phoenix.LiveDashboard.RequestLogger',
                        'Elixir.Phoenix.LiveDashboard.RequestLoggerPage',
                        'Elixir.Phoenix.LiveDashboard.Router',
                        'Elixir.Phoenix.LiveDashboard.SocketInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.SocketsPage',
                        'Elixir.Phoenix.LiveDashboard.SystemInfo',
                        'Elixir.Phoenix.LiveDashboard.TableComponent',
                        'Elixir.Phoenix.LiveDashboard.TelemetryListener',
                        'Elixir.Phoenix.LiveDashboard.TitleBarComponent',
                        'Elixir.Phoenix.LiveDashboard.Web']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,phoenix_html,
                        phoenix_live_view,telemetry_metrics]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveDashboard.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"2.11.0"},
                   {id,[]},
                   {modules,
                       [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,
                        cow_http2,cow_http2_machine,cow_http_hd,
                        cow_http_struct_hd,cow_http_te,cow_iolists,cow_link,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy,cow_sse,
                        cow_uri,cow_uri_template,cow_ws]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.8.0"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_crc32c,ranch_listener_sup,
                        ranch_protocol,ranch_proxy_header,ranch_server,
                        ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib,ssl]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modern HTTP server."},
                   {vsn,"2.9.0"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_children,
                        cowboy_clear,cowboy_clock,cowboy_compress_h,
                        cowboy_constraints,cowboy_handler,cowboy_http,
                        cowboy_http2,cowboy_loop,cowboy_metrics_h,
                        cowboy_middleware,cowboy_req,cowboy_rest,
                        cowboy_router,cowboy_static,cowboy_stream,
                        cowboy_stream_h,cowboy_sub_protocol,cowboy_sup,
                        cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
                   {registered,[cowboy_sup,cowboy_clock]},
                   {applications,[kernel,stdlib,cowlib,crypto,ranch]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy_telemetry,
                  [{description,"Telemetry instrumentation for Cowboy"},
                   {vsn,"0.3.1"},
                   {id,[]},
                   {modules,[cowboy_telemetry_h]},
                   {registered,[]},
                   {applications,[kernel,stdlib,telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug_cowboy,
                  [{description,"A Plug adapter for Cowboy"},
                   {vsn,"2.5.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
                        'Elixir.Plug.Cowboy.Drainer',
                        'Elixir.Plug.Cowboy.Handler',
                        'Elixir.Plug.Cowboy.Translator']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,cowboy,cowboy_telemetry,logger,
                        plug,telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Cowboy',[]}}]}]}},
     {apply,
         {application,load,
             [{application,remote_ip,
                  [{description,
                       "A plug to rewrite the Plug.Conn's remote_ip based on request headers such as Forwarded, X-Forwarded-For, X-Client-Ip, and X-Real-Ip"},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.RemoteIp','Elixir.RemoteIp.Block',
                        'Elixir.RemoteIp.Debugger','Elixir.RemoteIp.Headers',
                        'Elixir.RemoteIp.Options','Elixir.RemoteIp.Parser',
                        'Elixir.RemoteIp.Parsers.Forwarded',
                        'Elixir.RemoteIp.Parsers.Generic',
                        'Elixir.String.Chars.RemoteIp.Block']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,combine,logger,plug]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_poller,
                  [{description,
                       "Periodically collect measurements and dispatch them as Telemetry events."},
                   {vsn,"0.5.1"},
                   {id,[]},
                   {modules,
                       [telemetry_poller,telemetry_poller_app,
                        telemetry_poller_builtin,telemetry_poller_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,telemetry]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_poller_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,countdownplus_web,
                  [{description,"countdownplus_web"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.CountdownplusWeb',
                        'Elixir.CountdownplusWeb.Application',
                        'Elixir.CountdownplusWeb.CredentialAuth',
                        'Elixir.CountdownplusWeb.CredentialConfirmationController',
                        'Elixir.CountdownplusWeb.CredentialConfirmationView',
                        'Elixir.CountdownplusWeb.CredentialRegistrationController',
                        'Elixir.CountdownplusWeb.CredentialRegistrationView',
                        'Elixir.CountdownplusWeb.CredentialResetPasswordController',
                        'Elixir.CountdownplusWeb.CredentialResetPasswordView',
                        'Elixir.CountdownplusWeb.CredentialSessionController',
                        'Elixir.CountdownplusWeb.CredentialSessionView',
                        'Elixir.CountdownplusWeb.CredentialSettingsController',
                        'Elixir.CountdownplusWeb.CredentialSettingsView',
                        'Elixir.CountdownplusWeb.Endpoint',
                        'Elixir.CountdownplusWeb.ErrorHelpers',
                        'Elixir.CountdownplusWeb.ErrorView',
                        'Elixir.CountdownplusWeb.Gettext',
                        'Elixir.CountdownplusWeb.LayoutView',
                        'Elixir.CountdownplusWeb.PageLive',
                        'Elixir.CountdownplusWeb.Router',
                        'Elixir.CountdownplusWeb.Router.Helpers',
                        'Elixir.CountdownplusWeb.Schema',
                        'Elixir.CountdownplusWeb.Schema.Compiled',
                        'Elixir.CountdownplusWeb.Schema.Types.Enums',
                        'Elixir.CountdownplusWeb.Schema.Types.Queries',
                        'Elixir.CountdownplusWeb.Telemetry',
                        'Elixir.CountdownplusWeb.UserSocket',
                        'Elixir.Mix.Tasks.Cplus.Build.Release',
                        'Elixir.Mix.Tasks.Cplus.Gen.GqlSchema',
                        'Elixir.Mix.Tasks.Cplus.Utils']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,countdownplus,absinthe,
                        absinthe_plug,bamboo,gettext,jason,logger,
                        new_relic_agent,oban_web,phoenix,phoenix_ecto,
                        phoenix_html,phoenix_live_dashboard,phoenix_live_view,
                        plug_cowboy,remote_ip,runtime_tools,telemetry_metrics,
                        telemetry_poller]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.CountdownplusWeb.Application',[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{'Elixir.Config.Provider',boot,[]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{application,start_boot,[eex,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[certifi,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[unicode_util_compat,permanent]}},
     {apply,{application,start_boot,[idna,permanent]}},
     {apply,{application,start_boot,[metrics,permanent]}},
     {apply,{application,start_boot,[mimerl,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[parse_trans,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[ssl_verify_fun,permanent]}},
     {apply,{application,start_boot,[hackney,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[mime,permanent]}},
     {apply,{application,start_boot,[plug_crypto,permanent]}},
     {apply,{application,start_boot,[telemetry,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[bamboo,permanent]}},
     {apply,{application,start_boot,[ex_aws,permanent]}},
     {apply,{application,start_boot,[ex_aws_ses,permanent]}},
     {apply,{application,start_boot,[jason,permanent]}},
     {apply,{application,start_boot,[mail,permanent]}},
     {apply,{application,start_boot,[bamboo_ses,permanent]}},
     {apply,{application,start_boot,[comeonin,permanent]}},
     {apply,{application,start_boot,[bcrypt_elixir,permanent]}},
     {apply,{application,start_boot,[bodyguard,permanent]}},
     {apply,{application,start_boot,[decimal,permanent]}},
     {apply,{application,start_boot,[ecto,permanent]}},
     {apply,{application,start_boot,[slugger,permanent]}},
     {apply,{application,start_boot,[ecto_autoslug_field,permanent]}},
     {apply,{application,start_boot,[connection,permanent]}},
     {apply,{application,start_boot,[db_connection,permanent]}},
     {apply,{application,start_boot,[ecto_sql,permanent]}},
     {apply,{application,start_boot,[ecto_enum,permanent]}},
     {apply,{application,start_boot,[postgrex,permanent]}},
     {apply,{application,start_boot,[ecto_network,permanent]}},
     {apply,{application,start_boot,[ecto_soft_delete,permanent]}},
     {apply,{application,start_boot,[castore,permanent]}},
     {apply,{application,start_boot,[mint,permanent]}},
     {apply,{application,start_boot,[emojix,permanent]}},
     {apply,{application,start_boot,[ex_aws_s3,permanent]}},
     {apply,{application,start_boot,[inets,permanent]}},
     {apply,{application,start_boot,[cldr_utils,permanent]}},
     {apply,{application,start_boot,[ex_unit,permanent]}},
     {apply,{application,start_boot,[ex_cldr,permanent]}},
     {apply,{application,start_boot,[ex_cldr_territories,permanent]}},
     {apply,{application,start_boot,[excal,permanent]}},
     {apply,{application,start_boot,[geo,permanent]}},
     {apply,{application,start_boot,[geo_postgis,permanent]}},
     {apply,{application,start_boot,[inflex,permanent]}},
     {apply,{application,start_boot,[rustler,permanent]}},
     {apply,{application,start_boot,[mjml,permanent]}},
     {apply,{application,start_boot,[os_mon,permanent]}},
     {apply,{application,start_boot,[new_relic_agent,permanent]}},
     {apply,{application,start_boot,[oban,permanent]}},
     {apply,{application,start_boot,[oban_pro,permanent]}},
     {apply,{application,start_boot,[phoenix_pubsub,permanent]}},
     {apply,{application,start_boot,[query_builder,permanent]}},
     {apply,{application,start_boot,[runtime_tools,permanent]}},
     {apply,{application,start_boot,[slugify,permanent]}},
     {apply,{application,start_boot,[combine,permanent]}},
     {apply,{application,start_boot,[gettext,permanent]}},
     {apply,{application,start_boot,[tzdata,permanent]}},
     {apply,{application,start_boot,[timex,permanent]}},
     {apply,{application,start_boot,[trans,permanent]}},
     {apply,{application,start_boot,[countdownplus,permanent]}},
     {apply,{application,start_boot,[nimble_parsec,permanent]}},
     {apply,{application,start_boot,[absinthe,permanent]}},
     {apply,{application,start_boot,[absinthe_plug,permanent]}},
     {apply,{application,start_boot,[phoenix,permanent]}},
     {apply,{application,start_boot,[phoenix_html,permanent]}},
     {apply,{application,start_boot,[phoenix_live_view,permanent]}},
     {apply,{application,start_boot,[oban_web,permanent]}},
     {apply,{application,start_boot,[phoenix_ecto,permanent]}},
     {apply,{application,start_boot,[telemetry_metrics,permanent]}},
     {apply,{application,start_boot,[phoenix_live_dashboard,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[cowboy_telemetry,permanent]}},
     {apply,{application,start_boot,[plug_cowboy,permanent]}},
     {apply,{application,start_boot,[remote_ip,permanent]}},
     {apply,{application,start_boot,[telemetry_poller,permanent]}},
     {apply,{application,start_boot,[countdownplus_web,permanent]}},
     {progress,started}]}.
