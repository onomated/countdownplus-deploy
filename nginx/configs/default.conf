upstream web_upstream {
  server web:3000;
}

upstream backend_upstream {
  server backend:4000;
  keepalive 256;
}

upstream imgproxy_upstream {
  server imgproxy:8080;
}

# https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_docker.container.console.html#docker-env-cfg.healthd-logging
# https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-serverlogs.html
log_format healthd '$msec"$uri"'
                '$status"$request_time"$upstream_response_time"'
                '$http_x_forwarded_for';

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_tokens off;

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Port $server_port;
  proxy_set_header X-Forwarded-Host $host;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/plain text/css image/svg+xml application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  
  access_log /var/log/nginx/access.log main;

  # Include Elastic Beanstalk health check logs
  # Since the log path has variables several conditions must be met:
  #   https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log
  #   /var/log/nginx/healthd/ must be accessible by worker user - nginx:nginx
  #   root must be specified even though we're not serving static files. Point to nginx default: /usr/share/nginx/html
  if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
    set $year $1;
    set $month $2;
    set $day $3;
    set $hour $4;
  }
  access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
  root /usr/share/nginx/html;

  # Support asset uploads up to 32M
  # https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
  client_max_body_size 32M;

  # Location documentation: http://nginx.org/en/docs/http/ngx_http_core_module.html#location
  # Pay attention to trailing slashes

  # Backend standard http paths
  location /workers {
    proxy_pass http://backend_upstream/workers/;
  }

  location /monitor {
    proxy_pass http://backend_upstream/monitor/;
  }

  location /gql {
    proxy_pass http://backend_upstream/gql/;
  }

  # Backend websocket paths
  location /live {

    # https://nginx.org/en/docs/http/websocket.html
    # https://www.nginx.com/blog/websocket-nginx/
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    
    # Double on read timeouts to minimize nginx connection disconnects
    # See note on websocket connection timeout here:
    # https://nginx.org/en/docs/http/websocket.html
    # Learn about timeouts:
    # https://www.youtube.com/watch?v=QbmOyr0HwnM
    proxy_read_timeout 120;

    proxy_pass http://backend_upstream/live/;
  }

  # Image proxy server
  location /image-server/ {
    proxy_pass http://imgproxy_upstream/;
  }

  # Route root to web
  location / {
    proxy_pass http://web_upstream/;
  }
}